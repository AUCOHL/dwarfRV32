
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.6+138 (git sha1 7cddab0, gcc 4.7.4 -fPIC -Os)


-- Executing script file `rv32_CPU_v2.ys' --

1. Executing Liberty frontend.
Imported 625 cell types from liberty file.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/ef-design/projects/dwarfRV32/qflow/source/rv32.v' to AST representation.
Generating RTLIL representation for module `\rv32Counters'.
Generating RTLIL representation for module `\rv32dec'.
Generating RTLIL representation for module `\rv32i_pcunit'.
Generating RTLIL representation for module `\rv32PCUnit'.
Generating RTLIL representation for module `\rv32i_alu'.
Generating RTLIL representation for module `\mul'.
Generating RTLIL representation for module `\rv32i_branch_unit'.
Generating RTLIL representation for module `\rv32i_imm_gen'.
Generating RTLIL representation for module `\rv32i_extender'.
Generating RTLIL representation for module `\rv32CU'.
Generating RTLIL representation for module `\rv32_CPU_v2'.
Successfully finished Verilog frontend.

3. Executing ALUMACC pass (create $alu and $macc cells).
Warning: Ignoring module rv32_CPU_v2 because it contains processes (run 'proc' command first).
Warning: Ignoring module rv32CU because it contains processes (run 'proc' command first).
Warning: Ignoring module rv32i_extender because it contains processes (run 'proc' command first).
Warning: Ignoring module rv32i_imm_gen because it contains processes (run 'proc' command first).
Warning: Ignoring module rv32i_branch_unit because it contains processes (run 'proc' command first).
Warning: Ignoring module mul because it contains processes (run 'proc' command first).
Extracting $alu and $macc cells in module rv32i_alu:
  creating $macc model for $add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:377$81 ($add).
  creating $macc model for $add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:377$80 ($add).
  merging $macc model for $add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:377$80 into $add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:377$81.
  creating $macc cell for $add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:377$81: $auto$alumacc.cc:354:replace_macc$256
  created 0 $alu and 1 $macc cells.
Warning: Ignoring module rv32PCUnit because it contains processes (run 'proc' command first).
Warning: Ignoring module rv32i_pcunit because it contains processes (run 'proc' command first).
Extracting $alu and $macc cells in module rv32dec:
  created 0 $alu and 0 $macc cells.
Warning: Ignoring module rv32Counters because it contains processes (run 'proc' command first).

4. Executing SYNTH pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.1.1. Analyzing design hierarchy..
Top module:  \rv32_CPU_v2
Used module:     \rv32CU
Used module:         \rv32i_branch_unit
Used module:         \rv32dec
Used module:     \rv32PCUnit
Used module:     \rv32i_extender
Used module:     \rv32i_alu
Used module:     \rv32i_imm_gen
Used module:     \rv32Counters

4.1.2. Analyzing design hierarchy..
Top module:  \rv32_CPU_v2
Used module:     \rv32CU
Used module:         \rv32i_branch_unit
Used module:         \rv32dec
Used module:     \rv32PCUnit
Used module:     \rv32i_extender
Used module:     \rv32i_alu
Used module:     \rv32i_imm_gen
Used module:     \rv32Counters
Removing unused module `\mul'.
Removing unused module `\rv32i_pcunit'.
Removed 2 unused modules.

4.2. Executing PROC pass (convert processes to netlists).

4.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.2.3. Executing PROC_INIT pass (extract init attributes).

4.2.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:978$253'.
Found async reset \rst in `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:892$242'.
Found async reset \rst in `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:883$239'.
Found async reset \rst in `\rv32PCUnit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:333$37'.
Found async reset \rst in `\rv32PCUnit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:326$33'.
Found async reset \rst in `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:724$160'.
Found async reset \rst in `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:707$155'.
Found async reset \rst in `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:694$152'.
Found async reset \rst in `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:632$145'.
Found async reset \rst in `\rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:241$6'.
Found async reset \rst in `\rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:236$4'.
Found async reset \rst in `\rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:231$1'.

4.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\rv32i_extender.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:515$130'.
     1/4: $3\do[31:0]
     2/4: $2\do[31:0]
     3/4: $1\do[31:0]
     4/4: $0\do[31:0]
Creating decoders for process `\rv32i_imm_gen.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:487$129'.
     1/2: $1\imm[31:0]
     2/2: $0\imm[31:0]
Creating decoders for process `\rv32i_branch_unit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:463$124'.
     1/2: $1\taken[0:0]
     2/2: $0\taken[0:0]
Creating decoders for process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:978$253'.
     1/1: $0\RES[31:0]
Creating decoders for process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:952$247'.
     1/1: $0\R[31:0]
Creating decoders for process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:906$244'.
     1/1: $0\R2[31:0]
Creating decoders for process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:899$243'.
     1/1: $0\R1[31:0]
Creating decoders for process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:892$242'.
     1/1: $0\PC1[31:0]
Creating decoders for process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:889$241'.
     1/1: $0\I1[31:0]
Creating decoders for process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:883$239'.
     1/1: $0\IR[31:0]
Creating decoders for process `\rv32PCUnit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:333$37'.
     1/1: $0\ePC[31:0]
Creating decoders for process `\rv32PCUnit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:326$33'.
     1/1: $0\PC[31:0]
Creating decoders for process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:724$160'.
     1/1: $0\cu_ext_start[0:0]
Creating decoders for process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:715$156'.
     1/4: $0\CF[0:0]
     2/4: $0\SF[0:0]
     3/4: $0\ZF[0:0]
     4/4: $0\VF[0:0]
Creating decoders for process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:707$155'.
     1/1: $0\IR2[31:0]
Creating decoders for process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:694$152'.
     1/1: $0\IR1[31:0]
Creating decoders for process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:632$145'.
     1/1: $0\cyc[0:0]
Creating decoders for process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:627$143'.
     1/1: $0\ISRMode[0:0]
Creating decoders for process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:622$141'.
     1/1: $0\TMRIF[0:0]
Creating decoders for process `\rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:241$6'.
     1/1: $0\UIE[2:0]
Creating decoders for process `\rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:236$4'.
     1/1: $0\Cycle[31:0]
Creating decoders for process `\rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:231$1'.
     1/1: $0\Timer[31:0]

4.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\rv32i_extender.\do' from process `\rv32i_extender.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:515$130'.
No latch inferred for signal `\rv32i_imm_gen.\imm' from process `\rv32i_imm_gen.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:487$129'.
No latch inferred for signal `\rv32i_branch_unit.\taken' from process `\rv32i_branch_unit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:463$124'.

4.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\rv32_CPU_v2.\RES' using process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:978$253'.
  created $adff cell `$procdff$385' with positive edge clock and positive level reset.
Creating register for signal `\rv32_CPU_v2.\R' using process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:952$247'.
  created $dff cell `$procdff$386' with positive edge clock.
Creating register for signal `\rv32_CPU_v2.\R2' using process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:906$244'.
  created $dff cell `$procdff$387' with positive edge clock.
Creating register for signal `\rv32_CPU_v2.\R1' using process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:899$243'.
  created $dff cell `$procdff$388' with positive edge clock.
Creating register for signal `\rv32_CPU_v2.\PC1' using process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:892$242'.
  created $adff cell `$procdff$389' with positive edge clock and positive level reset.
Creating register for signal `\rv32_CPU_v2.\I1' using process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:889$241'.
  created $dff cell `$procdff$390' with positive edge clock.
Creating register for signal `\rv32_CPU_v2.\IR' using process `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:883$239'.
  created $adff cell `$procdff$391' with positive edge clock and positive level reset.
Creating register for signal `\rv32PCUnit.\ePC' using process `\rv32PCUnit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:333$37'.
  created $adff cell `$procdff$392' with positive edge clock and positive level reset.
Creating register for signal `\rv32PCUnit.\PC' using process `\rv32PCUnit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:326$33'.
  created $adff cell `$procdff$393' with positive edge clock and positive level reset.
Creating register for signal `\rv32CU.\cu_ext_start' using process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:724$160'.
  created $adff cell `$procdff$394' with positive edge clock and positive level reset.
Creating register for signal `\rv32CU.\VF' using process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:715$156'.
  created $dff cell `$procdff$395' with positive edge clock.
Creating register for signal `\rv32CU.\ZF' using process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:715$156'.
  created $dff cell `$procdff$396' with positive edge clock.
Creating register for signal `\rv32CU.\SF' using process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:715$156'.
  created $dff cell `$procdff$397' with positive edge clock.
Creating register for signal `\rv32CU.\CF' using process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:715$156'.
  created $dff cell `$procdff$398' with positive edge clock.
Creating register for signal `\rv32CU.\IR2' using process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:707$155'.
  created $adff cell `$procdff$399' with positive edge clock and positive level reset.
Creating register for signal `\rv32CU.\IR1' using process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:694$152'.
  created $adff cell `$procdff$400' with positive edge clock and positive level reset.
Creating register for signal `\rv32CU.\cyc' using process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:632$145'.
  created $adff cell `$procdff$401' with positive edge clock and positive level reset.
Creating register for signal `\rv32CU.\ISRMode' using process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:627$143'.
  created $dff cell `$procdff$402' with positive edge clock.
Creating register for signal `\rv32CU.\TMRIF' using process `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:622$141'.
  created $dff cell `$procdff$403' with positive edge clock.
Creating register for signal `\rv32Counters.\UIE' using process `\rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:241$6'.
  created $adff cell `$procdff$404' with positive edge clock and positive level reset.
Creating register for signal `\rv32Counters.\Cycle' using process `\rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:236$4'.
  created $adff cell `$procdff$405' with positive edge clock and positive level reset.
Creating register for signal `\rv32Counters.\Timer' using process `\rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:231$1'.
  created $adff cell `$procdff$406' with positive edge clock and positive level reset.

4.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 3 empty switches in `\rv32i_extender.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:515$130'.
Removing empty process `rv32i_extender.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:515$130'.
Found and cleaned up 1 empty switch in `\rv32i_imm_gen.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:487$129'.
Removing empty process `rv32i_imm_gen.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:487$129'.
Found and cleaned up 1 empty switch in `\rv32i_branch_unit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:463$124'.
Removing empty process `rv32i_branch_unit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:463$124'.
Found and cleaned up 1 empty switch in `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:978$253'.
Removing empty process `rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:978$253'.
Found and cleaned up 2 empty switches in `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:952$247'.
Removing empty process `rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:952$247'.
Found and cleaned up 2 empty switches in `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:906$244'.
Removing empty process `rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:906$244'.
Found and cleaned up 2 empty switches in `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:899$243'.
Removing empty process `rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:899$243'.
Found and cleaned up 1 empty switch in `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:892$242'.
Removing empty process `rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:892$242'.
Found and cleaned up 1 empty switch in `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:889$241'.
Removing empty process `rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:889$241'.
Found and cleaned up 1 empty switch in `\rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:883$239'.
Removing empty process `rv32_CPU_v2.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:883$239'.
Found and cleaned up 1 empty switch in `\rv32PCUnit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:333$37'.
Removing empty process `rv32PCUnit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:333$37'.
Found and cleaned up 2 empty switches in `\rv32PCUnit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:326$33'.
Removing empty process `rv32PCUnit.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:326$33'.
Found and cleaned up 1 empty switch in `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:724$160'.
Removing empty process `rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:724$160'.
Found and cleaned up 1 empty switch in `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:715$156'.
Removing empty process `rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:715$156'.
Found and cleaned up 1 empty switch in `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:707$155'.
Removing empty process `rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:707$155'.
Found and cleaned up 3 empty switches in `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:694$152'.
Removing empty process `rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:694$152'.
Removing empty process `rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:632$145'.
Found and cleaned up 3 empty switches in `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:627$143'.
Removing empty process `rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:627$143'.
Found and cleaned up 3 empty switches in `\rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:622$141'.
Removing empty process `rv32CU.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:622$141'.
Found and cleaned up 1 empty switch in `\rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:241$6'.
Removing empty process `rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:241$6'.
Found and cleaned up 1 empty switch in `\rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:236$4'.
Removing empty process `rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:236$4'.
Found and cleaned up 2 empty switches in `\rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:231$1'.
Removing empty process `rv32Counters.$proc$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:231$1'.
Cleaned up 34 empty switches.

4.3. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$procmux$268_CMP0' in module `rv32i_extender' with $logic_not.
Replacing $eq cell `$procmux$260_CMP0' in module `rv32i_extender' with $logic_not.
Replacing $eq cell `$procmux$288_CMP0' in module `rv32i_branch_unit' with $logic_not.
Replacing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:838$233' in module `rv32_CPU_v2' with $logic_not.
Replacing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:837$231' in module `rv32_CPU_v2' with $logic_not.
Optimizing away select inverter for $mux cell `$procmux$296' in module `rv32_CPU_v2'.
Optimizing away select inverter for $mux cell `$procmux$317' in module `rv32_CPU_v2'.
Replacing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:358$44' (1) in module `\rv32i_alu' with constant driver `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:358$44_Y = \IorR'.
Replacing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:359$51' (1) in module `\rv32i_alu' with constant driver `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:359$51_Y = \IorR'.
Replacing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:360$56' (1) in module `\rv32i_alu' with constant driver `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:360$56_Y = \IorR'.
Replacing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:361$59' (1) in module `\rv32i_alu' with constant driver `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:361$59_Y = \IorR'.
Replacing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:363$63' in module `rv32i_alu' with $logic_not.
Replacing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:364$64' in module `rv32i_alu' with $logic_not.
Replacing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:365$68' in module `rv32i_alu' with $logic_not.
Replacing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:366$71' in module `rv32i_alu' with $logic_not.
Replacing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:402$105' in module `rv32i_alu' with $logic_not.
Optimizing away select inverter for $mux cell `$procmux$324' in module `rv32PCUnit'.
Replacing $ne cell `$ne$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:746$169' in module `rv32CU' with $logic_not.
Replacing $ne cell `$ne$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$194' in module `rv32CU' with $logic_not.
Replacing $ne cell `$ne$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$207' in module `rv32CU' with $logic_not.
Optimizing away select inverter for $mux cell `$procmux$348' in module `rv32CU'.
Replacing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:275$13' in module `rv32dec' with $logic_not.
Replacing $ne cell `$ne$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:234$2' in module `rv32Counters' with $logic_not.

4.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32_CPU_v2..
  removing unused `$not' cell `$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:887$240'.
  removing unused `$not' cell `$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:953$248'.
Finding unused cells or wires in module \rv32i_alu..
  removing unused `$eq' cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:362$62'.
  removing unused `$logic_not' cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:363$63'.
  removing unused `$logic_not' cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:364$64'.
  removing unused `$and' cell `$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:364$65'.
  removing unused `$not' cell `$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:364$66'.
  removing unused `$and' cell `$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:364$67'.
  removing unused `$logic_not' cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:366$71'.
  removing unused `$and' cell `$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:366$72'.
  removing unused `$eq' cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:367$73'.
  removing unused `$eq' cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:368$74'.
  removing unused `$add' cell `$add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:377$80'.
  removing unused non-port wire \instr_auipc.
  removing unused non-port wire \instr_lui.
  removing unused non-port wire \instr_addi.
  removing unused non-port wire \instr_add.
  removing unused non-port wire \instr_load.
  removing unused non-port wire \instr_store.
  removed 6 unused temporary wires.
Finding unused cells or wires in module \rv32PCUnit..
  removing unused `$not' cell `$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:330$34'.
Finding unused cells or wires in module \rv32CU..
  removing unused `$not' cell `$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:705$154'.
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32Counters..

4.5. Executing CHECK pass (checking for obvious problems).
checking module rv32CU..
checking module rv32Counters..
checking module rv32PCUnit..
checking module rv32_CPU_v2..
checking module rv32dec..
checking module rv32i_alu..
checking module rv32i_branch_unit..
checking module rv32i_extender..
checking module rv32i_imm_gen..
found and reported 0 problems.

4.6. Executing OPT pass (performing simple optimizations).

4.6.1. Executing OPT_EXPR pass (perform const folding).

4.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
  Cell `$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:775$228' is identical to cell `$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:629$144'.
    Redirecting output \Y: $and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:775$228_Y = $and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:629$144_Y
    Removing $and cell `$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:775$228' from module `\rv32CU'.
  Cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:772$220' is identical to cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$216'.
    Redirecting output \Y: $eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:772$220_Y = $eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$216_Y
    Removing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:772$220' from module `\rv32CU'.
  Cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:773$224' is identical to cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$216'.
    Redirecting output \Y: $eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:773$224_Y = $eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$216_Y
    Removing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:773$224' from module `\rv32CU'.
  Cell `$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:716$157' is identical to cell `$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:634$146'.
    Redirecting output \Y: $not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:716$157_Y = $0\cyc[0:0]
    Removing $not cell `$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:716$157' from module `\rv32CU'.
  Cell `$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:745$168' is identical to cell `$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:634$146'.
    Redirecting output \Y: $not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:745$168_Y = $0\cyc[0:0]
    Removing $not cell `$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:745$168' from module `\rv32CU'.
  Cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:620$140' is identical to cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:618$133'.
    Redirecting output \Y: \cu_sel_epc = $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:618$133_Y
    Removing $or cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:620$140' from module `\rv32CU'.
  Cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:752$196' is identical to cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:749$180'.
    Redirecting output \Y: $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:752$196_Y = $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:749$180_Y
    Removing $or cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:752$196' from module `\rv32CU'.
  Cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$201' is identical to cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$188'.
    Redirecting output \Y: $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$201_Y = $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$188_Y
    Removing $or cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$201' from module `\rv32CU'.
  Cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$202' is identical to cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$189'.
    Redirecting output \Y: $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$202_Y = $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$189_Y
    Removing $or cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$202' from module `\rv32CU'.
  Cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$203' is identical to cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$190'.
    Redirecting output \Y: $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$203_Y = $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$190_Y
    Removing $or cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$203' from module `\rv32CU'.
  Cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$204' is identical to cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$191'.
    Redirecting output \Y: $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$204_Y = $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$191_Y
    Removing $or cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$204' from module `\rv32CU'.
  Cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$205' is identical to cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$192'.
    Redirecting output \Y: $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$205_Y = $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$192_Y
    Removing $or cell `$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$205' from module `\rv32CU'.
  Cell `$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:772$221' is identical to cell `$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$217'.
    Redirecting output \Y: $and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:772$221_Y = $and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$217_Y
    Removing $and cell `$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:772$221' from module `\rv32CU'.
  Cell `$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:773$225' is identical to cell `$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$217'.
    Redirecting output \Y: $and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:773$225_Y = $and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$217_Y
    Removing $and cell `$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:773$225' from module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
  Cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:381$82' is identical to cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:358$46'.
    Redirecting output \Y: $eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:381$82_Y = $eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:358$46_Y
    Removing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:381$82' from module `\rv32i_alu'.
  Cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:382$85' is identical to cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:358$48'.
    Redirecting output \Y: $eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:382$85_Y = $eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:358$48_Y
    Removing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:382$85' from module `\rv32i_alu'.
  Cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:386$91' is identical to cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:355$41'.
    Redirecting output \Y: $eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:386$91_Y = \I
    Removing $eq cell `$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:386$91' from module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
  Cell `$procmux$267_CMP0' is identical to cell `$procmux$259_CMP0'.
    Redirecting output \Y: $procmux$267_CMP = $procmux$259_CMP
    Removing $eq cell `$procmux$267_CMP0' from module `\rv32i_extender'.
  Cell `$procmux$268_CMP0' is identical to cell `$procmux$260_CMP0'.
    Redirecting output \Y: $procmux$268_CMP = $procmux$260_CMP
    Removing $logic_not cell `$procmux$268_CMP0' from module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 19 cells.

4.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rv32CU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$332 (pure)
    Root of a mux tree: $procmux$335 (pure)
    Root of a mux tree: $procmux$338 (pure)
    Root of a mux tree: $procmux$341 (pure)
    Root of a mux tree: $procmux$344 (pure)
    Root of a mux tree: $procmux$353 (pure)
    Root of a mux tree: $procmux$362 (pure)
    Root of a mux tree: $procmux$371 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32Counters..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$374 (pure)
    Root of a mux tree: $procmux$377 (pure)
    Root of a mux tree: $procmux$383 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32PCUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$320 (pure)
    Root of a mux tree: $procmux$326 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$30 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:323$32
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32_CPU_v2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$290 (pure)
    Root of a mux tree: $procmux$296 (pure)
    Root of a mux tree: $procmux$302 (pure)
    Root of a mux tree: $procmux$308 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$314 (pure)
    Root of a mux tree: $procmux$317 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$237 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:922$245 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:923$246 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:976$252
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:994$254 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:996$255 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32dec..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:386$92 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:399$104 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_branch_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$282 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_extender..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$272 (pure)
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$262.
    dead port 2/2 on $mux $procmux$269.
Running muxtree optimizer on module \rv32i_imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$275 (pure)
  Analyzing evaluation results.
Removed 2 multiplexer ports.

4.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32CU.
  Optimizing cells in module \rv32Counters.
  Optimizing cells in module \rv32PCUnit.
  Optimizing cells in module \rv32_CPU_v2.
  Optimizing cells in module \rv32dec.
  Optimizing cells in module \rv32i_alu.
  Optimizing cells in module \rv32i_branch_unit.
  Optimizing cells in module \rv32i_extender.
  Optimizing cells in module \rv32i_imm_gen.
    New ctrl vector for $pmux cell $procmux$275: { $procmux$280_CMP $auto$opt_reduce.cc:132:opt_mux$408 $procmux$277_CMP $procmux$276_CMP }
  Optimizing cells in module \rv32i_imm_gen.
Performed a total of 1 changes.

4.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 0 cells.

4.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

4.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

4.6.8. Executing OPT_EXPR pass (perform const folding).

4.6.9. Rerunning OPT passes. (Maybe there is more to do..)

4.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rv32CU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$332 (pure)
    Root of a mux tree: $procmux$335 (pure)
    Root of a mux tree: $procmux$338 (pure)
    Root of a mux tree: $procmux$341 (pure)
    Root of a mux tree: $procmux$344 (pure)
    Root of a mux tree: $procmux$353 (pure)
    Root of a mux tree: $procmux$362 (pure)
    Root of a mux tree: $procmux$371 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32Counters..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$374 (pure)
    Root of a mux tree: $procmux$377 (pure)
    Root of a mux tree: $procmux$383 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32PCUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$320 (pure)
    Root of a mux tree: $procmux$326 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$30 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:323$32
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32_CPU_v2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$290 (pure)
    Root of a mux tree: $procmux$296 (pure)
    Root of a mux tree: $procmux$302 (pure)
    Root of a mux tree: $procmux$308 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$314 (pure)
    Root of a mux tree: $procmux$317 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$237 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:922$245 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:923$246 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:976$252
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:994$254 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:996$255 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32dec..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:386$92 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:399$104 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_branch_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$282 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_extender..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$272 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$275 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32CU.
  Optimizing cells in module \rv32Counters.
  Optimizing cells in module \rv32PCUnit.
  Optimizing cells in module \rv32_CPU_v2.
  Optimizing cells in module \rv32dec.
  Optimizing cells in module \rv32i_alu.
  Optimizing cells in module \rv32i_branch_unit.
  Optimizing cells in module \rv32i_extender.
  Optimizing cells in module \rv32i_imm_gen.
Performed a total of 0 changes.

4.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 0 cells.

4.6.13. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

4.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

4.6.15. Executing OPT_EXPR pass (perform const folding).

4.6.16. Finished OPT passes. (There is nothing left to do.)

4.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 10 bits (of 32) from port B of cell rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:740$165 ($eq).
Removed top 25 bits (of 32) from port B of cell rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:768$214 ($eq).
Removed top 11 bits (of 32) from port B of cell rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:769$215 ($eq).
Removed top 2 bits (of 3) from port B of cell rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$216 ($eq).
Removed top 9 bits (of 12) from port B of cell rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:773$226 ($eq).
Removed top 31 bits (of 32) from port B of cell rv32Counters.$sub$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:234$3 ($sub).
Removed top 31 bits (of 32) from port B of cell rv32Counters.$add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:239$5 ($add).
Removed top 31 bits (of 32) from port B of cell rv32Counters.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:246$7 ($eq).
Removed top 25 bits (of 32) from wire rv32PCUnit.int_vec.
Removed top 2 bits (of 4) from mux cell rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$235 ($mux).
Removed top 2 bits (of 4) from mux cell rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$236 ($mux).
Removed top 1 bits (of 4) from mux cell rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$237 ($mux).
Removed top 2 bits (of 4) from wire rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$235_Y.
Removed top 2 bits (of 4) from wire rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$236_Y.
Removed top 2 bits (of 5) from port B of cell rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:273$11 ($eq).
Removed top 1 bits (of 5) from port B of cell rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:274$12 ($eq).
Removed top 1 bits (of 5) from port B of cell rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:276$14 ($eq).
Removed top 1 bits (of 5) from port B of cell rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:277$15 ($eq).
Removed top 2 bits (of 5) from port B of cell rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:278$16 ($eq).
Removed top 2 bits (of 5) from port B of cell rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:355$41 ($eq).
Removed top 1 bits (of 5) from port B of cell rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:356$42 ($eq).
Removed top 2 bits (of 3) from port B of cell rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:359$52 ($eq).
Removed top 1 bits (of 3) from port B of cell rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:360$57 ($eq).
Removed top 1 bits (of 3) from port B of cell rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:361$60 ($eq).
Removed top 31 bits (of 32) from mux cell rv32i_alu.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:393$100 ($mux).
Removed top 31 bits (of 32) from wire rv32i_alu.slt.
Removed top 2 bits (of 3) from port B of cell rv32i_branch_unit.$procmux$287_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell rv32i_extender.$procmux$259_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell rv32i_imm_gen.$procmux$280_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell rv32i_imm_gen.$procmux$279_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell rv32i_imm_gen.$procmux$278_CMP0 ($eq).
Removed top 1 bits (of 32) from mux cell rv32i_imm_gen.$procmux$275 ($pmux).

4.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module rv32CU:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module rv32Counters:
  creating $macc model for $add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:239$5 ($add).
  creating $macc model for $sub$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:234$3 ($sub).
  creating $alu model for $macc $sub$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:234$3.
  creating $alu model for $macc $add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:239$5.
  creating $alu cell for $add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:239$5: $auto$alumacc.cc:470:replace_alu$413
  creating $alu cell for $sub$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:234$3: $auto$alumacc.cc:470:replace_alu$416
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module rv32PCUnit:
  creating $macc model for $add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$31 ($add).
  creating $alu model for $macc $add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$31.
  creating $alu cell for $add$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$31: $auto$alumacc.cc:470:replace_alu$419
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module rv32_CPU_v2:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module rv32dec:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module rv32i_alu:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module rv32i_branch_unit:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module rv32i_extender:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module rv32i_imm_gen:
  created 0 $alu and 0 $macc cells.

4.9. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module rv32i_alu that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93 ($sshr):
    Found 1 activation_patterns using ctrl signal { $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:396$101_Y \instr_shift \instr_logic \func7 [5] \func3 [2] }.
    No candidates found.
  Analyzing resource sharing options for $shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94 ($shr):
    Found 1 activation_patterns using ctrl signal { $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:396$101_Y \instr_shift \instr_logic \func7 [5] \func3 [2] }.
    No candidates found.
  Analyzing resource sharing options for $shl$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:389$96 ($shl):
    Found 1 activation_patterns using ctrl signal { $or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:396$101_Y \instr_shift \instr_logic \func3 [2] }.
    No candidates found.

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 0 cells.

4.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rv32CU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$329 (pure)
    Root of a mux tree: $procmux$332 (pure)
    Root of a mux tree: $procmux$335 (pure)
    Root of a mux tree: $procmux$338 (pure)
    Root of a mux tree: $procmux$341 (pure)
    Root of a mux tree: $procmux$344 (pure)
    Root of a mux tree: $procmux$353 (pure)
    Root of a mux tree: $procmux$362 (pure)
    Root of a mux tree: $procmux$371 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32Counters..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$374 (pure)
    Root of a mux tree: $procmux$377 (pure)
    Root of a mux tree: $procmux$383 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32PCUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$320 (pure)
    Root of a mux tree: $procmux$326 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$30 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:323$32
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32_CPU_v2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$290 (pure)
    Root of a mux tree: $procmux$296 (pure)
    Root of a mux tree: $procmux$302 (pure)
    Root of a mux tree: $procmux$308 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$314 (pure)
    Root of a mux tree: $procmux$317 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$237 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:922$245 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:923$246 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:976$252
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:994$254 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:996$255 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32dec..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:386$92 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:399$104 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_branch_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$282 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_extender..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$272 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$275 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32CU.
  Optimizing cells in module \rv32Counters.
  Optimizing cells in module \rv32PCUnit.
  Optimizing cells in module \rv32_CPU_v2.
  Optimizing cells in module \rv32dec.
  Optimizing cells in module \rv32i_alu.
  Optimizing cells in module \rv32i_branch_unit.
  Optimizing cells in module \rv32i_extender.
  Optimizing cells in module \rv32i_imm_gen.
Performed a total of 0 changes.

4.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 0 cells.

4.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

4.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

4.10.8. Executing OPT_EXPR pass (perform const folding).

4.10.9. Finished OPT passes. (There is nothing left to do.)

4.11. Executing FSM pass (extract and optimize FSM).

4.11.1. Executing FSM_DETECT pass (finding FSMs in design).

4.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

4.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.12. Executing OPT pass (performing simple optimizations).

4.12.1. Executing OPT_EXPR pass (perform const folding).

4.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 0 cells.

4.12.3. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

4.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

4.12.5. Finished fast OPT passes.

4.13. Executing MEMORY pass.

4.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

4.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

4.13.3. Executing MEMORY_SHARE pass (consolidating $memrc/$memwr cells).

4.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

4.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

4.15. Executing OPT pass (performing simple optimizations).

4.15.1. Executing OPT_EXPR pass (perform const folding).
Replacing $mux cell `$procmux$329' (mux_bool) in module `\rv32CU' with constant driver `$0\cu_ext_start[0:0] = \cu_custom_1'.
Replacing $mux cell `$procmux$359' in module `rv32CU' with or-gate.
Replacing $mux cell `$procmux$368' in module `rv32CU' with or-gate.

4.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 0 cells.

4.15.3. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

4.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

4.15.5. Finished fast OPT passes.

4.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

4.17. Executing OPT pass (performing simple optimizations).

4.17.1. Executing OPT_EXPR pass (perform const folding).

4.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 0 cells.

4.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rv32CU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$332 (pure)
    Root of a mux tree: $procmux$335 (pure)
    Root of a mux tree: $procmux$338 (pure)
    Root of a mux tree: $procmux$341 (pure)
    Root of a mux tree: $procmux$344 (pure)
    Root of a mux tree: $procmux$353 (pure)
    Root of a mux tree: $procmux$356 (pure)
    Root of a mux tree: $procmux$362 (pure)
    Root of a mux tree: $procmux$365 (pure)
    Root of a mux tree: $procmux$371 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32Counters..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$374 (pure)
    Root of a mux tree: $procmux$377 (pure)
    Root of a mux tree: $procmux$383 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32PCUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$320 (pure)
    Root of a mux tree: $procmux$326 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$30 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:323$32
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32_CPU_v2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$290 (pure)
    Root of a mux tree: $procmux$296 (pure)
    Root of a mux tree: $procmux$302 (pure)
    Root of a mux tree: $procmux$308 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$314 (pure)
    Root of a mux tree: $procmux$317 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$237 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:922$245 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:923$246 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:976$252
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:994$254 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:996$255 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32dec..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:386$92 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:399$104 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_branch_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$282 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_extender..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$272 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$275 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32CU.
  Optimizing cells in module \rv32Counters.
  Optimizing cells in module \rv32PCUnit.
  Optimizing cells in module \rv32_CPU_v2.
  Optimizing cells in module \rv32dec.
  Optimizing cells in module \rv32i_alu.
  Optimizing cells in module \rv32i_branch_unit.
  Optimizing cells in module \rv32i_extender.
    Consolidated identical input bits for $pmux cell $procmux$258:
      Old ports: A=\di, B={ \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7:0] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15:0] }, Y=$3\do[31:0]
      New ports: A=\di [31:8], B={ \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [7] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15] \di [15:8] }, Y=$3\do[31:0] [31:8]
      New connections: $3\do[31:0] [7:0] = \di [7:0]
    Consolidated identical input bits for $pmux cell $procmux$266:
      Old ports: A=\di, B={ 24'000000000000000000000000 \di [7:0] 16'0000000000000000 \di [15:0] }, Y=$2\do[31:0]
      New ports: A=\di [31:8], B={ 40'0000000000000000000000000000000000000000 \di [15:8] }, Y=$2\do[31:0] [31:8]
      New connections: $2\do[31:0] [7:0] = \di [7:0]
  Optimizing cells in module \rv32i_extender.
    Consolidated identical input bits for $mux cell $procmux$272:
      Old ports: A=$3\do[31:0], B=$2\do[31:0], Y=\do
      New ports: A=$3\do[31:0] [31:8], B=$2\do[31:0] [31:8], Y=\do [31:8]
      New connections: \do [7:0] = \di [7:0]
  Optimizing cells in module \rv32i_extender.
  Optimizing cells in module \rv32i_imm_gen.
Performed a total of 3 changes.

4.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 0 cells.

4.17.6. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

4.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

4.17.8. Executing OPT_EXPR pass (perform const folding).

4.17.9. Rerunning OPT passes. (Maybe there is more to do..)

4.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rv32CU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$332 (pure)
    Root of a mux tree: $procmux$335 (pure)
    Root of a mux tree: $procmux$338 (pure)
    Root of a mux tree: $procmux$341 (pure)
    Root of a mux tree: $procmux$344 (pure)
    Root of a mux tree: $procmux$353 (pure)
    Root of a mux tree: $procmux$356 (pure)
    Root of a mux tree: $procmux$362 (pure)
    Root of a mux tree: $procmux$365 (pure)
    Root of a mux tree: $procmux$371 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32Counters..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$374 (pure)
    Root of a mux tree: $procmux$377 (pure)
    Root of a mux tree: $procmux$383 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32PCUnit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$320 (pure)
    Root of a mux tree: $procmux$326 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$30 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:323$32
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32_CPU_v2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$290 (pure)
    Root of a mux tree: $procmux$296 (pure)
    Root of a mux tree: $procmux$302 (pure)
    Root of a mux tree: $procmux$308 (pure)
    Root of a mux tree: $procmux$311 (pure)
    Root of a mux tree: $procmux$314 (pure)
    Root of a mux tree: $procmux$317 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$237 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:922$245 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:923$246 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:976$252
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:994$254 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:996$255 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32dec..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:386$92 (pure)
    Root of a mux tree: $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:399$104 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_branch_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$282 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_extender..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$272 (pure)
  Analyzing evaluation results.
Running muxtree optimizer on module \rv32i_imm_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$275 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

4.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32CU.
  Optimizing cells in module \rv32Counters.
  Optimizing cells in module \rv32PCUnit.
  Optimizing cells in module \rv32_CPU_v2.
  Optimizing cells in module \rv32dec.
  Optimizing cells in module \rv32i_alu.
  Optimizing cells in module \rv32i_branch_unit.
  Optimizing cells in module \rv32i_extender.
  Optimizing cells in module \rv32i_imm_gen.
Performed a total of 0 changes.

4.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 0 cells.

4.17.13. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

4.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

4.17.15. Executing OPT_EXPR pass (perform const folding).

4.17.16. Finished OPT passes. (There is nothing left to do.)

4.18. Executing TECHMAP pass (map to technology primitives).

4.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping rv32Counters.$ne$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:234$2 ($reduce_bool) with simplemap.
Mapping rv32Counters.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:246$7 ($eq) with simplemap.

4.18.2. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 32
Parameter \Y_WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32'.

4.18.3. Continuing TECHMAP pass.
Mapping rv32Counters.$auto$alumacc.cc:470:replace_alu$413 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32.

4.18.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 32
Parameter \B_WIDTH = 1
Parameter \Y_WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=1\Y_WIDTH=32'.

4.18.5. Continuing TECHMAP pass.
Mapping rv32Counters.$auto$alumacc.cc:470:replace_alu$416 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=1\Y_WIDTH=32.
Mapping rv32Counters.$procmux$374 ($mux) with simplemap.
Mapping rv32Counters.$procmux$377 ($mux) with simplemap.
Mapping rv32Counters.$procmux$380 ($mux) with simplemap.
Mapping rv32Counters.$procmux$383 ($mux) with simplemap.
Mapping rv32Counters.$procdff$404 ($adff) with simplemap.
Mapping rv32Counters.$procdff$405 ($adff) with simplemap.
Mapping rv32Counters.$procdff$406 ($adff) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579 ($xor) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:263$580 ($xor) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578 ($and) with simplemap.

4.18.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=32'.

4.18.7. Executing PROC pass (convert processes to netlists).

4.18.7.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.7.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.18.7.3. Executing PROC_INIT pass (extract init attributes).

4.18.7.4. Executing PROC_ARST pass (detect async resets in processes).

4.18.7.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$916'.
     1/64: $0\p[31:0] [30]
     2/64: $0\g[31:0] [30]
     3/64: $0\p[31:0] [28]
     4/64: $0\g[31:0] [28]
     5/64: $0\p[31:0] [26]
     6/64: $0\g[31:0] [26]
     7/64: $0\p[31:0] [24]
     8/64: $0\g[31:0] [24]
     9/64: $0\p[31:0] [22]
    10/64: $0\g[31:0] [22]
    11/64: $0\p[31:0] [20]
    12/64: $0\g[31:0] [20]
    13/64: $0\p[31:0] [18]
    14/64: $0\g[31:0] [18]
    15/64: $0\p[31:0] [16]
    16/64: $0\g[31:0] [16]
    17/64: $0\p[31:0] [14]
    18/64: $0\g[31:0] [14]
    19/64: $0\p[31:0] [12]
    20/64: $0\g[31:0] [12]
    21/64: $0\p[31:0] [10]
    22/64: $0\g[31:0] [10]
    23/64: $0\p[31:0] [8]
    24/64: $0\g[31:0] [8]
    25/64: $0\p[31:0] [6]
    26/64: $0\g[31:0] [6]
    27/64: $0\p[31:0] [4]
    28/64: $0\g[31:0] [4]
    29/64: $0\p[31:0] [2]
    30/64: $0\g[31:0] [2]
    31/64: $0\p[31:0] [29]
    32/64: $0\g[31:0] [29]
    33/64: $0\p[31:0] [25]
    34/64: $0\g[31:0] [25]
    35/64: $0\p[31:0] [21]
    36/64: $0\g[31:0] [21]
    37/64: $0\p[31:0] [17]
    38/64: $0\g[31:0] [17]
    39/64: $0\p[31:0] [13]
    40/64: $0\g[31:0] [13]
    41/64: $0\p[31:0] [9]
    42/64: $0\g[31:0] [9]
    43/64: $0\p[31:0] [5]
    44/64: $0\g[31:0] [5]
    45/64: $0\p[31:0] [27]
    46/64: $0\g[31:0] [27]
    47/64: $0\p[31:0] [19]
    48/64: $0\g[31:0] [19]
    49/64: $0\p[31:0] [11]
    50/64: $0\g[31:0] [11]
    51/64: $0\p[31:0] [23]
    52/64: $0\g[31:0] [23]
    53/64: $0\p[31:0] [31]
    54/64: $0\g[31:0] [31]
    55/64: $0\p[31:0] [15]
    56/64: $0\g[31:0] [15]
    57/64: $0\p[31:0] [7]
    58/64: $0\g[31:0] [7]
    59/64: $0\p[31:0] [3]
    60/64: $0\g[31:0] [3]
    61/64: $0\p[31:0] [1]
    62/64: $0\g[31:0] [1]
    63/64: $0\g[31:0] [0]
    64/64: $0\p[31:0] [0]

4.18.7.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=32.\g' from process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$916'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=32.\p' from process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$916'.

4.18.7.7. Executing PROC_DFF pass (convert process syncs to FFs).

4.18.7.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=32.$proc$<techmap.v>:207$916'.
Cleaned up 0 empty switches.

4.18.8. Executing OPT pass (performing simple optimizations).

4.18.8.1. Executing OPT_EXPR pass (perform const folding).

4.18.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=32'.
Removed a total of 0 cells.

4.18.8.3. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

4.18.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=32..
  removing unused `$and' cell `$and$<techmap.v>:222$921'.
  removing unused `$and' cell `$and$<techmap.v>:222$969'.
  removing unused `$and' cell `$and$<techmap.v>:222$993'.
  removing unused `$and' cell `$and$<techmap.v>:222$1005'.
  removing unused `$and' cell `$and$<techmap.v>:222$1011'.
  removing unused `$and' cell `$and$<techmap.v>:230$1014'.
  removing unused `$and' cell `$and$<techmap.v>:230$1017'.
  removing unused `$and' cell `$and$<techmap.v>:230$1020'.
  removing unused `$and' cell `$and$<techmap.v>:230$1023'.
  removing unused `$and' cell `$and$<techmap.v>:230$1026'.
  removing unused `$and' cell `$and$<techmap.v>:230$1029'.
  removing unused `$and' cell `$and$<techmap.v>:230$1032'.
  removing unused `$and' cell `$and$<techmap.v>:230$1035'.
  removing unused `$and' cell `$and$<techmap.v>:230$1038'.
  removing unused `$and' cell `$and$<techmap.v>:230$1041'.
  removing unused `$and' cell `$and$<techmap.v>:230$1044'.
  removing unused `$and' cell `$and$<techmap.v>:230$1047'.
  removing unused `$and' cell `$and$<techmap.v>:230$1050'.
  removing unused `$and' cell `$and$<techmap.v>:230$1053'.
  removing unused `$and' cell `$and$<techmap.v>:230$1056'.
  removing unused `$and' cell `$and$<techmap.v>:230$1059'.
  removing unused `$and' cell `$and$<techmap.v>:230$1062'.
  removing unused `$and' cell `$and$<techmap.v>:230$1065'.
  removing unused `$and' cell `$and$<techmap.v>:230$1068'.
  removing unused `$and' cell `$and$<techmap.v>:230$1071'.
  removing unused `$and' cell `$and$<techmap.v>:230$1074'.
  removing unused `$and' cell `$and$<techmap.v>:230$1077'.
  removing unused `$and' cell `$and$<techmap.v>:230$1080'.
  removing unused `$and' cell `$and$<techmap.v>:230$1083'.
  removing unused `$and' cell `$and$<techmap.v>:230$1086'.
  removing unused `$and' cell `$and$<techmap.v>:230$1089'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

4.18.8.5. Finished fast OPT passes.

4.18.9. Continuing TECHMAP pass.
Mapping rv32Counters.$auto$alumacc.cc:470:replace_alu$413.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577 ($mux) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.$not$<techmap.v>:258$576 ($not) with simplemap.
Mapping rv32Counters.$auto$alumacc.cc:470:replace_alu$413.B_conv ($pos) with simplemap.
Mapping rv32Counters.$auto$alumacc.cc:470:replace_alu$413.A_conv ($pos) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.$xor$<techmap.v>:262$584 ($xor) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.$xor$<techmap.v>:263$585 ($xor) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583 ($and) with simplemap.
Mapping rv32Counters.$auto$alumacc.cc:470:replace_alu$416.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582 ($mux) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581 ($not) with simplemap.
Mapping rv32Counters.$auto$alumacc.cc:470:replace_alu$416.B_conv ($pos) with simplemap.
Mapping rv32Counters.$auto$alumacc.cc:470:replace_alu$416.A_conv ($pos) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:212$917 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$1000 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$1003 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$1006 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$1009 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$919 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$922 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$925 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$928 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$931 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$934 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$937 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$940 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$943 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$946 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$949 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$952 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$955 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$958 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$961 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$964 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$967 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$970 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$973 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$976 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$979 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$982 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$985 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$988 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$991 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$994 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$997 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$1002 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$1008 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$924 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$927 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$930 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$933 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$936 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$939 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$942 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$945 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$948 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$951 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$954 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$957 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$960 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$963 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$966 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$972 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$975 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$978 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$981 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$984 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$987 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$990 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$996 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:222$999 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1012 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1015 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1018 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1021 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1024 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1027 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1030 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1033 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1036 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1039 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1042 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1045 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1048 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1051 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1054 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1057 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1060 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1063 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1066 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1069 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1072 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1075 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1078 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1081 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1084 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1087 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:212$918 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$1001 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$1004 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$1007 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$1010 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$920 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$923 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$926 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$929 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$932 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$935 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$938 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$941 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$944 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$947 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$950 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$953 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$956 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$959 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$962 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$965 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$968 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$971 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$974 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$977 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$980 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$983 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$986 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$989 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$992 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$995 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$998 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1013 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1016 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1019 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1022 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1025 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1028 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1031 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1034 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1037 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1040 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1043 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1046 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1049 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1052 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1055 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1058 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1061 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1064 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1067 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1070 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1073 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1076 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1079 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1082 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1085 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:229$1088 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:212$917 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$1000 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$1003 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$1006 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$1009 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$919 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$922 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$925 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$928 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$931 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$934 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$937 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$940 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$943 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$946 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$949 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$952 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$955 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$958 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$961 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$964 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$967 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$970 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$973 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$976 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$979 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$982 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$985 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$988 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$991 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$994 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:221$997 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$1002 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$1008 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$924 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$927 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$930 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$933 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$936 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$939 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$942 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$945 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$948 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$951 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$954 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$957 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$960 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$963 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$966 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$972 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$975 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$978 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$981 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$984 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$987 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$990 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$996 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:222$999 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1012 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1015 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1018 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1021 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1024 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1027 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1030 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1033 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1036 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1039 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1042 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1045 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1048 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1051 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1054 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1057 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1060 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1063 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1066 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1069 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1072 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1075 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1078 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1081 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1084 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:229$1087 ($and) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:212$918 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$1001 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$1004 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$1007 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$1010 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$920 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$923 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$926 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$929 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$932 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$935 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$938 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$941 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$944 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$947 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$950 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$953 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$956 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$959 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$962 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$965 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$968 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$971 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$974 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$977 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$980 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$983 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$986 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$989 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$992 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$995 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:221$998 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1013 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1016 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1019 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1022 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1025 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1028 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1031 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1034 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1037 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1040 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1043 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1046 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1049 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1052 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1055 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1058 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1061 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1064 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1067 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1070 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1073 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1076 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1079 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1082 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1085 ($or) with simplemap.
Mapping rv32Counters.$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$or$<techmap.v>:229$1088 ($or) with simplemap.
Mapping rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:270$8 ($eq) with simplemap.
Mapping rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:271$9 ($eq) with simplemap.
Mapping rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:272$10 ($eq) with simplemap.
Mapping rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:273$11 ($eq) with simplemap.
Mapping rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:274$12 ($eq) with simplemap.
Mapping rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:275$13 ($logic_not) with simplemap.
Mapping rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:276$14 ($eq) with simplemap.
Mapping rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:277$15 ($eq) with simplemap.
Mapping rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:278$16 ($eq) with simplemap.
Mapping rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:279$17 ($eq) with simplemap.
Mapping rv32dec.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:280$18 ($eq) with simplemap.
Mapping rv32PCUnit.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28 ($mux) with simplemap.
Mapping rv32PCUnit.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$29 ($or) with simplemap.
Mapping rv32PCUnit.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$30 ($mux) with simplemap.
Mapping rv32PCUnit.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:323$32 ($mux) with simplemap.
Mapping rv32PCUnit.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:331$35 ($mux) with simplemap.
Mapping rv32PCUnit.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:331$36 ($mux) with simplemap.
Mapping rv32PCUnit.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:336$38 ($or) with simplemap.
Mapping rv32PCUnit.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:336$39 ($or) with simplemap.
Mapping rv32PCUnit.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:336$40 ($mux) with simplemap.

4.18.10. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 32
Parameter \B_WIDTH = 32
Parameter \Y_WIDTH = 32
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32'.

4.18.11. Continuing TECHMAP pass.
Mapping rv32PCUnit.$auto$alumacc.cc:470:replace_alu$419 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32.
Mapping rv32PCUnit.$procmux$320 ($mux) with simplemap.
Mapping rv32PCUnit.$procmux$324 ($mux) with simplemap.
Mapping rv32PCUnit.$procmux$326 ($mux) with simplemap.
Mapping rv32PCUnit.$procdff$392 ($adff) with simplemap.
Mapping rv32PCUnit.$procdff$393 ($adff) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.$xor$<techmap.v>:263$1986 ($xor) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.$xor$<techmap.v>:262$1985 ($xor) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.$and$<techmap.v>:260$1984 ($and) with simplemap.
Mapping rv32PCUnit.$auto$alumacc.cc:470:replace_alu$419.lcu using $paramod\_90_lcu\WIDTH=32.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983 ($mux) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.$not$<techmap.v>:258$1982 ($not) with simplemap.
Mapping rv32PCUnit.$auto$alumacc.cc:470:replace_alu$419.B_conv ($pos) with simplemap.
Mapping rv32PCUnit.$auto$alumacc.cc:470:replace_alu$419.A_conv ($pos) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:212$917 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$1000 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$1003 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$1006 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$1009 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$919 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$922 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$925 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$928 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$931 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$934 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$937 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$940 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$943 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$946 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$949 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$952 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$955 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$958 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$961 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$964 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$967 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$970 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$973 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$976 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$979 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$982 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$985 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$988 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$991 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$994 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:221$997 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$1002 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$1008 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$924 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$927 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$930 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$933 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$936 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$939 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$942 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$945 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$948 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$951 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$954 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$957 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$960 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$963 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$966 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$972 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$975 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$978 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$981 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$984 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$987 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$990 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$996 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:222$999 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1012 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1015 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1018 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1021 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1024 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1027 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1030 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1033 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1036 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1039 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1042 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1045 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1048 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1051 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1054 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1057 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1060 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1063 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1066 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1069 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1072 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1075 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1078 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1081 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1084 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:229$1087 ($and) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:212$918 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$1001 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$1004 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$1007 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$1010 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$920 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$923 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$926 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$929 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$932 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$935 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$938 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$941 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$944 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$947 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$950 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$953 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$956 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$959 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$962 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$965 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$968 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$971 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$974 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$977 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$980 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$983 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$986 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$989 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$992 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$995 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:221$998 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1013 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1016 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1019 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1022 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1025 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1028 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1031 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1034 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1037 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1040 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1043 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1046 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1049 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1052 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1055 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1058 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1061 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1064 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1067 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1070 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1073 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1076 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1079 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1082 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1085 ($or) with simplemap.
Mapping rv32PCUnit.$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$or$<techmap.v>:229$1088 ($or) with simplemap.
Mapping rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:355$41 ($eq) with simplemap.
Mapping rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:356$42 ($eq) with simplemap.
Mapping rv32i_alu.$logic_or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:357$43 ($logic_or) with simplemap.
Mapping rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:358$45 ($eq) with simplemap.
Mapping rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:358$46 ($eq) with simplemap.
Mapping rv32i_alu.$logic_or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:358$47 ($logic_or) with simplemap.
Mapping rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:358$48 ($eq) with simplemap.
Mapping rv32i_alu.$logic_or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:358$49 ($logic_or) with simplemap.
Mapping rv32i_alu.$logic_and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:358$50 ($logic_and) with simplemap.
Mapping rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:359$52 ($eq) with simplemap.
Mapping rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:359$53 ($eq) with simplemap.
Mapping rv32i_alu.$logic_or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:359$54 ($logic_or) with simplemap.
Mapping rv32i_alu.$logic_and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:359$55 ($logic_and) with simplemap.
Mapping rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:360$57 ($eq) with simplemap.
Mapping rv32i_alu.$logic_and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:360$58 ($logic_and) with simplemap.
Mapping rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:361$60 ($eq) with simplemap.
Mapping rv32i_alu.$logic_and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:361$61 ($logic_and) with simplemap.
Mapping rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:365$68 ($logic_not) with simplemap.
Mapping rv32i_alu.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:365$69 ($and) with simplemap.
Mapping rv32i_alu.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:365$70 ($and) with simplemap.
Mapping rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:369$75 ($eq) with simplemap.
Mapping rv32i_alu.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:373$76 ($or) with simplemap.
Mapping rv32i_alu.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:373$77 ($or) with simplemap.
Mapping rv32i_alu.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:373$78 ($or) with simplemap.
Mapping rv32i_alu.$xor$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:376$79 ($xor) with simplemap.
Mapping rv32i_alu.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:381$83 ($and) with simplemap.
Mapping rv32i_alu.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:381$84 ($and) with simplemap.
Mapping rv32i_alu.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:382$86 ($and) with simplemap.
Mapping rv32i_alu.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:382$87 ($or) with simplemap.
Mapping rv32i_alu.$xor$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:382$88 ($xor) with simplemap.
Mapping rv32i_alu.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:382$89 ($mux) with simplemap.
Mapping rv32i_alu.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:382$90 ($mux) with simplemap.
Mapping rv32i_alu.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:386$92 ($mux) with simplemap.

4.18.12. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Parameter \A_SIGNED = 1
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 32
Parameter \B_WIDTH = 5
Parameter \Y_WIDTH = 32
Parameter \_TECHMAP_CELLTYPE_ = 40'0010010001110011011100110110100001110010
Generating RTLIL representation for module `$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr'.

4.18.13. Executing PROC pass (convert processes to netlists).

4.18.13.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 10 empty switches in `$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$2817'.
Cleaned up 10 empty switches.

4.18.13.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.18.13.3. Executing PROC_INIT pass (extract init attributes).

4.18.13.4. Executing PROC_ARST pass (detect async resets in processes).

4.18.13.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$2817'.
     1/17: $15\buffer[31:0]
     2/17: $14\buffer[31:0]
     3/17: $13\buffer[31:0]
     4/17: $12\buffer[31:0]
     5/17: $11\buffer[31:0]
     6/17: $10\buffer[31:0]
     7/17: $9\buffer[31:0]
     8/17: $8\buffer[31:0]
     9/17: $7\buffer[31:0]
    10/17: $6\buffer[31:0]
    11/17: $5\buffer[31:0]
    12/17: $4\buffer[31:0]
    13/17: $3\buffer[31:0]
    14/17: $2\buffer[31:0]
    15/17: $1\buffer[31:0]
    16/17: $0\buffer[31:0]
    17/17: $0\overflow[0:0]

4.18.13.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.\buffer' from process `$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$2817'.
No latch inferred for signal `$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.\overflow' from process `$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$2817'.

4.18.13.7. Executing PROC_DFF pass (convert process syncs to FFs).

4.18.13.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 5 empty switches in `$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$2817'.
Removing empty process `$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$2817'.
Cleaned up 5 empty switches.
Removed 2 unused cells and 37 unused wires.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$ternary$<techmap.v>:104$2818 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$ternary$<techmap.v>:104$2821 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$ternary$<techmap.v>:111$2822 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$ternary$<techmap.v>:111$2823 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$ternary$<techmap.v>:111$2824 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$ternary$<techmap.v>:111$2825 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$ternary$<techmap.v>:111$2826 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2828 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2831 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2834 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2837 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2840 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2843 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2846 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2849 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2852 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2855 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2858 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2861 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2864 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2867 ($mux) with simplemap.
Recursively mapping $paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.$procmux$2870 ($mux) with simplemap.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr'.

4.18.14. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.18.15. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2872' (0?1) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2818_Y = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2891' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [18] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3311' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [17] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3343' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [17] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2890' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [17] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2893' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [20] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3313' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [19] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3345' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [19] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2892' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [19] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3215' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [17] = $1\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3247' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [17] = $1\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3115' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [13] = $4\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3310' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [16] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3342' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [16] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2889' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [16] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3312' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [18] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3344' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [18] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3214' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [16] = $1\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3246' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [16] = $1\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3114' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [12] = $4\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3309' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [15] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3341' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [15] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2888' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [15] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3213' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [15] = $1\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3245' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [15] = $1\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3113' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [11] = $4\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3308' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [14] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3340' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [14] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2887' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [14] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3212' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [14] = $1\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3244' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [14] = $1\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3112' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [10] = $4\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3307' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [13] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3339' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [13] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2886' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [13] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3211' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [13] = $1\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3243' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [13] = $1\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3111' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [9] = $4\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3306' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [12] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3338' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [12] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2885' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [12] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3210' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [12] = $1\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3242' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [12] = $1\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3110' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [8] = $4\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3305' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [11] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3337' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [11] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2884' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [11] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3209' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [11] = $1\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3241' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [11] = $1\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3109' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [7] = $4\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3304' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [10] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3336' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [10] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2883' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [10] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3208' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [10] = $1\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3240' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [10] = $1\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3108' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [6] = $4\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3303' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [9] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3335' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [9] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2882' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [9] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3207' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [9] = $1\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3239' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [9] = $1\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3107' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [5] = $4\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3302' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [8] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3334' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [8] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2881' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [8] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3206' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [8] = $1\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3238' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [8] = $1\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3106' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [4] = $4\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3301' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [7] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3333' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [7] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2880' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [7] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3205' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [7] = $1\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3237' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [7] = $1\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3105' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [3] = $4\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3300' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [6] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3332' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [6] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2879' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [6] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3204' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [6] = $1\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3236' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [6] = $1\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3104' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [2] = $4\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3299' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [5] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3331' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [5] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2878' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [5] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3203' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [5] = $1\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3235' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [5] = $1\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3103' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [1] = $4\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3298' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [4] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3330' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [4] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2877' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [4] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3202' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [4] = $1\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3234' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [4] = $1\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3102' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [0] = $4\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2904' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2905' (0?1) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:111$2822_Y = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3325' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3357' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3389' (???) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$1\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2906' (0?1) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:111$2823_Y = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3229' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3261' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3293' (???) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2907' (0?1) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:111$2824_Y = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3133' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3165' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3197' (???) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$7\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2908' (0?1) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:111$2825_Y = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3037' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3069' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3101' (???) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3324' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3356' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2903' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [30] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3228' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3260' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3132' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3164' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3036' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3068' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3323' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [29] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3355' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [29] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2902' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [29] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3227' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [29] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3259' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [29] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3131' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [29] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3163' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [29] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3035' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [29] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3067' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [29] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3322' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [28] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3354' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [28] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2901' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [28] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3226' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [28] = $1\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3258' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [28] = $1\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3130' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [28] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3162' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [28] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3034' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [28] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3066' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [28] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3321' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [27] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3353' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [27] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2900' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [27] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3225' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [27] = $1\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3257' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [27] = $1\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3129' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [27] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3161' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [27] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3033' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [27] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3065' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [27] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3320' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [26] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3352' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [26] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2899' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [26] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3224' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [26] = $1\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3256' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [26] = $1\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3128' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [26] = $4\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3160' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [26] = $4\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3032' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [26] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3064' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [26] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2909' (0?1) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:111$2826_Y = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2939' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [29] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2938' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [28] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2937' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [27] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2936' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [26] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2935' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [25] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2934' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [24] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2933' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [23] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2932' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [22] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2931' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [21] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2930' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [20] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2929' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [19] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2928' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [18] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2927' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [17] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2926' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [16] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2925' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [15] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2924' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [14] = $10\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2923' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [13] = $10\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2922' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [12] = $10\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2921' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [11] = $10\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2920' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [10] = $10\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3319' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [25] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3351' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [25] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2898' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [25] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3223' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [25] = $1\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3255' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [25] = $1\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3127' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [25] = $4\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3159' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [25] = $4\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3031' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [25] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3063' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [25] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2919' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [9] = $10\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3318' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [24] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3350' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [24] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2897' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [24] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3222' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [24] = $1\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3254' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [24] = $1\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3126' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [24] = $4\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3158' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [24] = $4\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3030' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [24] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3062' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [24] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2918' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [8] = $10\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3317' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [23] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3349' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [23] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2896' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [23] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3221' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [23] = $1\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3253' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [23] = $1\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3125' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [23] = $4\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3157' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [23] = $4\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3029' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [23] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3061' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [23] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2917' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [7] = $10\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3316' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [22] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3348' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [22] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2895' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [22] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3220' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [22] = $1\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3252' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [22] = $1\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3124' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [22] = $4\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3156' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [22] = $4\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3028' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [22] = $7\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3060' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [22] = $7\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2916' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [6] = $10\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3315' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [21] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3347' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [21] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2894' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [21] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3219' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [21] = $1\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3251' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [21] = $1\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3123' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [21] = $4\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3155' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [21] = $4\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3027' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [21] = $7\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3059' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [21] = $7\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2915' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [5] = $10\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3314' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [20] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3346' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [20] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3218' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [20] = $1\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3250' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [20] = $1\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3122' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [20] = $4\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3154' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [20] = $4\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3026' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [20] = $7\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3058' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [20] = $7\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2914' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [4] = $10\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3217' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [19] = $1\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3249' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [19] = $1\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3121' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [19] = $4\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3153' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [19] = $4\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3025' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [19] = $7\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3057' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [19] = $7\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2913' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [3] = $10\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3216' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [18] = $1\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3248' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [18] = $1\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3120' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [18] = $4\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3152' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [18] = $4\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3024' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [18] = $7\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3056' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [18] = $7\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2912' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [2] = $10\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3119' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [17] = $4\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3151' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [17] = $4\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3023' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [17] = $7\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3055' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [17] = $7\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2911' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [1] = $10\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3118' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [16] = $4\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3150' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [16] = $4\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3022' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [16] = $7\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3054' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [16] = $7\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2910' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [0] = $10\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3297' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [3] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3329' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [3] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2876' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [3] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3296' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [2] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3328' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [2] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2875' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [2] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3295' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [1] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3327' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [1] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2874' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [1] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3294' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [0] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3326' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [0] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2873' (??0) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$2821_Y [0] = \A [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3201' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [3] = $1\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3233' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [3] = $1\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3200' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [2] = $1\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3232' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [2] = $1\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3199' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [1] = $1\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3231' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [1] = $1\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3198' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [0] = $1\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3230' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [0] = $1\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3117' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [15] = $4\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3149' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [15] = $4\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3116' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [14] = $4\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3148' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [14] = $4\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3147' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [13] = $4\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3146' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [12] = $4\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3145' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [11] = $4\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3144' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [10] = $4\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3143' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [9] = $4\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3142' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [8] = $4\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3141' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [7] = $4\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3140' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [6] = $4\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3139' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [5] = $4\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3138' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [4] = $4\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3137' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [3] = $4\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3136' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [2] = $4\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3135' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [1] = $4\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3134' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [0] = $4\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3021' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [15] = $7\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3053' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [15] = $7\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3020' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [14] = $7\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3052' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [14] = $7\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3019' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [13] = $7\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3051' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [13] = $7\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3018' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [12] = $7\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3050' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [12] = $7\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3017' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [11] = $7\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3049' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [11] = $7\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3016' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [10] = $7\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3048' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [10] = $7\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3015' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [9] = $7\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3047' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [9] = $7\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3014' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [8] = $7\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3046' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [8] = $7\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3013' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [7] = $7\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3045' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [7] = $7\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3012' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [6] = $7\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3044' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [6] = $7\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3011' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [5] = $7\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3043' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [5] = $7\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3010' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [4] = $7\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3042' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [4] = $7\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3009' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [3] = $7\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3041' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [3] = $7\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3008' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [2] = $7\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3040' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [2] = $7\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3007' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [1] = $7\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3039' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [1] = $7\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3006' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [0] = $7\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3038' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [0] = $7\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2941' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2973' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3005' (???) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `\Y [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2940' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2972' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2971' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [29] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2970' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [28] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2969' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [27] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2968' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [26] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2967' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [25] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2966' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [24] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2965' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [23] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2964' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [22] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2963' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [21] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2962' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [20] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2961' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [19] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2960' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [18] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2959' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [17] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2958' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [16] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2957' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [15] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2956' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [14] = $10\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2955' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [13] = $10\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2954' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [12] = $10\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2953' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [11] = $10\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2952' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [10] = $10\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2951' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [9] = $10\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2950' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [8] = $10\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2949' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [7] = $10\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2948' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [6] = $10\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2947' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [5] = $10\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2946' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [4] = $10\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2945' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [3] = $10\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2944' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [2] = $10\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2943' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [1] = $10\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2942' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [0] = $10\buffer[31:0] [16]'.
Removed 0 unused cells and 19 unused wires.

4.18.16. Continuing TECHMAP pass.
Mapping rv32i_alu.$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93 using $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr.

4.18.17. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 32
Parameter \B_WIDTH = 5
Parameter \Y_WIDTH = 32
Parameter \_TECHMAP_CELLTYPE_ = 611543154
Generating RTLIL representation for module `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr'.

4.18.18. Executing PROC pass (convert processes to netlists).

4.18.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 10 empty switches in `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$3397'.
Cleaned up 10 empty switches.

4.18.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.18.18.3. Executing PROC_INIT pass (extract init attributes).

4.18.18.4. Executing PROC_ARST pass (detect async resets in processes).

4.18.18.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$3397'.
     1/17: $15\buffer[31:0]
     2/17: $14\buffer[31:0]
     3/17: $13\buffer[31:0]
     4/17: $12\buffer[31:0]
     5/17: $11\buffer[31:0]
     6/17: $10\buffer[31:0]
     7/17: $9\buffer[31:0]
     8/17: $8\buffer[31:0]
     9/17: $7\buffer[31:0]
    10/17: $6\buffer[31:0]
    11/17: $5\buffer[31:0]
    12/17: $4\buffer[31:0]
    13/17: $3\buffer[31:0]
    14/17: $2\buffer[31:0]
    15/17: $1\buffer[31:0]
    16/17: $0\buffer[31:0]
    17/17: $0\overflow[0:0]

4.18.18.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.\buffer' from process `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$3397'.
No latch inferred for signal `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.\overflow' from process `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$3397'.

4.18.18.7. Executing PROC_DFF pass (convert process syncs to FFs).

4.18.18.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 5 empty switches in `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$3397'.
Removing empty process `$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$3397'.
Cleaned up 5 empty switches.
Removed 0 unused cells and 35 unused wires.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$ternary$<techmap.v>:104$3398 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3400 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3403 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3406 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3409 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3412 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3415 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3418 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3421 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3424 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3427 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3430 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3433 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3436 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3439 ($mux) with simplemap.
Recursively mapping $paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3442 ($mux) with simplemap.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr'.

4.18.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.18.20. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3445' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [1] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3475' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3891' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3923' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3793' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [29] = $1\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3825' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [29] = $1\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3473' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [29] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3474' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [30] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3889' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [29] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3921' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [29] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3693' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [25] = $4\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3725' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [25] = $4\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3471' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [27] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3472' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [28] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3887' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [27] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3919' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [27] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3789' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [25] = $1\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3821' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [25] = $1\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3469' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [25] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3470' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [26] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3885' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [25] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3917' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [25] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3589' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [17] = $7\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3621' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [17] = $7\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3467' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [23] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3468' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [24] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3883' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [23] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3915' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [23] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3785' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [21] = $1\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3817' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [21] = $1\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3465' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [21] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3466' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [22] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3881' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [21] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3913' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [21] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3685' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [17] = $4\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3717' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [17] = $4\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3463' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [19] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3464' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [20] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3879' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [19] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3911' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [19] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3781' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [17] = $1\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3813' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [17] = $1\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3461' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [17] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3462' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [18] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3877' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [17] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3909' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [17] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3477' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [1] = $10\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3890' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3922' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [30] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3792' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [28] = $1\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3824' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [28] = $1\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3888' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [28] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3920' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [28] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3692' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [24] = $4\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3724' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [24] = $4\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3886' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [26] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3918' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [26] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3788' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [24] = $1\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3820' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [24] = $1\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3884' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [24] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3916' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [24] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3588' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [16] = $7\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3620' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [16] = $7\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3882' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [22] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3914' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [22] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3784' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [20] = $1\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3816' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [20] = $1\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3880' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [20] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3912' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [20] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3684' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [16] = $4\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3716' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [16] = $4\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3878' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [18] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3910' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [18] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3780' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [16] = $1\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3812' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [16] = $1\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3460' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [16] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3876' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [16] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3908' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [16] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3476' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [0] = $10\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3459' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [15] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3458' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [14] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3457' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [13] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3456' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [12] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3455' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [11] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3454' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [10] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3453' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [9] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3452' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [8] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3451' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [7] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3450' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [6] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3449' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [5] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3448' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [4] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3447' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [3] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3446' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [2] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3444' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3398_Y [0] = \A [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3794' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3826' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3694' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [26] = $4\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3726' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [26] = $4\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3790' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [26] = $1\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3822' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [26] = $1\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3590' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [18] = $7\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3622' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [18] = $7\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3786' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [22] = $1\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3818' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [22] = $1\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3686' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [18] = $4\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3718' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [18] = $4\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3782' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [18] = $1\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3814' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [18] = $1\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3478' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [2] = $10\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3795' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3827' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3695' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [27] = $4\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3727' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [27] = $4\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3791' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [27] = $1\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3823' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [27] = $1\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3591' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [19] = $7\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3623' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [19] = $7\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3787' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [23] = $1\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3819' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [23] = $1\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3687' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [19] = $4\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3719' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [19] = $4\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3783' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [19] = $1\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3815' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [19] = $1\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3479' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [3] = $10\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3696' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3728' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3592' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [20] = $7\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3624' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [20] = $7\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3688' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [20] = $4\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3720' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [20] = $4\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3480' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [4] = $10\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3697' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3729' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3593' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [21] = $7\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3625' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [21] = $7\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3689' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [21] = $4\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3721' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [21] = $4\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3481' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [5] = $10\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3698' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3730' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3594' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [22] = $7\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3626' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [22] = $7\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3690' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [22] = $4\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3722' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [22] = $4\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3482' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [6] = $10\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3699' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3731' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3595' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [23] = $7\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3627' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [23] = $7\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3691' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [23] = $4\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3723' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [23] = $4\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3483' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [7] = $10\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3596' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3628' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3484' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [8] = $10\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3597' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3629' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3485' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [9] = $10\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3598' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3630' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3486' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [10] = $10\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3599' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3631' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3487' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [11] = $10\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3600' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3632' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3488' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [12] = $10\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3601' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3633' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3489' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [13] = $10\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3602' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3634' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3490' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [14] = $10\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3603' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3635' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3491' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [15] = $10\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3492' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [16] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3493' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [17] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3494' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [18] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3495' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [19] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3496' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [20] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3497' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [21] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3498' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [22] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3499' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [23] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3500' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3501' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3502' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3503' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3504' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3505' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3506' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3507' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$15\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3508' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [0] = $10\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3509' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [1] = $10\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3510' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [2] = $10\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3511' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [3] = $10\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3512' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [4] = $10\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3513' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [5] = $10\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3514' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [6] = $10\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3515' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [7] = $10\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3516' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [8] = $10\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3517' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [9] = $10\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3518' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [10] = $10\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3519' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [11] = $10\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3520' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [12] = $10\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3521' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [13] = $10\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3522' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [14] = $10\buffer[31:0] [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3523' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [15] = $10\buffer[31:0] [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3524' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [16] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3525' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [17] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3526' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [18] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3527' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [19] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3528' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [20] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3529' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [21] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3530' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [22] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3531' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [23] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3532' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [24] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3533' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [25] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3534' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [26] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3535' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [27] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3536' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [28] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3537' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [29] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3538' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [30] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3539' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$14\buffer[31:0] [31] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3874' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [14] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3906' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [14] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3776' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [12] = $1\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3808' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [12] = $1\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3872' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [12] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3904' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [12] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3676' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [8] = $4\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3708' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [8] = $4\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3870' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [10] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3902' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [10] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3772' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [8] = $1\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3804' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [8] = $1\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3868' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [8] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3900' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [8] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3572' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [0] = $7\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3604' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [0] = $7\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3866' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [6] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3898' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [6] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3768' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [4] = $1\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3800' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [4] = $1\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3864' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [4] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3896' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [4] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3668' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [0] = $4\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3700' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [0] = $4\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3862' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [2] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3894' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [2] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3764' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [0] = $1\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3796' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [0] = $1\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3860' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [0] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3892' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [0] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3875' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [15] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3907' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [15] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3777' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [13] = $1\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3809' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [13] = $1\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3873' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [13] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3905' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [13] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3677' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [9] = $4\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3709' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [9] = $4\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3871' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [11] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3903' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [11] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3773' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [9] = $1\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3805' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [9] = $1\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3869' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [9] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3901' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [9] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3573' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [1] = $7\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3605' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [1] = $7\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3867' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [7] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3899' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [7] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3769' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [5] = $1\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3801' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [5] = $1\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3865' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [5] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3897' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [5] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3669' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [1] = $4\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3701' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [1] = $4\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3863' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [3] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3895' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [3] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3765' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [1] = $1\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3797' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [1] = $1\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3861' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$3\buffer[31:0] [1] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3893' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [1] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3778' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [14] = $1\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3810' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [14] = $1\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3678' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [10] = $4\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3710' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [10] = $4\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3774' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [10] = $1\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3806' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [10] = $1\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3574' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [2] = $7\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3606' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [2] = $7\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3770' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [6] = $1\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3802' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [6] = $1\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3670' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [2] = $4\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3702' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [2] = $4\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3766' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [2] = $1\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3798' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [2] = $1\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3779' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [15] = $1\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3811' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [15] = $1\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3679' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [11] = $4\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3711' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [11] = $4\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3775' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [11] = $1\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3807' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [11] = $1\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3575' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [3] = $7\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3607' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [3] = $7\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3771' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [7] = $1\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3803' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [7] = $1\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3671' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [3] = $4\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3703' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [3] = $4\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3767' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [3] = $1\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3799' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$5\buffer[31:0] [3] = $1\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3680' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [12] = $4\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3712' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [12] = $4\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3576' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [4] = $7\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3608' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [4] = $7\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3672' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [4] = $4\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3704' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [4] = $4\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3681' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [13] = $4\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3713' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [13] = $4\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3577' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [5] = $7\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3609' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [5] = $7\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3673' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [5] = $4\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3705' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [5] = $4\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3682' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [14] = $4\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3714' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [14] = $4\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3578' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [6] = $7\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3610' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [6] = $7\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3674' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [6] = $4\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3706' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [6] = $4\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3683' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [15] = $4\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3715' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [15] = $4\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3579' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [7] = $7\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3611' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [7] = $7\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3675' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$9\buffer[31:0] [7] = $4\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3707' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [7] = $4\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3580' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [8] = $7\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3612' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [8] = $7\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3581' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [9] = $7\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3613' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [9] = $7\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3582' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [10] = $7\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3614' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [10] = $7\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3583' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [11] = $7\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3615' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [11] = $7\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3584' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [12] = $7\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3616' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [12] = $7\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3585' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [13] = $7\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3617' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [13] = $7\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3586' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [14] = $7\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3618' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [14] = $7\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3587' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$12\buffer[31:0] [15] = $7\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$3619' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$11\buffer[31:0] [15] = $7\buffer[31:0] [23]'.
Removed 0 unused cells and 13 unused wires.

4.18.21. Continuing TECHMAP pass.
Mapping rv32i_alu.$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94 using $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr.
Mapping rv32i_alu.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$95 ($mux) with simplemap.

4.18.22. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 32
Parameter \B_WIDTH = 5
Parameter \Y_WIDTH = 32
Parameter \_TECHMAP_CELLTYPE_ = 611543148
Generating RTLIL representation for module `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr'.

4.18.23. Executing PROC pass (convert processes to netlists).

4.18.23.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 5 empty switches in `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$3995'.
Cleaned up 5 empty switches.

4.18.23.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.18.23.3. Executing PROC_INIT pass (extract init attributes).

4.18.23.4. Executing PROC_ARST pass (detect async resets in processes).

4.18.23.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$3995'.
     1/12: $10\buffer[31:0]
     2/12: $9\buffer[31:0]
     3/12: $8\buffer[31:0]
     4/12: $7\buffer[31:0]
     5/12: $6\buffer[31:0]
     6/12: $5\buffer[31:0]
     7/12: $4\buffer[31:0]
     8/12: $3\buffer[31:0]
     9/12: $2\buffer[31:0]
    10/12: $1\buffer[31:0]
    11/12: $0\buffer[31:0]
    12/12: $0\overflow[0:0]

4.18.23.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.\buffer' from process `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$3995'.
No latch inferred for signal `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.\overflow' from process `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$3995'.

4.18.23.7. Executing PROC_DFF pass (convert process syncs to FFs).

4.18.23.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 5 empty switches in `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$3995'.
Removing empty process `$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$proc$<techmap.v>:102$3995'.
Cleaned up 5 empty switches.
Removed 0 unused cells and 25 unused wires.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$ternary$<techmap.v>:104$3996 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$3998 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$4001 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$4004 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$4007 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$4010 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$4013 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$4016 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$4019 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$4022 ($mux) with simplemap.
Recursively mapping $paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.$procmux$4025 ($mux) with simplemap.
Analyzing pattern of constant bits for this cell:
Creating constmapped module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr'.

4.18.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.18.25. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4049' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [22] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4028' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [1] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4050' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [23] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4048' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [21] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4046' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [19] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4047' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [20] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4045' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [18] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4044' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [17] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4043' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [16] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4042' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [15] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4041' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [14] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4040' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [13] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4039' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [12] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4038' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [11] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4037' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [10] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4036' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [9] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4035' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [8] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4034' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [7] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4033' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [6] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4032' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [5] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4031' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [4] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4030' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [3] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4029' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [2] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4027' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [0] = \A [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4051' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [24] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4052' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [25] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4053' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [26] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4054' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [27] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4055' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [28] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4056' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [29] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4057' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [30] = \A [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4058' (?00) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$ternary$<techmap.v>:104$3996_Y [31] = \A [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4059' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4060' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4061' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4062' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4063' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [4] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4064' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4065' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4066' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [7] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4067' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [8] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4068' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [9] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4069' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [10] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4070' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [11] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4071' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [12] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4072' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [13] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4073' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [14] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4074' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [15] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4123' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4187' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4251' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4315' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4075' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [16] = $7\buffer[31:0] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4124' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4188' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4252' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [1] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4316' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [1] = \A [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4076' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [17] = $7\buffer[31:0] [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4125' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4189' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [2] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4253' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [2] = $1\buffer[31:0] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4317' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [2] = \A [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4077' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [18] = $7\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4126' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4190' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4254' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [3] = $1\buffer[31:0] [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4318' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [3] = \A [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4078' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [19] = $7\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4127' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [4] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4191' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [4] = $3\buffer[31:0] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4255' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [4] = $1\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4319' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [4] = \A [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4079' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [20] = $7\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4128' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4192' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [5] = $3\buffer[31:0] [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4256' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [5] = $1\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4320' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [5] = \A [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4080' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [21] = $7\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4129' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4193' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [6] = $3\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4257' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [6] = $1\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4321' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [6] = \A [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4081' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [22] = $7\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4130' (x0?) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [7] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4194' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [7] = $3\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4258' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [7] = $1\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4322' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [7] = \A [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4082' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [23] = $7\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4131' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [8] = $5\buffer[31:0] [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4195' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [8] = $3\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4259' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [8] = $1\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4323' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [8] = \A [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4083' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [24] = $7\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4132' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [9] = $5\buffer[31:0] [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4196' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [9] = $3\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4260' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [9] = $1\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4324' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [9] = \A [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4084' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [25] = $7\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4133' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [10] = $5\buffer[31:0] [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4197' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [10] = $3\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4261' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [10] = $1\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4325' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [10] = \A [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4085' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [26] = $7\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4134' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [11] = $5\buffer[31:0] [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4198' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [11] = $3\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4262' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [11] = $1\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4326' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [11] = \A [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4086' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [27] = $7\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4135' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [12] = $5\buffer[31:0] [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4199' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [12] = $3\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4263' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [12] = $1\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4327' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [12] = \A [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4087' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [28] = $7\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4136' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [13] = $5\buffer[31:0] [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4200' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [13] = $3\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4264' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [13] = $1\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4328' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [13] = \A [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4088' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [29] = $7\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4137' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [14] = $5\buffer[31:0] [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4201' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [14] = $3\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4265' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [14] = $1\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4329' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [14] = \A [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4089' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [30] = $7\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4138' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [15] = $5\buffer[31:0] [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4202' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [15] = $3\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4266' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [15] = $1\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4330' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [15] = \A [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4090' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$10\buffer[31:0] [31] = $7\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4139' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [16] = $5\buffer[31:0] [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4203' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [16] = $3\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4267' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [16] = $1\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4331' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [16] = \A [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4140' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [17] = $5\buffer[31:0] [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4204' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [17] = $3\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4268' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [17] = $1\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4332' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [17] = \A [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4141' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [18] = $5\buffer[31:0] [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4205' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [18] = $3\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4269' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [18] = $1\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4333' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [18] = \A [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4142' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [19] = $5\buffer[31:0] [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4206' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [19] = $3\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4270' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [19] = $1\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4334' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [19] = \A [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4143' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [20] = $5\buffer[31:0] [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4207' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [20] = $3\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4271' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [20] = $1\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4335' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [20] = \A [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4144' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [21] = $5\buffer[31:0] [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4208' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [21] = $3\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4272' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [21] = $1\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4336' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [21] = \A [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4145' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [22] = $5\buffer[31:0] [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4209' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [22] = $3\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4273' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [22] = $1\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4337' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [22] = \A [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4146' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [23] = $5\buffer[31:0] [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4210' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [23] = $3\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4274' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [23] = $1\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4338' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [23] = \A [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4147' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [24] = $5\buffer[31:0] [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4211' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [24] = $3\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4275' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [24] = $1\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4339' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [24] = \A [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4148' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [25] = $5\buffer[31:0] [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4212' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [25] = $3\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4276' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [25] = $1\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4340' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [25] = \A [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4149' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [26] = $5\buffer[31:0] [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4213' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [26] = $3\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4277' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [26] = $1\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4341' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [26] = \A [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4150' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [27] = $5\buffer[31:0] [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4214' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [27] = $3\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4278' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [27] = $1\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4342' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [27] = \A [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4151' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [28] = $5\buffer[31:0] [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4215' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [28] = $3\buffer[31:0] [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4279' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [28] = $1\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4343' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [28] = \A [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4152' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [29] = $5\buffer[31:0] [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4216' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [29] = $3\buffer[31:0] [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4280' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [29] = $1\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4344' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [29] = \A [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4153' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [30] = $5\buffer[31:0] [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4217' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [30] = $3\buffer[31:0] [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4281' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [30] = $1\buffer[31:0] [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4345' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [30] = \A [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4154' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$8\buffer[31:0] [31] = $5\buffer[31:0] [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4218' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$6\buffer[31:0] [31] = $3\buffer[31:0] [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4282' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$4\buffer[31:0] [31] = $1\buffer[31:0] [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4346' (x??) in module `$paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr' with constant driver `$2\buffer[31:0] [31] = \A [30]'.
Removed 0 unused cells and 8 unused wires.

4.18.26. Continuing TECHMAP pass.
Mapping rv32i_alu.$shl$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:389$96 using $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr.
Mapping rv32i_alu.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:389$97 ($mux) with simplemap.
Mapping rv32i_alu.$ne$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:393$98 ($ne) with simplemap.
Mapping rv32i_alu.$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:393$99 ($not) with simplemap.
Mapping rv32i_alu.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:393$100 ($mux) with simplemap.
Mapping rv32i_alu.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:396$101 ($or) with simplemap.
Mapping rv32i_alu.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:399$102 ($mux) with simplemap.
Mapping rv32i_alu.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:399$103 ($mux) with simplemap.
Mapping rv32i_alu.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:399$104 ($mux) with simplemap.
Mapping rv32i_alu.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:402$105 ($logic_not) with simplemap.
Mapping rv32i_alu.$xor$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:405$106 ($xor) with simplemap.
Mapping rv32i_alu.$xor$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:405$107 ($xor) with simplemap.
Mapping rv32i_alu.$xor$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:405$108 ($xor) with simplemap.
Mapping rv32i_alu.$auto$alumacc.cc:354:replace_macc$256 ($macc) with maccmap.
  add \a (32 bits, unsigned)
  add \sub (1 bits, unsigned)
  add \op_b (32 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree

4.18.27. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 33
Parameter \B_WIDTH = 33
Parameter \Y_WIDTH = 33
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=33\B_WIDTH=33\Y_WIDTH=33'.

4.18.28. Continuing TECHMAP pass.
Mapping rv32i_alu.$auto$maccmap.cc:240:synth$4556 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=33\B_WIDTH=33\Y_WIDTH=33.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.$xor$<techmap.v>:263$4564 ($xor) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.$xor$<techmap.v>:262$4563 ($xor) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.$and$<techmap.v>:260$4562 ($and) with simplemap.

4.18.29. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 33
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=33'.

4.18.30. Executing PROC pass (convert processes to netlists).

4.18.30.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.30.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.18.30.3. Executing PROC_INIT pass (extract init attributes).

4.18.30.4. Executing PROC_ARST pass (detect async resets in processes).

4.18.30.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=33.$proc$<techmap.v>:207$4735'.
     1/66: $0\p[32:0] [32]
     2/66: $0\g[32:0] [32]
     3/66: $0\p[32:0] [30]
     4/66: $0\g[32:0] [30]
     5/66: $0\p[32:0] [28]
     6/66: $0\g[32:0] [28]
     7/66: $0\p[32:0] [26]
     8/66: $0\g[32:0] [26]
     9/66: $0\p[32:0] [24]
    10/66: $0\g[32:0] [24]
    11/66: $0\p[32:0] [22]
    12/66: $0\g[32:0] [22]
    13/66: $0\p[32:0] [20]
    14/66: $0\g[32:0] [20]
    15/66: $0\p[32:0] [18]
    16/66: $0\g[32:0] [18]
    17/66: $0\p[32:0] [16]
    18/66: $0\g[32:0] [16]
    19/66: $0\p[32:0] [14]
    20/66: $0\g[32:0] [14]
    21/66: $0\p[32:0] [12]
    22/66: $0\g[32:0] [12]
    23/66: $0\p[32:0] [10]
    24/66: $0\g[32:0] [10]
    25/66: $0\p[32:0] [8]
    26/66: $0\g[32:0] [8]
    27/66: $0\p[32:0] [6]
    28/66: $0\g[32:0] [6]
    29/66: $0\p[32:0] [4]
    30/66: $0\g[32:0] [4]
    31/66: $0\p[32:0] [2]
    32/66: $0\g[32:0] [2]
    33/66: $0\p[32:0] [29]
    34/66: $0\g[32:0] [29]
    35/66: $0\p[32:0] [25]
    36/66: $0\g[32:0] [25]
    37/66: $0\p[32:0] [21]
    38/66: $0\g[32:0] [21]
    39/66: $0\p[32:0] [17]
    40/66: $0\g[32:0] [17]
    41/66: $0\p[32:0] [13]
    42/66: $0\g[32:0] [13]
    43/66: $0\p[32:0] [9]
    44/66: $0\g[32:0] [9]
    45/66: $0\p[32:0] [5]
    46/66: $0\g[32:0] [5]
    47/66: $0\p[32:0] [27]
    48/66: $0\g[32:0] [27]
    49/66: $0\p[32:0] [19]
    50/66: $0\g[32:0] [19]
    51/66: $0\p[32:0] [11]
    52/66: $0\g[32:0] [11]
    53/66: $0\p[32:0] [23]
    54/66: $0\g[32:0] [23]
    55/66: $0\p[32:0] [31]
    56/66: $0\g[32:0] [31]
    57/66: $0\p[32:0] [15]
    58/66: $0\g[32:0] [15]
    59/66: $0\p[32:0] [7]
    60/66: $0\g[32:0] [7]
    61/66: $0\p[32:0] [3]
    62/66: $0\g[32:0] [3]
    63/66: $0\p[32:0] [1]
    64/66: $0\g[32:0] [1]
    65/66: $0\g[32:0] [0]
    66/66: $0\p[32:0] [0]

4.18.30.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=33.\g' from process `$paramod\_90_lcu\WIDTH=33.$proc$<techmap.v>:207$4735'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=33.\p' from process `$paramod\_90_lcu\WIDTH=33.$proc$<techmap.v>:207$4735'.

4.18.30.7. Executing PROC_DFF pass (convert process syncs to FFs).

4.18.30.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=33.$proc$<techmap.v>:207$4735'.
Cleaned up 0 empty switches.

4.18.31. Executing OPT pass (performing simple optimizations).

4.18.31.1. Executing OPT_EXPR pass (perform const folding).

4.18.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=33'.
Removed a total of 0 cells.

4.18.31.3. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

4.18.31.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=33..
  removing unused `$and' cell `$and$<techmap.v>:222$4740'.
  removing unused `$and' cell `$and$<techmap.v>:222$4788'.
  removing unused `$and' cell `$and$<techmap.v>:222$4812'.
  removing unused `$and' cell `$and$<techmap.v>:222$4824'.
  removing unused `$and' cell `$and$<techmap.v>:222$4830'.
  removing unused `$and' cell `$and$<techmap.v>:230$4833'.
  removing unused `$and' cell `$and$<techmap.v>:230$4836'.
  removing unused `$and' cell `$and$<techmap.v>:230$4839'.
  removing unused `$and' cell `$and$<techmap.v>:230$4842'.
  removing unused `$and' cell `$and$<techmap.v>:230$4845'.
  removing unused `$and' cell `$and$<techmap.v>:230$4848'.
  removing unused `$and' cell `$and$<techmap.v>:230$4851'.
  removing unused `$and' cell `$and$<techmap.v>:230$4854'.
  removing unused `$and' cell `$and$<techmap.v>:230$4857'.
  removing unused `$and' cell `$and$<techmap.v>:230$4860'.
  removing unused `$and' cell `$and$<techmap.v>:230$4863'.
  removing unused `$and' cell `$and$<techmap.v>:230$4866'.
  removing unused `$and' cell `$and$<techmap.v>:230$4869'.
  removing unused `$and' cell `$and$<techmap.v>:230$4872'.
  removing unused `$and' cell `$and$<techmap.v>:230$4875'.
  removing unused `$and' cell `$and$<techmap.v>:230$4878'.
  removing unused `$and' cell `$and$<techmap.v>:230$4881'.
  removing unused `$and' cell `$and$<techmap.v>:230$4884'.
  removing unused `$and' cell `$and$<techmap.v>:230$4887'.
  removing unused `$and' cell `$and$<techmap.v>:230$4890'.
  removing unused `$and' cell `$and$<techmap.v>:230$4893'.
  removing unused `$and' cell `$and$<techmap.v>:230$4896'.
  removing unused `$and' cell `$and$<techmap.v>:230$4899'.
  removing unused `$and' cell `$and$<techmap.v>:230$4902'.
  removing unused `$and' cell `$and$<techmap.v>:230$4905'.
  removing unused `$and' cell `$and$<techmap.v>:230$4908'.
  removing unused `$and' cell `$and$<techmap.v>:230$4911'.
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

4.18.31.5. Finished fast OPT passes.

4.18.32. Continuing TECHMAP pass.
Mapping rv32i_alu.$auto$maccmap.cc:240:synth$4556.lcu using $paramod\_90_lcu\WIDTH=33.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561 ($mux) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.$not$<techmap.v>:258$4560 ($not) with simplemap.
Mapping rv32i_alu.$auto$maccmap.cc:240:synth$4556.B_conv ($pos) with simplemap.
Mapping rv32i_alu.$auto$maccmap.cc:240:synth$4556.A_conv ($pos) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:212$4736 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4738 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4741 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4744 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4747 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4750 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4753 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4756 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4759 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4762 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4765 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4768 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4771 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4774 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4777 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4780 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4783 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4786 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4789 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4792 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4795 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4798 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4801 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4804 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4807 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4810 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4813 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4816 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4819 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4822 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4825 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:221$4828 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4743 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4746 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4749 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4752 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4755 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4758 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4761 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4764 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4767 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4770 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4773 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4776 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4779 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4782 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4785 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4791 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4794 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4797 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4800 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4803 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4806 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4809 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4815 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4818 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4821 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:222$4827 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4831 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4834 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4837 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4840 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4843 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4846 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4849 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4852 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4855 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4858 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4861 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4864 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4867 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4870 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4873 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4876 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4879 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4882 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4885 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4888 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4891 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4894 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4897 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4900 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4903 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4906 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4909 ($and) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:212$4737 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4739 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4742 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4745 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4748 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4751 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4754 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4757 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4760 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4763 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4766 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4769 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4772 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4775 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4778 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4781 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4784 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4787 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4790 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4793 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4796 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4799 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4802 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4805 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4808 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4811 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4814 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4817 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4820 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4823 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4826 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:221$4829 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4832 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4835 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4838 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4841 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4844 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4847 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4850 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4853 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4856 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4859 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4862 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4865 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4868 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4871 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4874 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4877 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4880 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4883 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4886 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4889 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4892 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4895 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4898 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4901 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4904 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4907 ($or) with simplemap.
Mapping rv32i_alu.$techmap$auto$maccmap.cc:240:synth$4556.lcu.$or$<techmap.v>:229$4910 ($or) with simplemap.
Mapping rv32i_branch_unit.$procmux$288_CMP0 ($logic_not) with simplemap.
Mapping rv32i_branch_unit.$procmux$287_CMP0 ($eq) with simplemap.
Mapping rv32i_branch_unit.$procmux$286_CMP0 ($eq) with simplemap.
Mapping rv32i_branch_unit.$procmux$285_CMP0 ($eq) with simplemap.
Mapping rv32i_branch_unit.$procmux$284_CMP0 ($eq) with simplemap.

4.18.33. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 1
Parameter \S_WIDTH = 6
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=1\S_WIDTH=6'.

4.18.34. Continuing TECHMAP pass.
Mapping rv32i_branch_unit.$procmux$282 using $paramod\_90_pmux\WIDTH=1\S_WIDTH=6.
Mapping rv32i_branch_unit.$procmux$283_CMP0 ($eq) with simplemap.
Mapping rv32i_branch_unit.$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:469$125 ($not) with simplemap.
Mapping rv32i_branch_unit.$ne$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:470$126 ($ne) with simplemap.
Mapping rv32i_branch_unit.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:471$127 ($eq) with simplemap.
Mapping rv32i_branch_unit.$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:472$128 ($not) with simplemap.
Mapping rv32i_branch_unit.$techmap$procmux$282.$reduce_or$<techmap.v>:441$5187 ($reduce_or) with simplemap.
Mapping rv32i_branch_unit.$techmap$procmux$282.$and$<techmap.v>:434$5186 ($and) with simplemap.
Mapping rv32i_branch_unit.$techmap$procmux$282.$and$<techmap.v>:434$5185 ($and) with simplemap.
Mapping rv32i_branch_unit.$techmap$procmux$282.$and$<techmap.v>:434$5184 ($and) with simplemap.
Mapping rv32i_branch_unit.$techmap$procmux$282.$and$<techmap.v>:434$5183 ($and) with simplemap.
Mapping rv32i_branch_unit.$techmap$procmux$282.$and$<techmap.v>:434$5182 ($and) with simplemap.
Mapping rv32i_branch_unit.$techmap$procmux$282.$and$<techmap.v>:434$5181 ($and) with simplemap.
Mapping rv32i_branch_unit.$techmap$procmux$282.$ternary$<techmap.v>:445$5180 ($mux) with simplemap.
Mapping rv32i_branch_unit.$techmap$procmux$282.$reduce_or$<techmap.v>:445$5179 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$auto$opt_reduce.cc:126:opt_mux$407 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$procmux$280_CMP0 ($eq) with simplemap.
Mapping rv32i_imm_gen.$procmux$279_CMP0 ($eq) with simplemap.
Mapping rv32i_imm_gen.$procmux$278_CMP0 ($eq) with simplemap.
Mapping rv32i_imm_gen.$procmux$277_CMP0 ($eq) with simplemap.

4.18.35. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 31
Parameter \S_WIDTH = 4
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=31\S_WIDTH=4'.

4.18.36. Continuing TECHMAP pass.
Mapping rv32i_imm_gen.$procmux$275 using $paramod\_90_pmux\WIDTH=31\S_WIDTH=4.
Mapping rv32i_imm_gen.$procmux$276_CMP0 ($eq) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5347 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5346 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5345 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5344 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5343 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5342 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5341 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5340 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5339 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5338 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5337 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5336 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5335 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5334 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5333 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5332 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5331 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5330 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5329 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5328 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5327 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5326 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5325 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5324 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5323 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5322 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5321 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5320 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5319 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5318 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:441$5317 ($reduce_or) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$and$<techmap.v>:434$5316 ($and) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$and$<techmap.v>:434$5315 ($and) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$and$<techmap.v>:434$5314 ($and) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$and$<techmap.v>:434$5313 ($and) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$ternary$<techmap.v>:445$5312 ($mux) with simplemap.
Mapping rv32i_imm_gen.$techmap$procmux$275.$reduce_or$<techmap.v>:445$5311 ($reduce_or) with simplemap.
Mapping rv32i_extender.$procmux$260_CMP0 ($logic_not) with simplemap.

4.18.37. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_pmux'.
Parameter \WIDTH = 24
Parameter \S_WIDTH = 2
Generating RTLIL representation for module `$paramod\_90_pmux\WIDTH=24\S_WIDTH=2'.

4.18.38. Continuing TECHMAP pass.
Mapping rv32i_extender.$procmux$266 using $paramod\_90_pmux\WIDTH=24\S_WIDTH=2.
Mapping rv32i_extender.$procmux$259_CMP0 ($eq) with simplemap.
Mapping rv32i_extender.$procmux$272 ($mux) with simplemap.
Mapping rv32i_extender.$procmux$258 using $paramod\_90_pmux\WIDTH=24\S_WIDTH=2.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5711 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5710 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5709 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5708 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5707 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5706 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5705 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5704 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5703 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5702 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5701 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5700 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5699 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5698 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5697 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5696 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5695 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5694 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5693 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5692 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5691 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5690 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5689 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:441$5688 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$and$<techmap.v>:434$5687 ($and) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$and$<techmap.v>:434$5686 ($and) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$ternary$<techmap.v>:445$5685 ($mux) with simplemap.
Mapping rv32i_extender.$techmap$procmux$266.$reduce_or$<techmap.v>:445$5684 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5711 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5710 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5709 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5708 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5707 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5706 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5705 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5704 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5703 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5702 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5701 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5700 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5699 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5698 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5697 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5696 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5695 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5694 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5693 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5692 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5691 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5690 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5689 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:441$5688 ($reduce_or) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$and$<techmap.v>:434$5687 ($and) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$and$<techmap.v>:434$5686 ($and) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$ternary$<techmap.v>:445$5685 ($mux) with simplemap.
Mapping rv32i_extender.$techmap$procmux$258.$reduce_or$<techmap.v>:445$5684 ($reduce_or) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:608$131 ($and) with simplemap.
Mapping rv32CU.$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:618$132 ($not) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:618$133 ($or) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:618$134 ($and) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:618$135 ($or) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:618$136 ($and) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:618$137 ($or) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:618$138 ($and) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:618$139 ($and) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:625$142 ($and) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:629$144 ($and) with simplemap.
Mapping rv32CU.$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:634$146 ($not) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:687$147 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:688$148 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:690$149 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:691$150 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:692$151 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:703$153 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:716$158 ($or) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:716$159 ($and) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:738$161 ($and) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:738$162 ($or) with simplemap.
Mapping rv32CU.$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:739$163 ($not) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:739$164 ($and) with simplemap.
Mapping rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:740$165 ($eq) with simplemap.
Mapping rv32CU.$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:743$166 ($not) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:743$167 ($and) with simplemap.
Mapping rv32CU.$ne$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:746$169 ($reduce_bool) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:746$170 ($and) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:747$171 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:747$172 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:747$173 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:747$174 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:747$175 ($or) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:747$176 ($and) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:747$177 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:747$178 ($or) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:747$179 ($and) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:749$180 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:749$181 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:749$182 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:749$183 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:749$184 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:749$185 ($or) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:749$186 ($and) with simplemap.
Mapping rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$187 ($eq) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$188 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$189 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$190 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$191 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$192 ($or) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$193 ($and) with simplemap.
Mapping rv32CU.$ne$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$194 ($reduce_bool) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:751$195 ($and) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:752$197 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:752$198 ($or) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:752$199 ($and) with simplemap.
Mapping rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$200 ($eq) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$206 ($and) with simplemap.
Mapping rv32CU.$ne$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$207 ($reduce_bool) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:754$208 ($and) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:756$209 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:756$210 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:756$211 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:756$212 ($or) with simplemap.
Mapping rv32CU.$or$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:756$213 ($or) with simplemap.
Mapping rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:768$214 ($eq) with simplemap.
Mapping rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:769$215 ($eq) with simplemap.
Mapping rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$216 ($eq) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$217 ($and) with simplemap.
Mapping rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$218 ($eq) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:771$219 ($and) with simplemap.
Mapping rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:772$222 ($eq) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:772$223 ($and) with simplemap.
Mapping rv32CU.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:773$226 ($eq) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:773$227 ($and) with simplemap.
Mapping rv32CU.$not$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:775$229 ($not) with simplemap.
Mapping rv32CU.$and$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:775$230 ($and) with simplemap.
Mapping rv32CU.$procmux$332 ($mux) with simplemap.
Mapping rv32CU.$procmux$335 ($mux) with simplemap.
Mapping rv32CU.$procmux$338 ($mux) with simplemap.
Mapping rv32CU.$procmux$341 ($mux) with simplemap.
Mapping rv32CU.$procmux$344 ($mux) with simplemap.
Mapping rv32CU.$procmux$348 ($mux) with simplemap.
Mapping rv32CU.$procmux$351 ($mux) with simplemap.
Mapping rv32CU.$procmux$353 ($mux) with simplemap.
Mapping rv32CU.$procmux$356 ($mux) with simplemap.
Mapping rv32CU.$procmux$359 ($or) with simplemap.
Mapping rv32CU.$procmux$362 ($mux) with simplemap.
Mapping rv32CU.$procmux$365 ($mux) with simplemap.
Mapping rv32CU.$procmux$368 ($or) with simplemap.
Mapping rv32CU.$procmux$371 ($mux) with simplemap.
Mapping rv32CU.$procdff$394 ($adff) with simplemap.
Mapping rv32CU.$procdff$395 ($dff) with simplemap.
Mapping rv32CU.$procdff$396 ($dff) with simplemap.
Mapping rv32CU.$procdff$397 ($dff) with simplemap.
Mapping rv32CU.$procdff$398 ($dff) with simplemap.
Mapping rv32CU.$procdff$399 ($adff) with simplemap.
Mapping rv32CU.$procdff$400 ($adff) with simplemap.
Mapping rv32CU.$procdff$401 ($adff) with simplemap.
Mapping rv32CU.$procdff$402 ($dff) with simplemap.
Mapping rv32CU.$procdff$403 ($dff) with simplemap.
Mapping rv32_CPU_v2.$procmux$300 ($mux) with simplemap.
Mapping rv32_CPU_v2.$procmux$306 ($mux) with simplemap.
Mapping rv32_CPU_v2.$procmux$296 ($mux) with simplemap.
Mapping rv32_CPU_v2.$procmux$294 ($mux) with simplemap.
Mapping rv32_CPU_v2.$procmux$302 ($mux) with simplemap.
Mapping rv32_CPU_v2.$procmux$290 ($mux) with simplemap.
Mapping rv32_CPU_v2.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:837$231 ($logic_not) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:837$232 ($mux) with simplemap.
Mapping rv32_CPU_v2.$eq$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:838$233 ($logic_not) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:838$234 ($mux) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$235 ($mux) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$236 ($mux) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:856$237 ($mux) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:857$238 ($mux) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:922$245 ($mux) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:923$246 ($mux) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:976$249 ($mux) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:976$250 ($mux) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:976$251 ($mux) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:976$252 ($mux) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:994$254 ($mux) with simplemap.
Mapping rv32_CPU_v2.$ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:996$255 ($mux) with simplemap.
Mapping rv32_CPU_v2.$procmux$308 ($mux) with simplemap.
Mapping rv32_CPU_v2.$procmux$311 ($mux) with simplemap.
Mapping rv32_CPU_v2.$procmux$314 ($mux) with simplemap.
Mapping rv32_CPU_v2.$procmux$317 ($mux) with simplemap.
Mapping rv32_CPU_v2.$procdff$385 ($adff) with simplemap.
Mapping rv32_CPU_v2.$procdff$386 ($dff) with simplemap.
Mapping rv32_CPU_v2.$procdff$387 ($dff) with simplemap.
Mapping rv32_CPU_v2.$procdff$388 ($dff) with simplemap.
Mapping rv32_CPU_v2.$procdff$389 ($adff) with simplemap.
Mapping rv32_CPU_v2.$procdff$390 ($dff) with simplemap.
Mapping rv32_CPU_v2.$procdff$391 ($adff) with simplemap.
No more expansions possible.

4.19. Executing OPT pass (performing simple optimizations).

4.19.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6185' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6186' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [3] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6190' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6191' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [8] = \IR [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6192' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [9] = \IR [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6193' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [10] = \IR [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6194' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [11] = \IR [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6195' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [12] = \IR [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6196' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [13] = \IR [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6197' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [14] = \IR [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6198' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [15] = \IR [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6199' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [16] = \IR [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6200' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [17] = \IR [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6201' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [18] = \IR [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6202' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [19] = \IR [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6203' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [20] = \IR [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6204' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [21] = \IR [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6205' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [22] = \IR [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6206' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [23] = \IR [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6207' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [24] = \IR [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6208' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [25] = \IR [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6209' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [26] = \IR [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6210' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [27] = \IR [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6211' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [28] = \IR [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6212' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [29] = \IR [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6213' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [30] = \IR [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6214' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6181 [31] = \IR [31]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6259' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6260' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [3] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6264' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6265' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [8] = \IR [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6266' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [9] = \IR [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6267' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [10] = \IR [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6268' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [11] = \IR [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6269' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [12] = \IR [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6270' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [13] = \IR [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6271' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [14] = \IR [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6272' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [15] = \IR [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6273' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [16] = \IR [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6274' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [17] = \IR [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6275' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [18] = \IR [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6276' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [19] = \IR [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6278' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [21] = \IR [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6279' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [22] = \IR [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6280' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [23] = \IR [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6281' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [24] = \IR [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6282' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [25] = \IR [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6283' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [26] = \IR [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6284' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [27] = \IR [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6285' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [28] = \IR [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6286' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [29] = \IR [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6287' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [30] = \IR [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6288' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6255 [31] = \IR [31]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6333' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6329 [2] = \IR1 [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6332' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6329 [1] = \IR1 [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6387' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6377 [8] = \IR1 [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6388' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6377 [9] = \IR1 [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6380' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6377 [1] = \IR1 [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6381' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6377 [2] = \IR1 [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6382' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6377 [3] = \IR1 [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6383' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6377 [4] = \IR1 [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6384' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6377 [5] = \IR1 [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6385' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6377 [6] = \IR1 [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6386' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6377 [7] = \IR1 [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6018' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [2] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6019' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [3] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6023' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [7] = \IR [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6024' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [8] = \IR [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6025' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [9] = \IR [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6026' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [10] = \IR [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6027' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [11] = \IR [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6028' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [12] = \IR [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6029' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [13] = \IR [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6030' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [14] = \IR [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6031' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [15] = \IR [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6032' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [16] = \IR [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6033' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [17] = \IR [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6034' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [18] = \IR [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6035' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [19] = \IR [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6036' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [20] = \IR [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6038' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [22] = \IR [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6039' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [23] = \IR [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6040' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [24] = \IR [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6041' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [25] = \IR [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6042' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [26] = \IR [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6043' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [27] = \IR [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6044' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [28] = \IR [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6045' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [29] = \IR [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6046' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [30] = \IR [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6047' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6014 [31] = \IR [31]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6345' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6343 [0] = \IR1 [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6346' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6343 [1] = \IR1 [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6347' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6343 [2] = \IR1 [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6348' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6343 [3] = \IR1 [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6349' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6343 [4] = \IR1 [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6350' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6343 [5] = \IR1 [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6351' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6343 [6] = \IR1 [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6352' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6343 [7] = \IR1 [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6353' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6343 [8] = \IR1 [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6354' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6343 [9] = \IR1 [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6413' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6411 [0] = \IR1 [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6414' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6411 [1] = \IR1 [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6416' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6411 [3] = \IR1 [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6417' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6411 [4] = \IR1 [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6418' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6411 [5] = \IR1 [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6419' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6411 [6] = \IR1 [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6420' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6411 [7] = \IR1 [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6421' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6411 [8] = \IR1 [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6422' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6411 [9] = \IR1 [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6423' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6411 [10] = \IR1 [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6424' (?0) in module `\rv32CU' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$6411 [11] = \IR1 [31]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6579' in module `rv32CU'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$505' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [1] = \Timer [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$506' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [2] = \Timer [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$507' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [3] = \Timer [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$527' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [23] = \Timer [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$528' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [24] = \Timer [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$530' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [26] = \Timer [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$529' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [25] = \Timer [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$531' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [27] = \Timer [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$526' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [22] = \Timer [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$523' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [19] = \Timer [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$522' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [18] = \Timer [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$525' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [21] = \Timer [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$524' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [20] = \Timer [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$535' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [31] = \Timer [31]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$534' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [30] = \Timer [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$519' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [15] = \Timer [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$520' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [16] = \Timer [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$508' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [4] = \Timer [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$509' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [5] = \Timer [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$511' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [7] = \Timer [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$510' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [6] = \Timer [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$521' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [17] = \Timer [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$513' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [9] = \Timer [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$512' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [8] = \Timer [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$515' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [11] = \Timer [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$514' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [10] = \Timer [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$517' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [13] = \Timer [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$516' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [12] = \Timer [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$518' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [14] = \Timer [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$533' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [29] = \Timer [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$532' (?0) in module `\rv32Counters' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$502 [28] = \Timer [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1090' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [0] = \Cycle [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$784' (?0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:263$580_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1091' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [1] = \Cycle [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$753' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [1] = \Cycle [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$817' (1?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [0] = \Cycle [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1315' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:212$917_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1399' (?0) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [0] = \Cycle [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1092' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [2] = \Cycle [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$754' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [2] = \Cycle [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$818' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1404' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [1] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$919_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1093' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [3] = \Cycle [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$755' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [3] = \Cycle [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$819' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1442' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [2] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1045_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1094' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [4] = \Cycle [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$756' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [4] = \Cycle [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$820' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1321' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$922_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1405' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$923_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1420' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [3] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$967_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1095' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [5] = \Cycle [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$757' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [5] = \Cycle [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$821' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1443' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [4] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1048_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1096' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [6] = \Cycle [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$758' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [6] = \Cycle [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$822' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1322' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$925_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1406' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$926_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1435' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [5] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1024_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1097' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [7] = \Cycle [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$759' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [7] = \Cycle [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$823' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1444' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [6] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1051_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1098' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [8] = \Cycle [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$760' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [8] = \Cycle [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1337' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$970_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$824' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [7] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1323' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$928_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1407' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$929_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1421' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$971_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1428' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [7] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$991_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1099' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [9] = \Cycle [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$761' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [9] = \Cycle [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$825' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1445' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [8] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1054_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1100' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [10] = \Cycle [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$762' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [10] = \Cycle [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$826' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1324' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$931_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1408' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$932_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1436' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [9] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1027_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1101' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [11] = \Cycle [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$763' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [11] = \Cycle [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$827' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1446' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [10] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1057_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1102' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [12] = \Cycle [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$764' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [12] = \Cycle [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1338' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$973_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$828' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1325' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$934_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1409' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$935_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1422' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$974_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1432' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [11] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1015_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1103' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [13] = \Cycle [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$765' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [13] = \Cycle [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$829' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1447' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [12] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1060_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1104' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [14] = \Cycle [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$766' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [14] = \Cycle [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$830' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1326' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$937_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1410' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$938_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1437' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [13] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1030_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1105' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [15] = \Cycle [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$767' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [15] = \Cycle [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$831' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1448' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [14] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1063_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1106' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [16] = \Cycle [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$768' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [16] = \Cycle [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1345' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$994_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1339' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$976_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$832' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1327' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$940_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1411' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$941_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1423' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$977_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1429' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$995_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1401' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [15] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$1003_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1107' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [17] = \Cycle [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$769' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [17] = \Cycle [17]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$833' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [16] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1449' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [16] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1066_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1108' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [18] = \Cycle [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$770' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [18] = \Cycle [18]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$834' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1328' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$943_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1412' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$944_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1438' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [17] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1033_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1109' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [19] = \Cycle [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$771' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [19] = \Cycle [19]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$835' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [18] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1450' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [18] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1069_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1110' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [20] = \Cycle [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$772' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [20] = \Cycle [20]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1340' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$979_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$836' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1329' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$946_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1413' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$947_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1424' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$980_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1433' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [19] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1018_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1111' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [21] = \Cycle [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$773' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [21] = \Cycle [21]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$837' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [20] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1451' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [20] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1072_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1112' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [22] = \Cycle [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$774' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [22] = \Cycle [22]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$838' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1330' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$949_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1414' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$950_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1439' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [21] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1036_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1113' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [23] = \Cycle [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$775' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [23] = \Cycle [23]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$839' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [22] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1452' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [22] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1075_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1114' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [24] = \Cycle [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$776' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [24] = \Cycle [24]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1346' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$997_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1341' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$982_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$840' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1331' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$952_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1415' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$953_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1425' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$983_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1430' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$998_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1431' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [23] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1012_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1115' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [25] = \Cycle [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$777' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [25] = \Cycle [25]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$841' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [24] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1453' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [24] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1078_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1116' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [26] = \Cycle [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$778' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [26] = \Cycle [26]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$842' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [25] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1332' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$955_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1416' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$956_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1440' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [25] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1039_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1117' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [27] = \Cycle [27]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$779' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [27] = \Cycle [27]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$843' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [26] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1454' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [26] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1081_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1118' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [28] = \Cycle [28]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$780' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [28] = \Cycle [28]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1342' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$985_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$844' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [27] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1333' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$958_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1417' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$959_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1426' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$986_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1434' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [27] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1021_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1119' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [29] = \Cycle [29]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$781' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [29] = \Cycle [29]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$845' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [28] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1455' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [28] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1084_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1120' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [30] = \Cycle [30]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$782' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [30] = \Cycle [30]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$846' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [29] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1334' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$961_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1418' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$962_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1441' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [29] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1042_Y'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1121' (??0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$ternary$<techmap.v>:258$577_Y [31] = \Cycle [31]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$783' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:262$579_Y [31] = \Cycle [31]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$847' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [30] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1456' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [30] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:229$1087_Y'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1283' (1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1251' (101) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1154' (?0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$xor$<techmap.v>:262$584_Y [0] = \Timer [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1284' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1252' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [1] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1219' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1457' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.lcu.$and$<techmap.v>:212$917_Y = \Timer [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1541' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$418 [0] = \Timer [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1285' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1253' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [2] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1220' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [1] = \Timer [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1286' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1254' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [3] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1221' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [2] = \Timer [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1287' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1255' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [4] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1222' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [3] = \Timer [3]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1288' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [5] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1256' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [5] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1223' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [4] = \Timer [4]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1289' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [6] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1257' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [6] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1224' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [5] = \Timer [5]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1290' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1258' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [7] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1225' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [6] = \Timer [6]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1291' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [8] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1259' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [8] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1226' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [7] = \Timer [7]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1292' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [9] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1260' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [9] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1227' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [8] = \Timer [8]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1293' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [10] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1261' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [10] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1228' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [9] = \Timer [9]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1294' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [11] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1262' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [11] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1229' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [10] = \Timer [10]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1295' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [12] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1263' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [12] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1230' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [11] = \Timer [11]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1296' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [13] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1264' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [13] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1231' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [12] = \Timer [12]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1297' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [14] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1265' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [14] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1232' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [13] = \Timer [13]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1298' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [15] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1266' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [15] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1233' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [14] = \Timer [14]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1299' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [16] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1267' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [16] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1234' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [15] = \Timer [15]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1300' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [17] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1268' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [17] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1235' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [16] = \Timer [16]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1301' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [18] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1269' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [18] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1236' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [17] = \Timer [17]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1302' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [19] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1270' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [19] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1237' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [18] = \Timer [18]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1303' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [20] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1271' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [20] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1238' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [19] = \Timer [19]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1304' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [21] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1272' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [21] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1239' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [20] = \Timer [20]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1305' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [22] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1273' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [22] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1240' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [21] = \Timer [21]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1306' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [23] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1274' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [23] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1241' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [22] = \Timer [22]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1307' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [24] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1275' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [24] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1242' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [23] = \Timer [23]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1308' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [25] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1276' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [25] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1243' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [24] = \Timer [24]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1309' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [26] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1277' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [26] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1244' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [25] = \Timer [25]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1310' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [27] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1278' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [27] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1245' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [26] = \Timer [26]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1311' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [28] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1279' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [28] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1246' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [27] = \Timer [27]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1312' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [29] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1280' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [29] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1247' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [28] = \Timer [28]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1313' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [30] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1281' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [30] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1248' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [29] = \Timer [29]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1314' (0) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$not$<techmap.v>:258$581_Y [31] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1282' (011) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$ternary$<techmap.v>:258$582_Y [31] = 1'1'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1249' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [30] = \Timer [30]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1318' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$1006_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1316' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$1000_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1343' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$988_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$848' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$and$<techmap.v>:260$578_Y [31] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1335' (const_and) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$964_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1419' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$965_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1427' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$989_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1400' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$1001_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1402' (00) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$or$<techmap.v>:221$1007_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1403' (0?) in module `\rv32Counters' with constant driver `$auto$alumacc.cc:484:replace_alu$415 [31] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$1009_Y'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$816' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$413.$xor$<techmap.v>:263$580_Y [32] = $techmap$auto$alumacc.cc:470:replace_alu$413.lcu.$and$<techmap.v>:221$1009_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1250' (?1) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$and$<techmap.v>:260$583_Y [31] = \Timer [31]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1218' (0?) in module `\rv32Counters' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$416.$xor$<techmap.v>:263$585_Y [32] = $auto$alumacc.cc:484:replace_alu$418 [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2244' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [0] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2147' (?0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$xor$<techmap.v>:263$1986_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$419.$xor$<techmap.v>:262$1985_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2245' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [1] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$2308' (const_and) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.lcu.$and$<techmap.v>:212$917_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2392' (?0) in module `\rv32PCUnit' with constant driver `$auto$alumacc.cc:484:replace_alu$421 [0] = $techmap$auto$alumacc.cc:470:replace_alu$419.$and$<techmap.v>:260$1984_Y [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2246' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [2] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2247' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [3] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2248' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [4] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2249' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [5] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2250' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [6] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2251' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [7] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2252' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [8] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2253' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [9] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2254' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [10] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2255' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [11] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2256' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [12] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2257' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [13] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2258' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [14] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2259' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [15] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2260' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [16] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2261' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [17] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2262' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [18] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2263' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [19] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2264' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [20] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2265' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [21] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2266' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [22] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2267' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [23] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2268' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [24] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2269' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [25] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2270' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [26] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2271' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [27] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2272' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [28] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2273' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [29] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2274' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [30] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2275' (??0) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$ternary$<techmap.v>:258$1983_Y [31] = $ternary$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:321$28_Y [31]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2179' (0?) in module `\rv32PCUnit' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$419.$xor$<techmap.v>:263$1986_Y [32] = $auto$alumacc.cc:484:replace_alu$421 [31]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6897' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6898' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6899' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6900' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6901' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6902' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6903' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6904' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6905' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6906' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6907' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6908' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6909' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6910' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6911' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6912' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6913' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6914' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6915' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6916' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6917' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6918' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6919' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6920' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6921' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6922' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6923' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6924' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6925' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6926' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6927' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6928' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6857' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6858' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6859' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6860' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6861' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6862' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6863' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6864' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6865' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6866' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6867' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6868' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6869' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6870' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6871' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6872' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6873' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6874' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6875' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6876' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6877' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6878' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6879' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6880' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6881' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6882' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6883' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6884' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6885' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6886' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6887' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6888' in module `rv32_CPU_v2'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6930' (01?) in module `\rv32_CPU_v2' with constant driver `$auto$wreduce.cc:347:run$410 [1] = \cu_int_ebreak'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$6935' (01?) in module `\rv32_CPU_v2' with constant driver `\vec [2] = \IRQ'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1601' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1599 [0] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1602' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1599 [1] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1603' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1599 [2] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1621' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1617 [2] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1638' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1635 [1] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1639' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1635 [2] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1655' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1653 [0] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1656' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1653 [1] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1658' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1653 [3] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1659' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1653 [4] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1673' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1671 [0] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1674' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1671 [1] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1677' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1671 [4] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1699' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1697 [0] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1700' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1697 [1] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1701' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1697 [2] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1703' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1697 [4] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1718' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1715 [1] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1721' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1715 [4] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1736' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1733 [1] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1738' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1733 [3] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1739' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1733 [4] = \IR [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1754' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1751 [1] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1755' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1751 [2] = \IR [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1756' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1751 [3] = \IR [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1771' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1769 [0] = \IR [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1772' (?0) in module `\rv32dec' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$1769 [1] = \IR [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2456' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2450 [4] = \opcode [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2452' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2450 [0] = \opcode [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2453' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2450 [1] = \opcode [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2455' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2450 [3] = \opcode [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2474' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2468 [4] = \opcode [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2470' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2468 [0] = \opcode [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2471' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2468 [1] = \opcode [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2575' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2571 [2] = \func3 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2561' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2557 [2] = \func3 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2559' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2557 [0] = \func3 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2594' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2592 [0] = \opcode [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2595' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2592 [1] = \opcode [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2596' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2592 [2] = \opcode [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4912' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [0] = \op_b [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4913' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [1] = \op_b [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4914' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [2] = \op_b [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4915' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [3] = \op_b [3]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2811' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2810' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2809' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2808' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$2807' in module `rv32i_alu'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2489' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2487 [0] = \func3 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2490' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2487 [1] = \func3 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2516' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2514 [0] = \func3 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2532' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2529 [1] = \func3 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2533' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2529 [2] = \func3 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2545' (?0) in module `\rv32i_alu' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$2542 [1] = \func3 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4943' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [31] = \op_b [31]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4942' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [30] = \op_b [30]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4940' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [28] = \op_b [28]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4941' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [29] = \op_b [29]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4936' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [24] = \op_b [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4937' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [25] = \op_b [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4938' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [26] = \op_b [26]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4939' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [27] = \op_b [27]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4928' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [16] = \op_b [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4929' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [17] = \op_b [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4930' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [18] = \op_b [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4931' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [19] = \op_b [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4932' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [20] = \op_b [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4933' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [21] = \op_b [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4934' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [22] = \op_b [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4935' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [23] = \op_b [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4920' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [8] = \op_b [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4921' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [9] = \op_b [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4922' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [10] = \op_b [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4923' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [11] = \op_b [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4924' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [12] = \op_b [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4925' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [13] = \op_b [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4926' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [14] = \op_b [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4927' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [15] = \op_b [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4916' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [4] = \op_b [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4917' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [5] = \op_b [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4918' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [6] = \op_b [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4919' (??0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [7] = \op_b [7]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$4977' (0) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$not$<techmap.v>:258$4560_Y [32] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$4944' (010) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$ternary$<techmap.v>:258$4561_Y [32] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4631' (00) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$xor$<techmap.v>:262$4563_Y [32] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4597' (0?) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$xor$<techmap.v>:263$4564_Y [32] = $auto$maccmap.cc:247:synth$4559 [31]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$4664' (const_and) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$and$<techmap.v>:260$4562_Y [32] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5062' (const_and) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.lcu.$and$<techmap.v>:229$4909_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5121' (00) in module `\rv32i_alu' with constant driver `$auto$maccmap.cc:247:synth$4559 [32] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4598' (00) in module `\rv32i_alu' with constant driver `$techmap$auto$maccmap.cc:240:synth$4556.$xor$<techmap.v>:263$4564_Y [33] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5130' (?0) in module `\rv32i_branch_unit' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5127 [1] = \func3 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5131' (?0) in module `\rv32i_branch_unit' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5127 [2] = \func3 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5142' (?0) in module `\rv32i_branch_unit' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5140 [0] = \func3 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5143' (?0) in module `\rv32i_branch_unit' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5140 [1] = \func3 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5156' (?0) in module `\rv32i_branch_unit' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5153 [1] = \func3 [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5168' (?0) in module `\rv32i_branch_unit' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5166 [0] = \func3 [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5715' (?0) in module `\rv32i_extender' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5712 [1] = \sz [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5794' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5793' (?0) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5688_Y = $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5795' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5791' (?0) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5689_Y = $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5796' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5789' (?0) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5690_Y = $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5797' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5787' (?0) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5691_Y = $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5798' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5785' (?0) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5692_Y = $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5799' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5783' (?0) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5693_Y = $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5800' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5781' (?0) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5694_Y = $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5801' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5779' (?0) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5695_Y = $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5802' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [8] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5826' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5777' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5696_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5803' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5827' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5775' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5697_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5804' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5828' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5773' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5698_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5805' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5829' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5771' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5699_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5806' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5830' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5769' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5700_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5807' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5831' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5767' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5701_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5808' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5832' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5765' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5702_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5809' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5833' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5763' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5703_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5810' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5834' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [16] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5761' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5704_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5811' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [17] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5835' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [17] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5759' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5705_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5812' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [18] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5836' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [18] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5757' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5706_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5813' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [19] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5837' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [19] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5755' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5707_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5814' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [20] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5838' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [20] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5753' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5708_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5815' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [21] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5839' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [21] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5751' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5709_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5816' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [22] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5840' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [22] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5749' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5710_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5817' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5687_Y [23] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5841' (const_and) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$and$<techmap.v>:434$5686_Y [23] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5747' (00) in module `\rv32i_extender' with constant driver `$techmap$procmux$266.$reduce_or$<techmap.v>:441$5711_Y = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5263' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5257 [4] = \inst [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5260' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5257 [1] = \inst [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5281' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5275 [4] = \inst [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5278' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5275 [1] = \inst [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5280' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5275 [3] = \inst [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5241' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5239 [0] = \inst [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5242' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5239 [1] = \inst [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5243' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5239 [2] = \inst [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5245' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5239 [4] = \inst [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5297' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5293 [2] = \inst [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5350' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5348 [0] = \inst [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5351' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5348 [1] = \inst [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5352' (?0) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$5348 [2] = \inst [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5563' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5315_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5463' (0?) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5461 [1] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5562' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5315_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5468' (0?) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5466 [1] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5561' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5315_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5473' (0?) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5471 [1] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5560' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5315_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5478' (0?) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5476 [1] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5559' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5315_Y [7] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5483' (0?) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5481 [1] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [7]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5558' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5315_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5488' (0?) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5486 [1] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [6]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5557' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5315_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5493' (0?) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5491 [1] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5556' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5315_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5498' (0?) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5496 [1] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5555' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5315_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5503' (0?) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5501 [1] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5554' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5315_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5508' (0?) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5506 [1] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5553' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5315_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5513' (0?) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5511 [1] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5583' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5314_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5614' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5313_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5517' (00) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5516 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5552' (const_and) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$and$<techmap.v>:434$5315_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5518' (0?) in module `\rv32i_imm_gen' with constant driver `$auto$simplemap.cc:127:simplemap_reduce$5516 [1] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [0]'.
Replacing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5520' (0?) in module `\rv32i_imm_gen' with constant driver `$techmap$procmux$275.$reduce_or$<techmap.v>:441$5317_Y = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [0]'.

4.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6398' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6432'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6393 [4] = $auto$simplemap.cc:127:simplemap_reduce$6427 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6398' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6397' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6431'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6393 [3] = $auto$simplemap.cc:127:simplemap_reduce$6427 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6397' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6396' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6430'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6393 [2] = $auto$simplemap.cc:127:simplemap_reduce$6427 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6396' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6364' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6432'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6359 [4] = $auto$simplemap.cc:127:simplemap_reduce$6427 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6364' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6363' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6431'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6359 [3] = $auto$simplemap.cc:127:simplemap_reduce$6427 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6363' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6362' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6430'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6359 [2] = $auto$simplemap.cc:127:simplemap_reduce$6427 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6362' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6361' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6395'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6359 [1] = $auto$simplemap.cc:127:simplemap_reduce$6393 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6361' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6360' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6428'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6359 [0] = $auto$simplemap.cc:127:simplemap_reduce$6427 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6360' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6355' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6389'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6343 [10] = $auto$simplemap.cc:250:simplemap_eqne$6377 [10]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6355' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6356' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6390'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6343 [11] = $auto$simplemap.cc:250:simplemap_eqne$6377 [11]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6356' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6233' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6307'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [15] = $auto$simplemap.cc:127:simplemap_reduce$6291 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6233' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6232' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6306'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [14] = $auto$simplemap.cc:127:simplemap_reduce$6291 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6232' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6231' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6305'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [13] = $auto$simplemap.cc:127:simplemap_reduce$6291 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6231' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6230' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6304'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [12] = $auto$simplemap.cc:127:simplemap_reduce$6291 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6230' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6229' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6303'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [11] = $auto$simplemap.cc:127:simplemap_reduce$6291 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6229' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6227' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6301'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [9] = $auto$simplemap.cc:127:simplemap_reduce$6291 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6227' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6226' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6300'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [8] = $auto$simplemap.cc:127:simplemap_reduce$6291 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6226' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6225' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [7] = $auto$simplemap.cc:127:simplemap_reduce$6291 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6225' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6224' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6298'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [6] = $auto$simplemap.cc:127:simplemap_reduce$6291 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6224' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6223' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6297'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [5] = $auto$simplemap.cc:127:simplemap_reduce$6291 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6223' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6222' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6296'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [4] = $auto$simplemap.cc:127:simplemap_reduce$6291 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6222' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6219' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6293'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [1] = $auto$simplemap.cc:127:simplemap_reduce$6291 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6219' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6189' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6263'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6181 [6] = $auto$simplemap.cc:250:simplemap_eqne$6255 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6189' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6188' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6262'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6181 [5] = $auto$simplemap.cc:250:simplemap_eqne$6255 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6188' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6187' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6261'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6181 [4] = $auto$simplemap.cc:250:simplemap_eqne$6255 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6187' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6184' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6258'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6181 [1] = $auto$simplemap.cc:250:simplemap_eqne$6255 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6184' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6183' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6257'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6181 [0] = $auto$simplemap.cc:250:simplemap_eqne$6255 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6183' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6170' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6303'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6168 [1] = $auto$simplemap.cc:127:simplemap_reduce$6291 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6170' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6169' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6228'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6168 [0] = $auto$simplemap.cc:127:simplemap_reduce$6217 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6169' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6066' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6307'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [15] = $auto$simplemap.cc:127:simplemap_reduce$6291 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6066' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6065' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6306'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [14] = $auto$simplemap.cc:127:simplemap_reduce$6291 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6065' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6064' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6305'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [13] = $auto$simplemap.cc:127:simplemap_reduce$6291 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6064' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6063' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6304'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [12] = $auto$simplemap.cc:127:simplemap_reduce$6291 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6063' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6062' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6303'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [11] = $auto$simplemap.cc:127:simplemap_reduce$6291 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6062' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6060' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6301'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [9] = $auto$simplemap.cc:127:simplemap_reduce$6291 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6060' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6059' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6300'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [8] = $auto$simplemap.cc:127:simplemap_reduce$6291 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6059' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6058' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6299'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [7] = $auto$simplemap.cc:127:simplemap_reduce$6291 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6058' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6057' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6298'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [6] = $auto$simplemap.cc:127:simplemap_reduce$6291 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6057' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6056' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6297'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [5] = $auto$simplemap.cc:127:simplemap_reduce$6291 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6056' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6055' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6296'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [4] = $auto$simplemap.cc:127:simplemap_reduce$6291 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6055' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6052' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6293'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [1] = $auto$simplemap.cc:127:simplemap_reduce$6291 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6052' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6022' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6263'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6014 [6] = $auto$simplemap.cc:250:simplemap_eqne$6255 [6]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6022' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6021' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6262'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6014 [5] = $auto$simplemap.cc:250:simplemap_eqne$6255 [5]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6021' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6020' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6261'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6014 [4] = $auto$simplemap.cc:250:simplemap_eqne$6255 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6020' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6017' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6258'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6014 [1] = $auto$simplemap.cc:250:simplemap_eqne$6255 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6017' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$6016' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$6257'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$6014 [0] = $auto$simplemap.cc:250:simplemap_eqne$6255 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$6016' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6402' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6436'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6400 [1] = $auto$simplemap.cc:127:simplemap_reduce$6434 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6402' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6368' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6436'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6366 [1] = $auto$simplemap.cc:127:simplemap_reduce$6434 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6368' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6365' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6399'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6359 [5] = $auto$simplemap.cc:127:simplemap_reduce$6393 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6365' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6242' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6316'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6234 [7] = $auto$simplemap.cc:127:simplemap_reduce$6308 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6242' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6241' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6315'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6234 [6] = $auto$simplemap.cc:127:simplemap_reduce$6308 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6241' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6239' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6313'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6234 [4] = $auto$simplemap.cc:127:simplemap_reduce$6308 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6239' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6238' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6312'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6234 [3] = $auto$simplemap.cc:127:simplemap_reduce$6308 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6238' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6237' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6311'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6234 [2] = $auto$simplemap.cc:127:simplemap_reduce$6308 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6237' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6221' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6295'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [3] = $auto$simplemap.cc:127:simplemap_reduce$6291 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6221' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6220' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6294'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [2] = $auto$simplemap.cc:127:simplemap_reduce$6291 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6220' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6218' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6292'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6217 [0] = $auto$simplemap.cc:127:simplemap_reduce$6291 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6218' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6172' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6240'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6171 = $auto$simplemap.cc:127:simplemap_reduce$6234 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6172' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6075' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6316'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6067 [7] = $auto$simplemap.cc:127:simplemap_reduce$6308 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6075' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6074' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6315'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6067 [6] = $auto$simplemap.cc:127:simplemap_reduce$6308 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6074' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6072' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6313'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6067 [4] = $auto$simplemap.cc:127:simplemap_reduce$6308 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6072' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6071' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6312'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6067 [3] = $auto$simplemap.cc:127:simplemap_reduce$6308 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6071' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6070' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6311'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6067 [2] = $auto$simplemap.cc:127:simplemap_reduce$6308 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6070' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6054' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6295'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [3] = $auto$simplemap.cc:127:simplemap_reduce$6291 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6054' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6053' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6294'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [2] = $auto$simplemap.cc:127:simplemap_reduce$6291 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6053' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6051' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6292'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6050 [0] = $auto$simplemap.cc:127:simplemap_reduce$6291 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6051' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6369' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6403'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6366 [2] = $auto$simplemap.cc:127:simplemap_reduce$6400 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6369' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6247' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6321'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6243 [3] = $auto$simplemap.cc:127:simplemap_reduce$6317 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6247' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6245' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6319'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6243 [1] = $auto$simplemap.cc:127:simplemap_reduce$6317 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6245' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6236' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6310'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6234 [1] = $auto$simplemap.cc:127:simplemap_reduce$6308 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6236' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6235' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6309'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6234 [0] = $auto$simplemap.cc:127:simplemap_reduce$6308 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6235' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6080' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6321'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6076 [3] = $auto$simplemap.cc:127:simplemap_reduce$6317 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6080' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6078' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6319'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6076 [1] = $auto$simplemap.cc:127:simplemap_reduce$6317 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6078' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6069' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6310'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6067 [1] = $auto$simplemap.cc:127:simplemap_reduce$6308 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6069' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6068' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6309'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6067 [0] = $auto$simplemap.cc:127:simplemap_reduce$6308 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6068' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6244' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6318'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6243 [0] = $auto$simplemap.cc:127:simplemap_reduce$6317 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6244' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6077' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6318'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6076 [0] = $auto$simplemap.cc:127:simplemap_reduce$6317 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6077' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6249' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6248 [0] = $auto$simplemap.cc:127:simplemap_reduce$6322 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6249' from module `\rv32CU'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$6082' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$6323'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$6081 [0] = $auto$simplemap.cc:127:simplemap_reduce$6322 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$6082' from module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$504' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1186'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$502 [0] = $techmap$auto$alumacc.cc:470:replace_alu$416.$xor$<techmap.v>:263$585_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$504' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$482' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$554'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [15] = $auto$simplemap.cc:127:simplemap_reduce$538 [15]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$482' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$481' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$553'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [14] = $auto$simplemap.cc:127:simplemap_reduce$538 [14]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$481' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$480' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$552'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [13] = $auto$simplemap.cc:127:simplemap_reduce$538 [13]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$480' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$479' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$551'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [12] = $auto$simplemap.cc:127:simplemap_reduce$538 [12]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$479' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$478' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$550'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [11] = $auto$simplemap.cc:127:simplemap_reduce$538 [11]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$478' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$477' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$549'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [10] = $auto$simplemap.cc:127:simplemap_reduce$538 [10]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$477' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$476' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$548'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [9] = $auto$simplemap.cc:127:simplemap_reduce$538 [9]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$476' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$475' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$547'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [8] = $auto$simplemap.cc:127:simplemap_reduce$538 [8]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$475' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$474' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$546'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [7] = $auto$simplemap.cc:127:simplemap_reduce$538 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$474' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$473' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$545'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [6] = $auto$simplemap.cc:127:simplemap_reduce$538 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$473' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$472' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$544'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [5] = $auto$simplemap.cc:127:simplemap_reduce$538 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$472' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$471' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$543'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [4] = $auto$simplemap.cc:127:simplemap_reduce$538 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$471' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$470' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$542'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [3] = $auto$simplemap.cc:127:simplemap_reduce$538 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$470' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$469' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$541'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [2] = $auto$simplemap.cc:127:simplemap_reduce$538 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$469' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$468' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$540'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$466 [1] = $auto$simplemap.cc:127:simplemap_reduce$538 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$468' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$491' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$563'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$483 [7] = $auto$simplemap.cc:127:simplemap_reduce$555 [7]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$491' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$490' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$562'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$483 [6] = $auto$simplemap.cc:127:simplemap_reduce$555 [6]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$490' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$489' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$561'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$483 [5] = $auto$simplemap.cc:127:simplemap_reduce$555 [5]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$489' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$488' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$560'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$483 [4] = $auto$simplemap.cc:127:simplemap_reduce$555 [4]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$488' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$487' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$559'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$483 [3] = $auto$simplemap.cc:127:simplemap_reduce$555 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$487' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$486' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$558'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$483 [2] = $auto$simplemap.cc:127:simplemap_reduce$555 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$486' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$485' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$557'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$483 [1] = $auto$simplemap.cc:127:simplemap_reduce$555 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$485' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$496' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$568'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$492 [3] = $auto$simplemap.cc:127:simplemap_reduce$564 [3]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$496' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$495' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$567'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$492 [2] = $auto$simplemap.cc:127:simplemap_reduce$564 [2]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$495' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$494' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$566'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$492 [1] = $auto$simplemap.cc:127:simplemap_reduce$564 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$494' from module `\rv32Counters'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$499' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$571'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$497 [1] = $auto$simplemap.cc:127:simplemap_reduce$569 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$499' from module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1702' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1720'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1697 [3] = $auto$simplemap.cc:250:simplemap_eqne$1715 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1702' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1737' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1719'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1733 [2] = $auto$simplemap.cc:250:simplemap_eqne$1715 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1737' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1753' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1717'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1751 [0] = $auto$simplemap.cc:250:simplemap_eqne$1715 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1753' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:177:logic_reduce$1690' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1707'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$1689 [0] = $auto$simplemap.cc:127:simplemap_reduce$1706 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$1690' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1681' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1707'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1680 [0] = $auto$simplemap.cc:127:simplemap_reduce$1706 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1681' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1676' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1720'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1671 [3] = $auto$simplemap.cc:250:simplemap_eqne$1715 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1676' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1675' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1719'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1671 [2] = $auto$simplemap.cc:250:simplemap_eqne$1715 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1675' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1761' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1725'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1760 [0] = $auto$simplemap.cc:127:simplemap_reduce$1724 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1761' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1762' is identical to cell `$auto$simplemap.cc:177:logic_reduce$1691'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1760 [1] = $auto$simplemap.cc:168:logic_reduce$1689 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1762' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1663' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1707'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1662 [0] = $auto$simplemap.cc:127:simplemap_reduce$1706 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1663' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1775' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1757'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1769 [4] = $auto$simplemap.cc:250:simplemap_eqne$1751 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1775' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1657' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1719'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1653 [2] = $auto$simplemap.cc:250:simplemap_eqne$1715 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1657' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1735' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1717'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1733 [0] = $auto$simplemap.cc:250:simplemap_eqne$1715 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1735' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1640' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1720'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1635 [3] = $auto$simplemap.cc:250:simplemap_eqne$1715 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1640' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1773' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1719'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1769 [2] = $auto$simplemap.cc:250:simplemap_eqne$1715 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1773' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1774' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1720'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1769 [3] = $auto$simplemap.cc:250:simplemap_eqne$1715 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1774' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1637' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1717'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1635 [0] = $auto$simplemap.cc:250:simplemap_eqne$1715 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1637' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1641' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1757'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1635 [4] = $auto$simplemap.cc:250:simplemap_eqne$1751 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1641' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1622' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1720'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1617 [3] = $auto$simplemap.cc:250:simplemap_eqne$1715 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1622' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1619' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1717'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1617 [0] = $auto$simplemap.cc:250:simplemap_eqne$1715 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1619' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1623' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1757'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1617 [4] = $auto$simplemap.cc:250:simplemap_eqne$1751 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1623' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1609' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1707'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1608 [0] = $auto$simplemap.cc:127:simplemap_reduce$1706 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1609' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1604' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1720'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1599 [3] = $auto$simplemap.cc:250:simplemap_eqne$1715 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1604' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1779' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1707'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1778 [0] = $auto$simplemap.cc:127:simplemap_reduce$1706 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1779' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1780' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1726'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1778 [1] = $auto$simplemap.cc:127:simplemap_reduce$1724 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1780' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$1605' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$1757'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$1599 [4] = $auto$simplemap.cc:250:simplemap_eqne$1751 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1605' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1646' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1708'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1644 [1] = $auto$simplemap.cc:127:simplemap_reduce$1706 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1646' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1743' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1645'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1742 [0] = $auto$simplemap.cc:127:simplemap_reduce$1644 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1743' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1744' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1664'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1742 [1] = $auto$simplemap.cc:127:simplemap_reduce$1662 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1744' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1725' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1645'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1724 [0] = $auto$simplemap.cc:127:simplemap_reduce$1644 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1725' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1628' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1708'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1626 [1] = $auto$simplemap.cc:127:simplemap_reduce$1706 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1628' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1610' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1708'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1608 [1] = $auto$simplemap.cc:127:simplemap_reduce$1706 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1610' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1682' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1726'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1680 [1] = $auto$simplemap.cc:127:simplemap_reduce$1724 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1682' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1612' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1710'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1611 = $auto$simplemap.cc:127:simplemap_reduce$1709
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1612' from module `\rv32dec'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$1782' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$1684'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$1781 = $auto$simplemap.cc:127:simplemap_reduce$1683
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$1782' from module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3387' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3953'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [29] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [29]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3387' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3386' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3952'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [28] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [28]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3386' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3385' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3951'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [27] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [27]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3385' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3384' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3950'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [26] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [26]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3384' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3383' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3949'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [25] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [25]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3383' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3382' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3948'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [24] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [24]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3382' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3381' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3947'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [23] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [23]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3381' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3380' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3946'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [22] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [22]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3380' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3379' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3945'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [21] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [21]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3379' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3378' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3944'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [20] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [20]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3378' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3377' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3943'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [19] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [19]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3377' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3376' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3942'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [18] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [18]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3376' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3375' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3941'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [17] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [17]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3375' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3374' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3940'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [16] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [16]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3374' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3373' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3939'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [15] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [15]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3373' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3372' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3938'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [14] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [14]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3372' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3371' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3937'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [13] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [13]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3371' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3370' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3936'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [12] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [12]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3370' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3369' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3935'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [11] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [11]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3369' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3368' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3934'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [10] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [10]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3368' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3367' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3933'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [9] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [9]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3367' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3366' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3932'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [8] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [8]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3366' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3365' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3931'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [7] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [7]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3365' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3364' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3930'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [6] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [6]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3364' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3363' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3929'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [5] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [5]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3363' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3362' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3928'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [4] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [4]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3362' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3361' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3927'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [3] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [3]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3361' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3360' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3926'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [2] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [2]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3360' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3359' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3925'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [1] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [1]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3359' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3358' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3924'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [0] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [0]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3358' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3289' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3855'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [27] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [27]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3289' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3288' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3854'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [26] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [26]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3288' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3287' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3853'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [25] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [25]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3287' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3286' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3852'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [24] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [24]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3286' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3285' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3851'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [23] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [23]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3285' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3284' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3850'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [22] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [22]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3284' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3283' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3849'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [21] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [21]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3283' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3282' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3848'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [20] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [20]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3282' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3281' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3847'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [19] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [19]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3281' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3280' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3846'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [18] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [18]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3280' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3279' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3845'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [17] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [17]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3279' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3278' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3844'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [16] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [16]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3278' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3277' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3843'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [15] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [15]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3277' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3276' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3842'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [14] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [14]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3276' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3275' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3841'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [13] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [13]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3275' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3274' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3840'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [12] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [12]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3274' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3273' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3839'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [11] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [11]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3273' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3272' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3838'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [10] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [10]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3272' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3271' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3837'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [9] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [9]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3271' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3270' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3836'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [8] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [8]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3270' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3269' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3835'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [7] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [7]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3269' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3268' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3834'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [6] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [6]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3268' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3267' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3833'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [5] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [5]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3267' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3266' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3832'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [4] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [4]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3266' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3265' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3831'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [3] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [3]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3265' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3264' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3830'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [2] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [2]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3264' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3263' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3829'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [1] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [1]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3263' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3262' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3828'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [0] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [0]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3262' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3189' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3755'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [15] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [15]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3189' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3188' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3754'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [14] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [14]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3188' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3187' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3753'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [13] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [13]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3187' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3186' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3752'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [12] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [12]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3186' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3185' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3751'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [11] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [11]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3185' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3184' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3750'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [10] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [10]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3184' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3183' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3749'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [9] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [9]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3183' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3182' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3748'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [8] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [8]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3182' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3181' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3747'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [7] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [7]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3181' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3180' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3746'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [6] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [6]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3180' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3179' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3745'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [5] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [5]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3179' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3178' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3744'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [4] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [4]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3178' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3177' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3743'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [3] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [3]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3177' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3176' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3742'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [2] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [2]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3176' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3175' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3741'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [1] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [1]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3175' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3174' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3740'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [0] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [0]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3174' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3173' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3739'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$7\buffer[31:0] [7] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$7\buffer[31:0] [7]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3173' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3172' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3738'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$7\buffer[31:0] [6] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$7\buffer[31:0] [6]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3172' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3171' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3737'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$7\buffer[31:0] [5] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$7\buffer[31:0] [5]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3171' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3170' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3736'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$7\buffer[31:0] [4] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$7\buffer[31:0] [4]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3170' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3169' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3735'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$7\buffer[31:0] [3] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$7\buffer[31:0] [3]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3169' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3168' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3734'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$7\buffer[31:0] [2] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$7\buffer[31:0] [2]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3168' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3167' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3733'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$7\buffer[31:0] [1] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$7\buffer[31:0] [1]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3167' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3166' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3732'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$7\buffer[31:0] [0] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$7\buffer[31:0] [0]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3166' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3085' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3651'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [15] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [15]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3085' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3084' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3650'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [14] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [14]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3084' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3083' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3649'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [13] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [13]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3083' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3082' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3648'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [12] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [12]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3082' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3081' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3647'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [11] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [11]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3081' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3080' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3646'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [10] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [10]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3080' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3079' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3645'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [9] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [9]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3079' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3078' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3644'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [8] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [8]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3078' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3077' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3643'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [7] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [7]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3077' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3076' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3642'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [6] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [6]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3076' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3075' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3641'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [5] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [5]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3075' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3074' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3640'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [4] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [4]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3074' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3073' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3639'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [3] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [3]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3073' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3072' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3638'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [2] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [2]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3072' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3071' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3637'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [1] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [1]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3071' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3070' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3636'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [0] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [0]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3070' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2560' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2574'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2557 [1] = $auto$simplemap.cc:250:simplemap_eqne$2571 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2560' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2544' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2573'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2542 [0] = $auto$simplemap.cc:250:simplemap_eqne$2571 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2544' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2531' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2573'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2529 [0] = $auto$simplemap.cc:250:simplemap_eqne$2571 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2531' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2517' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2574'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2514 [1] = $auto$simplemap.cc:250:simplemap_eqne$2571 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2517' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2518' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2546'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2514 [2] = $auto$simplemap.cc:250:simplemap_eqne$2542 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2518' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2503' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2574'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2500 [1] = $auto$simplemap.cc:250:simplemap_eqne$2571 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2503' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2502' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2573'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2500 [0] = $auto$simplemap.cc:250:simplemap_eqne$2571 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2502' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2504' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2546'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2500 [2] = $auto$simplemap.cc:250:simplemap_eqne$2542 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2504' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2495' is identical to cell `$auto$simplemap.cc:177:logic_reduce$2586'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2494 = $auto$simplemap.cc:168:logic_reduce$2585
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2495' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2491' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2546'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2487 [2] = $auto$simplemap.cc:250:simplemap_eqne$2542 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2491' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2478' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2602'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2477 [0] = $auto$simplemap.cc:127:simplemap_reduce$2601 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2478' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2473' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2597'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2468 [3] = $auto$simplemap.cc:250:simplemap_eqne$2592 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2473' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2460' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2602'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2459 [0] = $auto$simplemap.cc:127:simplemap_reduce$2601 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2460' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$2454' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$2472'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$2450 [2] = $auto$simplemap.cc:250:simplemap_eqne$2468 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$2454' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3388' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3954'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$1\buffer[31:0] [30] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$1\buffer[31:0] [30]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3388' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$4553' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$4630'.
    Redirecting output \Y: $xor$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:405$106_Y = $techmap$auto$maccmap.cc:240:synth$4556.$xor$<techmap.v>:262$4563_Y [31]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$4553' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3290' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3856'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$4\buffer[31:0] [28] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$4\buffer[31:0] [28]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3290' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3190' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3756'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$11\buffer[31:0] [16] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$11\buffer[31:0] [16]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3190' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3086' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3652'.
    Redirecting output \Y: $techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$10\buffer[31:0] [16] = $techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$10\buffer[31:0] [16]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$3086' from module `\rv32i_alu'.
  Cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$2974' is identical to cell `$techmap$shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94.$auto$simplemap.cc:277:simplemap_mux$3540'.
    Redirecting output \Y: $sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93_Y [0] = $shr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$94_Y [0]
    Removing $_MUX_ cell `$techmap$sshr$/ef-design/projects/dwarfRV32/qflow/source/rv32.v:388$93.$auto$simplemap.cc:277:simplemap_mux$2974' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2537' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2550'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2536 = $auto$simplemap.cc:127:simplemap_reduce$2549
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2537' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2522' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2565'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2521 = $auto$simplemap.cc:127:simplemap_reduce$2564
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2522' from module `\rv32i_alu'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$2508' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$2579'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$2507 = $auto$simplemap.cc:127:simplemap_reduce$2578
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$2508' from module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5169' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5191'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5166 [1] = $auto$simplemap.cc:250:simplemap_eqne$5188 [1]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5169' from module `\rv32i_branch_unit'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5170' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5192'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5166 [2] = $auto$simplemap.cc:250:simplemap_eqne$5188 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5170' from module `\rv32i_branch_unit'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5155' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5190'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5153 [0] = $auto$simplemap.cc:250:simplemap_eqne$5188 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5155' from module `\rv32i_branch_unit'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5157' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5192'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5153 [2] = $auto$simplemap.cc:250:simplemap_eqne$5188 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5157' from module `\rv32i_branch_unit'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5144' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5192'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5140 [2] = $auto$simplemap.cc:250:simplemap_eqne$5188 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5144' from module `\rv32i_branch_unit'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5129' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5190'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5127 [0] = $auto$simplemap.cc:250:simplemap_eqne$5188 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5129' from module `\rv32i_branch_unit'.
  Cell `$auto$simplemap.cc:177:logic_reduce$5123' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5148'.
    Redirecting output \Y: $auto$simplemap.cc:168:logic_reduce$5122 = $auto$simplemap.cc:127:simplemap_reduce$5147
    Removing $_OR_ cell `$auto$simplemap.cc:177:logic_reduce$5123' from module `\rv32i_branch_unit'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5204' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5208'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5202 = $auto$simplemap.cc:250:simplemap_eqne$5206
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5204' from module `\rv32i_branch_unit'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5135' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5161'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5134 = $auto$simplemap.cc:127:simplemap_reduce$5160
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5135' from module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5918' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [2] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5918' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5917' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [1] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5917' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5916' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [0] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5916' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5924' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [8] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5924' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5927' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [11] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5927' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5930' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [14] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5930' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5933' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [17] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5933' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5936' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [20] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5936' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5952' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [12] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5952' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5955' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [15] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5955' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5958' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [18] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5958' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5961' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [21] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5961' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5825' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [7] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5825' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5824' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5946'.
    Redirecting output \Y: $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [6] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [6]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5824' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5821' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5943'.
    Redirecting output \Y: $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [3] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5821' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5818' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5940'.
    Redirecting output \Y: $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [0] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [0]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5818' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5925' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [9] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5925' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5928' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [12] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5928' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5931' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [15] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5931' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5934' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [18] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5934' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5937' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [21] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5937' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5941' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5819'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [1] = $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [1]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5941' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5944' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5822'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [4] = $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [4]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5944' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5947' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [7] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5947' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5950' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [10] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5950' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5953' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [13] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5953' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5956' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [16] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5956' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5959' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [19] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5959' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5962' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [22] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5962' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5963' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [23] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5963' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5939' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [23] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5939' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5891' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5897'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5700_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5697_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5891' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5885' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5897'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5703_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5697_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5885' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5879' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5897'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5706_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5697_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5879' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5873' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5897'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5709_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5697_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5873' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5869' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5897'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5711_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5697_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5869' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5921' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [5] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5921' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5922' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [6] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5922' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5960' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [20] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5960' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5957' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [17] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5957' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5954' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [14] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5954' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5951' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [11] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5951' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5948' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5949'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [8] = $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [9]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5948' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5945' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5823'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [5] = $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [5]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5945' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5942' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5820'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5686_Y [2] = $techmap$procmux$266.$and$<techmap.v>:434$5686_Y [2]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5942' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5938' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [22] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5938' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5935' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [19] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5935' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5932' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [16] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5932' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5929' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [13] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5929' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5926' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [10] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5926' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5923' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [7] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5923' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5920' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5919'.
    Redirecting output \Y: $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [4] = $techmap$procmux$258.$and$<techmap.v>:434$5687_Y [3]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5920' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5867' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5989'.
    Redirecting output \Y: $techmap$procmux$266.$reduce_or$<techmap.v>:445$5684_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:445$5684_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5867' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5899' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5901'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5696_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5695_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5899' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5897' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5901'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5697_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5695_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5897' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5895' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5901'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5698_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5695_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5895' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5893' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5901'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5699_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5695_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5893' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5889' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5901'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5701_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5695_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5889' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5887' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5901'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5702_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5695_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5887' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5883' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5901'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5704_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5695_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5883' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5881' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5901'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5705_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5695_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5881' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5877' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5901'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5707_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5695_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5877' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5875' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5901'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5708_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5695_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5875' from module `\rv32i_extender'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5871' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5901'.
    Redirecting output \Y: $techmap$procmux$258.$reduce_or$<techmap.v>:441$5710_Y = $techmap$procmux$258.$reduce_or$<techmap.v>:441$5695_Y
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5871' from module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5633' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [19] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5633' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5632' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [18] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5632' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5631' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [17] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5631' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5630' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [16] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5630' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5629' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [15] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5629' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5628' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [14] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5628' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5627' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [13] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5627' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5626' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [12] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5626' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5639' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [25] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5639' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5611' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5612'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [28] = $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5611' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5610' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5612'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [27] = $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5610' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5609' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5612'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [26] = $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5609' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5608' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5612'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [25] = $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5608' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5607' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5612'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [24] = $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5607' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5606' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5612'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [23] = $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5606' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5605' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5612'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [22] = $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5605' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5604' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5612'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [21] = $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5604' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5603' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5612'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [20] = $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5603' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5640' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [26] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5640' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5642' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [28] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5642' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5637' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [23] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5637' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5549' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [28] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5549' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5548' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [27] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5548' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5547' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [26] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5547' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5546' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [25] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5546' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5545' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [24] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5545' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5544' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [23] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5544' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5543' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [22] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5543' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5542' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [21] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5542' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5541' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [20] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5541' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5540' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [19] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5540' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5539' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [18] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5539' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5538' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [17] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5538' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5537' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [16] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5537' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5536' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [15] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5536' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5535' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [14] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5535' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5534' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [13] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5534' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5533' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [12] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5533' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5532' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [11] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5532' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5636' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [22] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5636' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5638' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [24] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5638' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5641' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [27] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5641' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5643' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [29] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5643' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5407' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5417'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5406 [0] = $auto$simplemap.cc:127:simplemap_reduce$5416 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5407' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5402' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5417'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5401 [0] = $auto$simplemap.cc:127:simplemap_reduce$5416 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5402' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5397' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5417'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5396 [0] = $auto$simplemap.cc:127:simplemap_reduce$5416 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5397' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5392' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5417'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5391 [0] = $auto$simplemap.cc:127:simplemap_reduce$5416 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5392' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5387' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5417'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5386 [0] = $auto$simplemap.cc:127:simplemap_reduce$5416 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5387' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5382' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5417'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5381 [0] = $auto$simplemap.cc:127:simplemap_reduce$5416 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5382' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5377' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5417'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5376 [0] = $auto$simplemap.cc:127:simplemap_reduce$5416 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5377' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5372' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5417'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5371 [0] = $auto$simplemap.cc:127:simplemap_reduce$5416 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5372' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5644' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [30] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5644' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5613' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5612'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [30] = $techmap$procmux$275.$and$<techmap.v>:434$5314_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5613' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5551' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5550'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [30] = $techmap$procmux$275.$and$<techmap.v>:434$5316_Y [29]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5551' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5635' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5634'.
    Redirecting output \Y: $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [21] = $techmap$procmux$275.$and$<techmap.v>:434$5313_Y [20]
    Removing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$5635' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5298' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5353'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5293 [3] = $auto$simplemap.cc:250:simplemap_eqne$5348 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5298' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5299' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5354'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5293 [4] = $auto$simplemap.cc:250:simplemap_eqne$5348 [4]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5299' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5277' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5295'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5275 [0] = $auto$simplemap.cc:250:simplemap_eqne$5293 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5277' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5262' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5353'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5257 [3] = $auto$simplemap.cc:250:simplemap_eqne$5348 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5262' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5261' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5279'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5257 [2] = $auto$simplemap.cc:250:simplemap_eqne$5275 [2]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5261' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5259' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5295'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5257 [0] = $auto$simplemap.cc:250:simplemap_eqne$5293 [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5259' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5249' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5358'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5248 [0] = $auto$simplemap.cc:127:simplemap_reduce$5357 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5249' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$5244' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$5353'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$5239 [3] = $auto$simplemap.cc:250:simplemap_eqne$5348 [3]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$5244' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5412' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5417'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5411 [0] = $auto$simplemap.cc:127:simplemap_reduce$5416 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5412' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5367' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5417'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5366 [0] = $auto$simplemap.cc:127:simplemap_reduce$5416 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5367' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5304' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5359'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5302 [1] = $auto$simplemap.cc:127:simplemap_reduce$5357 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5304' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5267' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5285'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5266 [0] = $auto$simplemap.cc:127:simplemap_reduce$5284 [0]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5267' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5250' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5359'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5248 [1] = $auto$simplemap.cc:127:simplemap_reduce$5357 [1]
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5250' from module `\rv32i_imm_gen'.
  Cell `$auto$simplemap.cc:136:simplemap_reduce$5252' is identical to cell `$auto$simplemap.cc:136:simplemap_reduce$5361'.
    Redirecting output \Y: $auto$simplemap.cc:127:simplemap_reduce$5251 = $auto$simplemap.cc:127:simplemap_reduce$5360
    Removing $_OR_ cell `$auto$simplemap.cc:136:simplemap_reduce$5252' from module `\rv32i_imm_gen'.
Removed a total of 404 cells.

4.19.3. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

4.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1122'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1123'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1124'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1125'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1126'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1127'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1128'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1129'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1130'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1131'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1132'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1133'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1134'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1135'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1136'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1137'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1138'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1139'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1140'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1141'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1142'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1143'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1144'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1145'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1146'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1147'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1148'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1149'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1150'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1151'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1152'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1153'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1319'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1347'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1348'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1363'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1370'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1458'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1460'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1461'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1477'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1485'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1489'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1490'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1505'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$1512'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1542'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1544'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1545'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1561'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$1569'.
Finding unused cells or wires in module \rv32PCUnit..
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2243'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2276'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2277'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2278'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2279'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2280'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2281'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2282'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2283'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2284'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2285'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2286'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2287'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2288'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2289'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2290'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2291'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2292'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2293'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2294'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2295'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2296'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2297'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2298'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2299'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2300'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2301'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2302'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2303'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2304'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2305'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2306'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$2307'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2309'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2311'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2312'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2328'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2336'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2340'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2341'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2356'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:85:simplemap_bitop$2363'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2393'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2395'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2396'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2412'.
  removing unused `$_OR_' cell `$auto$simplemap.cc:85:simplemap_bitop$2420'.
Finding unused cells or wires in module \rv32_CPU_v2..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$6856'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$6896'.
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4945'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4946'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4947'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4948'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4949'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4950'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4951'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4952'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4953'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4954'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4955'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4956'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4957'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4958'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4959'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4960'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4961'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4962'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4963'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4964'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4965'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4966'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4967'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4968'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4969'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4970'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4971'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4972'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4973'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4974'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4975'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$4976'.
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

4.19.5. Finished fast OPT passes.

4.20. Executing ABC pass (technology mapping using ABC).

4.20.1. Extracting gate netlist of module `\rv32CU' to `<abc-temp-dir>/input.blif'..
Extracted 316 gates and 461 wires to a netlist network with 143 inputs and 91 outputs.

4.20.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

4.20.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       46
ABC RESULTS:              AOI3 cells:        9
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:       71
ABC RESULTS:              NAND cells:       29
ABC RESULTS:               NOR cells:       27
ABC RESULTS:               NOT cells:       44
ABC RESULTS:              OAI3 cells:        7
ABC RESULTS:              OAI4 cells:       29
ABC RESULTS:                OR cells:       44
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:        internal signals:      227
ABC RESULTS:           input signals:      143
ABC RESULTS:          output signals:       91
Removing temp directory.

4.20.2. Extracting gate netlist of module `\rv32Counters' to `<abc-temp-dir>/input.blif'..
Extracted 409 gates and 512 wires to a netlist network with 102 inputs and 68 outputs.

4.20.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

4.20.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       75
ABC RESULTS:              AOI3 cells:       12
ABC RESULTS:               MUX cells:       98
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:       34
ABC RESULTS:               NOT cells:       20
ABC RESULTS:              OAI3 cells:        8
ABC RESULTS:                OR cells:       15
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:               XOR cells:       57
ABC RESULTS:        internal signals:      342
ABC RESULTS:           input signals:      102
ABC RESULTS:          output signals:       68
Removing temp directory.

4.20.3. Extracting gate netlist of module `\rv32PCUnit' to `<abc-temp-dir>/input.blif'..
Extracted 511 gates and 685 wires to a netlist network with 172 inputs and 64 outputs.

4.20.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

4.20.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       67
ABC RESULTS:              AOI3 cells:       24
ABC RESULTS:               MUX cells:      179
ABC RESULTS:              NAND cells:       69
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:       65
ABC RESULTS:              OAI3 cells:       68
ABC RESULTS:                OR cells:       15
ABC RESULTS:              XNOR cells:       23
ABC RESULTS:               XOR cells:       47
ABC RESULTS:        internal signals:      449
ABC RESULTS:           input signals:      172
ABC RESULTS:          output signals:       64
Removing temp directory.

4.20.4. Extracting gate netlist of module `\rv32_CPU_v2' to `<abc-temp-dir>/input.blif'..
Extracted 655 gates and 1219 wires to a netlist network with 562 inputs and 324 outputs.

4.20.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

4.20.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       35
ABC RESULTS:              AOI3 cells:       33
ABC RESULTS:               MUX cells:      512
ABC RESULTS:              NAND cells:       64
ABC RESULTS:               NOR cells:        6
ABC RESULTS:               NOT cells:        8
ABC RESULTS:              OAI4 cells:       64
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:      333
ABC RESULTS:           input signals:      562
ABC RESULTS:          output signals:      324
Removing temp directory.

4.20.5. Extracting gate netlist of module `\rv32dec' to `<abc-temp-dir>/input.blif'..
Extracted 43 gates and 49 wires to a netlist network with 5 inputs and 11 outputs.

4.20.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

4.20.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       22
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        3
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:       11
Removing temp directory.

4.20.6. Extracting gate netlist of module `\rv32i_alu' to `<abc-temp-dir>/input.blif'..
Extracted 1059 gates and 1139 wires to a netlist network with 78 inputs and 36 outputs.

4.20.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

4.20.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      140
ABC RESULTS:              AOI3 cells:       36
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:      476
ABC RESULTS:              NAND cells:       32
ABC RESULTS:               NOR cells:       61
ABC RESULTS:               NOT cells:       99
ABC RESULTS:              OAI3 cells:       43
ABC RESULTS:              OAI4 cells:       17
ABC RESULTS:                OR cells:       83
ABC RESULTS:              XNOR cells:        7
ABC RESULTS:               XOR cells:      136
ABC RESULTS:        internal signals:     1025
ABC RESULTS:           input signals:       78
ABC RESULTS:          output signals:       36
Removing temp directory.

4.20.7. Extracting gate netlist of module `\rv32i_branch_unit' to `<abc-temp-dir>/input.blif'..
Extracted 40 gates and 49 wires to a netlist network with 7 inputs and 1 outputs.

4.20.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

4.20.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        8
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:        internal signals:       41
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        1
Removing temp directory.

4.20.8. Extracting gate netlist of module `\rv32i_extender' to `<abc-temp-dir>/input.blif'..
Extracted 95 gates and 125 wires to a netlist network with 28 inputs and 24 outputs.

4.20.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

4.20.8.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:              AOI3 cells:        8
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:       15
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:       27
ABC RESULTS:              OAI3 cells:        8
ABC RESULTS:              OAI4 cells:       16
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       73
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       24
Removing temp directory.

4.20.9. Extracting gate netlist of module `\rv32i_imm_gen' to `<abc-temp-dir>/input.blif'..
Extracted 192 gates and 223 wires to a netlist network with 30 inputs and 31 outputs.

4.20.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o 
ABC: + map 
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif 

4.20.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:              AOI3 cells:        9
ABC RESULTS:              AOI4 cells:        5
ABC RESULTS:               MUX cells:       31
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:       28
ABC RESULTS:              OAI3 cells:       37
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:      162
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       31
Removing temp directory.

4.21. Executing OPT pass (performing simple optimizations).

4.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing away select inverter for $_MUX_ cell `$abc$7546$auto$blifparse.cc:276:parse_blif$7643' in module `rv32CU'.
Optimizing away select inverter for $_MUX_ cell `$abc$7546$auto$blifparse.cc:276:parse_blif$7657' in module `rv32CU'.
Optimizing away select inverter for $_MUX_ cell `$abc$7546$auto$blifparse.cc:276:parse_blif$7646' in module `rv32CU'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8206' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8756' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8760' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8216' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8459' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8486' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8374' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8402' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8287' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8343' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8475' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8447' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8361' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8275' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8389' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8330' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8434' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8263' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8316' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8422' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8254' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8304' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8752' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8230' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8242' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8640' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8720' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8636' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8748' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8664' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8604' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8716' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8744' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8660' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8630' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8545' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8712' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8740' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8656' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8708' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8736' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8652' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8704' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8732' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8591' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8618' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8533' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8648' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8700' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8728' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8644' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8724' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8696' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8692' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8688' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8572' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8684' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8513' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8680' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8676' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8502' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8560' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8672' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8668' in module `rv32PCUnit'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8971' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9342' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8980' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9345' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8989' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9348' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8998' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9351' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9007' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9354' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9016' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9357' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9025' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9360' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9034' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9363' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9043' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9366' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9052' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9369' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9061' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8863' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9372' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9306' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9070' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8872' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9375' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9309' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9079' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8881' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9378' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9312' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9088' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8890' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9381' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9315' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9097' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8899' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9384' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9318' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9106' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8908' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9387' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9321' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9115' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8917' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9390' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9324' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8926' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9327' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8935' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9330' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8944' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9333' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8953' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9336' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8962' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9339' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8836' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9297' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8845' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9300' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8854' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9303' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9186' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9184' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9182' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9180' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9178' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9176' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9174' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9172' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9170' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9168' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9166' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9164' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9162' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9160' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9158' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9156' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9154' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9152' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9150' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9148' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9146' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9144' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9142' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9140' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9138' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9136' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9134' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9132' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9130' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9128' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9126' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9124' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9121' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9112' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9103' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9094' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9085' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9076' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9067' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9058' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9049' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9040' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9031' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9022' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9013' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9004' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8995' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8986' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8977' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8968' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8959' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8950' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8941' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8932' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8923' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8914' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8905' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8896' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8887' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8878' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8869' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8860' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8851' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8842' in module `rv32_CPU_v2'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10638' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10639' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10622' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10623' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10012' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10606' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10607' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9934' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10590' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10591' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10081' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10574' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10575' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10047' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10558' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10559' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10008' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10542' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10543' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9930' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10526' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10527' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10079' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10509' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10510' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10045' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10492' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10493' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10004' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10476' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10477' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9926' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10111' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10460' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10461' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10078' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10080' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10443' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10444' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10044' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10046' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10426' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10427' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10001' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10005' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10408' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10409' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9923' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9927' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10388' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10389' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10075' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10189' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10368' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10370' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10041' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10163' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10349' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10351' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9996' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10136' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10327' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10329' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9917' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10109' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10306' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10308' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10074' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10076' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10279' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10284' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10286' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10040' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10042' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10263' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10265' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9993' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9997' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10241' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10243' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9914' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9918' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10214' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10219' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10221' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10072' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10188' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10190' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10197' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10199' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10038' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10162' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10164' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10172' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10174' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9989' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10135' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10137' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10145' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10147' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9909' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10108' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10110' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10118' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10120' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10071' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10073' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10077' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10089' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10086' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10090' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10037' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10039' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10043' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10056' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10058' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9986' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9990' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9998' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10020' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$10022' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9906' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9911' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9920' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9938' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9943' in module `rv32i_alu'.
Optimizing away select inverter for $_MUX_ cell `$abc$10671$auto$blifparse.cc:276:parse_blif$10684' in module `rv32i_extender'.
Optimizing away select inverter for $_MUX_ cell `$abc$10671$auto$blifparse.cc:276:parse_blif$10689' in module `rv32i_extender'.
Optimizing away select inverter for $_MUX_ cell `$abc$10671$auto$blifparse.cc:276:parse_blif$10694' in module `rv32i_extender'.
Optimizing away select inverter for $_MUX_ cell `$abc$10671$auto$blifparse.cc:276:parse_blif$10699' in module `rv32i_extender'.
Optimizing away select inverter for $_MUX_ cell `$abc$10671$auto$blifparse.cc:276:parse_blif$10704' in module `rv32i_extender'.
Optimizing away select inverter for $_MUX_ cell `$abc$10671$auto$blifparse.cc:276:parse_blif$10709' in module `rv32i_extender'.
Optimizing away select inverter for $_MUX_ cell `$abc$10671$auto$blifparse.cc:276:parse_blif$10714' in module `rv32i_extender'.
Optimizing away select inverter for $_MUX_ cell `$abc$10671$auto$blifparse.cc:276:parse_blif$10720' in module `rv32i_extender'.

4.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
  Cell `$abc$7864$auto$blifparse.cc:276:parse_blif$8047' is identical to cell `$abc$7864$auto$blifparse.cc:276:parse_blif$7889'.
    Redirecting output \Y: $abc$7864$n353_1 = $abc$7864$n195
    Removing $_NOR_ cell `$abc$7864$auto$blifparse.cc:276:parse_blif$8047' from module `\rv32Counters'.
  Cell `$abc$7864$auto$blifparse.cc:276:parse_blif$8059' is identical to cell `$abc$7864$auto$blifparse.cc:276:parse_blif$7890'.
    Redirecting output \Y: $abc$7864$n365_1 = $abc$7864$n196
    Removing $_NOR_ cell `$abc$7864$auto$blifparse.cc:276:parse_blif$8059' from module `\rv32Counters'.
  Cell `$abc$7864$auto$blifparse.cc:276:parse_blif$8070' is identical to cell `$abc$7864$auto$blifparse.cc:276:parse_blif$7881'.
    Redirecting output \Y: $abc$7864$n376_1 = $abc$7864$n187
    Removing $_NOR_ cell `$abc$7864$auto$blifparse.cc:276:parse_blif$8070' from module `\rv32Counters'.
  Cell `$abc$7864$auto$blifparse.cc:276:parse_blif$8082' is identical to cell `$abc$7864$auto$blifparse.cc:276:parse_blif$7882'.
    Redirecting output \Y: $abc$7864$n388 = $abc$7864$n188
    Removing $_NOR_ cell `$abc$7864$auto$blifparse.cc:276:parse_blif$8082' from module `\rv32Counters'.
  Cell `$abc$7864$auto$blifparse.cc:276:parse_blif$8093' is identical to cell `$abc$7864$auto$blifparse.cc:276:parse_blif$7884'.
    Redirecting output \Y: $abc$7864$n399 = $abc$7864$n190
    Removing $_NOR_ cell `$abc$7864$auto$blifparse.cc:276:parse_blif$8093' from module `\rv32Counters'.
  Cell `$abc$7864$auto$blifparse.cc:276:parse_blif$8106' is identical to cell `$abc$7864$auto$blifparse.cc:276:parse_blif$7885'.
    Redirecting output \Y: $abc$7864$n412 = $abc$7864$n191
    Removing $_NOR_ cell `$abc$7864$auto$blifparse.cc:276:parse_blif$8106' from module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 6 cells.

4.21.3. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

4.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
  removing unused non-port wire \cu_alu_inst.
  removing unused non-port wire \cu_alu_inst_1.
  removing unused non-port wire \cu_alu_inst_2.
  removing unused non-port wire \cu_ctrl_inst_1.
  removed 4 unused temporary wires.
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
  removing unused `$_NOT_' cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8195'.
  removing unused `$_NOT_' cell `$abc$8194$auto$blifparse.cc:276:parse_blif$8631'.
  removing unused non-port wire \nPC.
  removing unused non-port wire \pc_adder.
  removed 2 unused temporary wires.
Finding unused cells or wires in module \rv32_CPU_v2..
  removing unused `$_NOT_' cell `$abc$8761$auto$blifparse.cc:276:parse_blif$9289'.
  removing unused `$_NOT_' cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8834'.
  removing unused `$_NOT_' cell `$abc$8761$auto$blifparse.cc:276:parse_blif$8826'.
  removing unused non-port wire \RESMux.
  removing unused non-port wire \RS1.
  removing unused non-port wire \RS2.
  removing unused non-port wire \cntr.
  removed 4 unused temporary wires.
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
  removing unused `$_NOT_' cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9902'.
  removing unused `$_NOT_' cell `$abc$9516$auto$blifparse.cc:276:parse_blif$9886'.
  removing unused non-port wire \I.
  removing unused non-port wire \IorR.
  removing unused non-port wire \R.
  removing unused non-port wire \and_or_xor.
  removing unused non-port wire \instr_branch.
  removing unused non-port wire \instr_logic.
  removing unused non-port wire \instr_shift.
  removing unused non-port wire \instr_slt.
  removing unused non-port wire \instr_sltu.
  removing unused non-port wire \instr_sub.
  removing unused non-port wire \op_b.
  removing unused non-port wire \sha.
  removing unused non-port wire \shift.
  removing unused non-port wire \slt.
  removing unused non-port wire \sub.
  removed 15 unused temporary wires.
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
  removing unused `$_NOT_' cell `$abc$10671$auto$blifparse.cc:276:parse_blif$10672'.
Finding unused cells or wires in module \rv32i_imm_gen..

4.21.5. Finished fast OPT passes.

4.22. Executing HIERARCHY pass (managing design hierarchy).

4.22.1. Analyzing design hierarchy..
Top module:  \rv32_CPU_v2
Used module:     \rv32i_alu
Used module:     \rv32Counters
Used module:     \rv32CU
Used module:         \rv32i_branch_unit
Used module:         \rv32dec
Used module:     \rv32i_extender
Used module:     \rv32i_imm_gen
Used module:     \rv32PCUnit

4.22.2. Analyzing design hierarchy..
Top module:  \rv32_CPU_v2
Used module:     \rv32i_alu
Used module:     \rv32Counters
Used module:     \rv32CU
Used module:         \rv32i_branch_unit
Used module:         \rv32dec
Used module:     \rv32i_extender
Used module:     \rv32i_imm_gen
Used module:     \rv32PCUnit
Removed 0 unused modules.

4.23. Printing statistics.

=== rv32CU ===

   Number of wires:                327
   Number of wire bits:            500
   Number of public wires:          92
   Number of public wire bits:     203
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                393
     $_AND_                         46
     $_AOI3_                         9
     $_AOI4_                         1
     $_DFF_PP0_                     60
     $_DFF_PP1_                      6
     $_DFF_P_                        6
     $_MUX_                         71
     $_NAND_                        29
     $_NOR_                         27
     $_NOT_                         44
     $_OAI3_                         7
     $_OAI4_                        29
     $_OR_                          44
     $_XNOR_                        10
     rv32dec                         3
     rv32i_branch_unit               1

=== rv32Counters ===

   Number of wires:                271
   Number of wire bits:            430
   Number of public wires:          13
   Number of public wire bits:     108
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                390
     $_AND_                         75
     $_AOI3_                        12
     $_DFF_PP0_                     67
     $_MUX_                         98
     $_NAND_                         4
     $_NOR_                         28
     $_NOT_                         20
     $_OAI3_                         8
     $_OR_                          15
     $_XNOR_                         6
     $_XOR_                         57

=== rv32PCUnit ===

   Number of wires:                520
   Number of wire bits:            745
   Number of public wires:          18
   Number of public wire bits:     181
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                628
     $_AND_                         67
     $_AOI3_                        24
     $_DFF_PP0_                     64
     $_MUX_                        179
     $_NAND_                        69
     $_NOR_                          9
     $_NOT_                         63
     $_OAI3_                        68
     $_OR_                          15
     $_XNOR_                        23
     $_XOR_                         47

=== rv32_CPU_v2 ===

   Number of wires:                493
   Number of wire bits:           1589
   Number of public wires:          88
   Number of public wire bits:     967
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                952
     $_AND_                         35
     $_AOI3_                        33
     $_DFF_PP0_                     93
     $_DFF_PP1_                      3
     $_DFF_P_                      128
     $_MUX_                        512
     $_NAND_                        64
     $_NOR_                          6
     $_NOT_                          5
     $_OAI4_                        64
     $_OR_                           3
     rv32CU                          1
     rv32Counters                    1
     rv32PCUnit                      1
     rv32i_alu                       1
     rv32i_extender                  1
     rv32i_imm_gen                   1

=== rv32dec ===

   Number of wires:                 29
   Number of wire bits:             60
   Number of public wires:          12
   Number of public wire bits:      43
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $_AND_                         22
     $_NOR_                          3
     $_NOT_                          3

=== rv32i_alu ===

   Number of wires:               1105
   Number of wire bits:           1245
   Number of public wires:          12
   Number of public wire bits:     152
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1129
     $_AND_                        140
     $_AOI3_                        36
     $_AOI4_                         1
     $_MUX_                        476
     $_NAND_                        32
     $_NOR_                         61
     $_NOT_                         97
     $_OAI3_                        43
     $_OAI4_                        17
     $_OR_                          83
     $_XNOR_                         7
     $_XOR_                        136

=== rv32i_branch_unit ===

   Number of wires:                 27
   Number of wire bits:             29
   Number of public wires:           6
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 22
     $_AND_                          5
     $_AOI4_                         1
     $_MUX_                          3
     $_NAND_                         2
     $_NOT_                          2
     $_OR_                           8
     $_XNOR_                         1

=== rv32i_extender ===

   Number of wires:                 60
   Number of wire bits:            123
   Number of public wires:           4
   Number of public wire bits:      67
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 80
     $_AND_                          1
     $_AOI3_                         8
     $_AOI4_                         1
     $_MUX_                         15
     $_NAND_                         1
     $_NOR_                          2
     $_NOT_                         26
     $_OAI3_                         8
     $_OAI4_                        16
     $_OR_                           2

=== rv32i_imm_gen ===

   Number of wires:                102
   Number of wire bits:            164
   Number of public wires:           2
   Number of public wire bits:      64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                131
     $_AND_                         12
     $_AOI3_                         9
     $_AOI4_                         5
     $_MUX_                         31
     $_NAND_                         3
     $_NOR_                          5
     $_NOT_                         28
     $_OAI3_                        37
     $_OR_                           1

=== design hierarchy ===

   rv32_CPU_v2                       1
     rv32CU                          1
       rv32dec                       3
       rv32i_branch_unit             1
     rv32Counters                    1
     rv32PCUnit                      1
     rv32i_alu                       1
     rv32i_extender                  1
     rv32i_imm_gen                   1

   Number of wires:               2992
   Number of wire bits:           5005
   Number of public wires:         271
   Number of public wire bits:    1879
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3799
     $_AND_                        447
     $_AOI3_                       131
     $_AOI4_                         9
     $_DFF_PP0_                    284
     $_DFF_PP1_                      9
     $_DFF_P_                      134
     $_MUX_                       1385
     $_NAND_                       204
     $_NOR_                        147
     $_NOT_                        294
     $_OAI3_                       171
     $_OAI4_                       126
     $_OR_                         171
     $_XNOR_                        47
     $_XOR_                        240

4.24. Executing CHECK pass (checking for obvious problems).
checking module rv32CU..
checking module rv32Counters..
checking module rv32PCUnit..
checking module rv32_CPU_v2..
checking module rv32dec..
checking module rv32i_alu..
checking module rv32i_branch_unit..
checking module rv32i_extender..
checking module rv32i_imm_gen..
found and reported 0 problems.

5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

6. Executing SHARE pass (SAT-based resource sharing).

7. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32CU.
  Optimizing cells in module \rv32Counters.
  Optimizing cells in module \rv32PCUnit.
  Optimizing cells in module \rv32_CPU_v2.
  Optimizing cells in module \rv32dec.
  Optimizing cells in module \rv32i_alu.
  Optimizing cells in module \rv32i_branch_unit.
  Optimizing cells in module \rv32i_extender.
  Optimizing cells in module \rv32i_imm_gen.
Performed a total of 0 changes.

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

9. Executing SHARE pass (SAT-based resource sharing).

10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32CU.
  Optimizing cells in module \rv32Counters.
  Optimizing cells in module \rv32PCUnit.
  Optimizing cells in module \rv32_CPU_v2.
  Optimizing cells in module \rv32dec.
  Optimizing cells in module \rv32i_alu.
  Optimizing cells in module \rv32i_branch_unit.
  Optimizing cells in module \rv32i_extender.
  Optimizing cells in module \rv32i_imm_gen.
Performed a total of 0 changes.

11. Executing SHARE pass (SAT-based resource sharing).

12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32CU.
  Optimizing cells in module \rv32Counters.
  Optimizing cells in module \rv32PCUnit.
  Optimizing cells in module \rv32_CPU_v2.
  Optimizing cells in module \rv32dec.
  Optimizing cells in module \rv32i_alu.
  Optimizing cells in module \rv32i_branch_unit.
  Optimizing cells in module \rv32i_extender.
  Optimizing cells in module \rv32i_imm_gen.
Performed a total of 0 changes.

13. Executing SHARE pass (SAT-based resource sharing).

14. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32CU.
  Optimizing cells in module \rv32Counters.
  Optimizing cells in module \rv32PCUnit.
  Optimizing cells in module \rv32_CPU_v2.
  Optimizing cells in module \rv32dec.
  Optimizing cells in module \rv32i_alu.
  Optimizing cells in module \rv32i_branch_unit.
  Optimizing cells in module \rv32i_extender.
  Optimizing cells in module \rv32i_imm_gen.
Performed a total of 0 changes.

15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
  removing unused non-port wire \cu_auipc_inst_1.
  removing unused non-port wire \cu_custom_1.
  removing unused non-port wire \cu_j_inst_1.
  removing unused non-port wire \cu_jalr_inst_1.
  removing unused non-port wire \cu_load_inst_1.
  removing unused non-port wire \cu_lui_inst_1.
  removing unused non-port wire \cu_system_inst_1.
  removing unused non-port wire \func3_1.
  removed 8 unused temporary wires.
Finding unused cells or wires in module \rv32Counters..
  removing unused non-port wire \UIE.
  removed 1 unused temporary wires.
Finding unused cells or wires in module \rv32PCUnit..
  removing unused non-port wire \int_vec.
  removed 1 unused temporary wires.
Finding unused cells or wires in module \rv32_CPU_v2..
  removing unused non-port wire \R1.
  removing unused non-port wire \R2.
  removing unused non-port wire \RES.
  removing unused non-port wire \cu_mwr.
  removing unused non-port wire \ext_done.
  removing unused non-port wire \ext_out.
  removing unused non-port wire \ext_start.
  removing unused non-port wire \func3_1.
  removing unused non-port wire \rf_rd.
  removing unused non-port wire \rf_rd_1.
  removing unused non-port wire \rf_rd_2.
  removing unused non-port wire \rf_rs1.
  removing unused non-port wire \rf_rs2.
  removing unused non-port wire \rf_wr.
  removed 14 unused temporary wires.
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
  removing unused non-port wire \add_sub.
  removed 1 unused temporary wires.
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

16. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFQX1 (noninv, pins=3, area=236.60) is a direct match for cell type $_DFF_N_.
  cell DFRQX1 (noninv, pins=3, area=236.60) is a direct match for cell type $_DFF_P_.
  cell DFFRQX1 (noninv, pins=4, area=291.10) is a direct match for cell type $_DFF_NN0_.
  cell DFFSQX1 (noninv, pins=4, area=272.80) is a direct match for cell type $_DFF_NN1_.
  cell DFRRQX1 (noninv, pins=4, area=291.10) is a direct match for cell type $_DFF_PN0_.
  cell DFRSQX1 (noninv, pins=4, area=272.80) is a direct match for cell type $_DFF_PN1_.
  cell DFFRSQX1 (noninv, pins=5, area=309.30) is a direct match for cell type $_DFFSR_NNN_.
  cell DFRRSQX1 (noninv, pins=5, area=309.30) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFF_NN0_.
  create mapping for $_DFF_NP1_ from mapping for $_DFF_NN1_.
  create mapping for $_DFF_PP0_ from mapping for $_DFF_PN0_.
  create mapping for $_DFF_PP1_ from mapping for $_DFF_PN1_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  final dff cell mappings:
    DFFQX1 _DFF_N_ (.CN( C), .D( D), .Q( Q));
    DFRQX1 _DFF_P_ (.C( C), .D( D), .Q( Q));
    DFFRQX1 _DFF_NN0_ (.CN( C), .D( D), .Q( Q), .RN( R));
    DFFSQX1 _DFF_NN1_ (.CN( C), .D( D), .Q( Q), .SN( R));
    DFFRQX1 _DFF_NP0_ (.CN( C), .D( D), .Q( Q), .RN(~R));
    DFFSQX1 _DFF_NP1_ (.CN( C), .D( D), .Q( Q), .SN(~R));
    DFRRQX1 _DFF_PN0_ (.C( C), .D( D), .Q( Q), .RN( R));
    DFRSQX1 _DFF_PN1_ (.C( C), .D( D), .Q( Q), .SN( R));
    DFRRQX1 _DFF_PP0_ (.C( C), .D( D), .Q( Q), .RN(~R));
    DFRSQX1 _DFF_PP1_ (.C( C), .D( D), .Q( Q), .SN(~R));
    DFFRSQX1 _DFFSR_NNN_ (.CN( C), .D( D), .Q( Q), .RN( R), .SN( S));
    DFFRSQX1 _DFFSR_NNP_ (.CN( C), .D( D), .Q( Q), .RN(~R), .SN( S));
    DFFRSQX1 _DFFSR_NPN_ (.CN( C), .D( D), .Q( Q), .RN( R), .SN(~S));
    DFFRSQX1 _DFFSR_NPP_ (.CN( C), .D( D), .Q( Q), .RN(~R), .SN(~S));
    DFRRSQX1 _DFFSR_PNN_ (.C( C), .D( D), .Q( Q), .RN( R), .SN( S));
    DFRRSQX1 _DFFSR_PNP_ (.C( C), .D( D), .Q( Q), .RN(~R), .SN( S));
    DFRRSQX1 _DFFSR_PPN_ (.C( C), .D( D), .Q( Q), .RN( R), .SN(~S));
    DFRRSQX1 _DFFSR_PPP_ (.C( C), .D( D), .Q( Q), .RN(~R), .SN(~S));
Mapping DFF cells in module `\rv32CU':
  mapped 60 $_DFF_PP0_ cells to \DFRRQX1 cells.
  mapped 6 $_DFF_PP1_ cells to \DFRSQX1 cells.
  mapped 6 $_DFF_P_ cells to \DFRQX1 cells.
Mapping DFF cells in module `\rv32Counters':
  mapped 67 $_DFF_PP0_ cells to \DFRRQX1 cells.
Mapping DFF cells in module `\rv32PCUnit':
  mapped 64 $_DFF_PP0_ cells to \DFRRQX1 cells.
Mapping DFF cells in module `\rv32_CPU_v2':
  mapped 93 $_DFF_PP0_ cells to \DFRRQX1 cells.
  mapped 3 $_DFF_PP1_ cells to \DFRSQX1 cells.
  mapped 128 $_DFF_P_ cells to \DFRQX1 cells.
Mapping DFF cells in module `\rv32dec':
Mapping DFF cells in module `\rv32i_alu':
Mapping DFF cells in module `\rv32i_branch_unit':
Mapping DFF cells in module `\rv32i_extender':
Mapping DFF cells in module `\rv32i_imm_gen':

17. Executing OPT pass (performing simple optimizations).

17.1. Executing OPT_EXPR pass (perform const folding).

17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10885' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10886 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10885' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10887' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10888 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10887' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10889' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10890 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10889' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10891' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10892 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10891' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10893' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10894 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10893' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10895' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10896 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10895' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10897' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10898 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10897' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10899' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10900 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10899' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10901' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10902 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10901' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10903' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10904 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10903' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10905' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10906 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10905' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10907' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10908 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10907' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10909' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10910 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10909' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10911' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10912 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10911' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10913' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10914 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10913' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10915' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10916 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10915' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10917' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10918 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10917' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10919' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10920 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10919' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10921' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10922 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10921' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10923' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10924 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10923' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10925' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10926 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10925' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10927' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10928 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10927' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10929' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10930 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10929' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10931' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10932 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10931' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10933' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10934 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10933' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10935' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10936 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10935' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10937' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10938 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10937' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10939' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10940 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10939' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10941' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10942 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10941' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10943' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10944 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10943' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10945' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10946 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10945' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10947' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10948 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10947' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10949' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10950 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10949' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10951' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10952 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10951' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10953' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10954 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10953' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10955' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10956 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10955' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10957' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10958 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10957' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10959' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10960 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10959' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10961' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10962 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10961' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10963' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10964 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10963' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10965' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10966 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10965' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10967' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10968 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10967' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10969' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10970 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10969' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10971' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10972 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10971' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10973' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10974 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10973' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10975' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10976 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10975' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10977' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10978 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10977' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10979' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10980 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10979' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10981' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10982 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10981' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10983' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10984 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10983' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10985' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10986 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10985' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10987' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10988 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10987' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10989' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10990 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10989' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10991' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10992 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10991' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10993' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10994 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10993' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10995' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10996 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10995' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10997' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$10998 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10997' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$10999' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11000 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$10999' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11001' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11002 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11001' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11003' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11004 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11003' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11005' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11006 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11005' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11007' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11008 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11007' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11009' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11010 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11009' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11011' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11012 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11011' from module `\rv32CU'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11013' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11015'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11014 = $auto$rtlil.cc:1717:NotGate$11016
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11013' from module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11017' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11018 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11017' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11019' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11020 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11019' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11021' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11022 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11021' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11023' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11024 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11023' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11025' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11026 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11025' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11027' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11028 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11027' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11029' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11030 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11029' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11031' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11032 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11031' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11033' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11034 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11033' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11035' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11036 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11035' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11037' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11038 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11037' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11039' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11040 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11039' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11041' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11042 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11041' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11043' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11044 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11043' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11045' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11046 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11045' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11047' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11048 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11047' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11049' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11050 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11049' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11051' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11052 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11051' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11053' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11054 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11053' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11055' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11056 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11055' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11057' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11058 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11057' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11059' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11060 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11059' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11061' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11062 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11061' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11063' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11064 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11063' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11065' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11066 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11065' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11067' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11068 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11067' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11069' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11070 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11069' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11071' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11072 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11071' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11073' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11074 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11073' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11075' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11076 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11075' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11077' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11078 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11077' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11079' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11080 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11079' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11081' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11082 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11081' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11083' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11084 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11083' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11085' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11086 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11085' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11087' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11088 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11087' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11089' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11090 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11089' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11091' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11092 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11091' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11093' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11094 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11093' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11095' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11096 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11095' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11097' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11098 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11097' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11099' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11100 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11099' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11101' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11102 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11101' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11103' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11104 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11103' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11105' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11106 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11105' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11107' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11108 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11107' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11109' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11110 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11109' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11111' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11112 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11111' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11113' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11114 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11113' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11115' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11116 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11115' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11117' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11118 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11117' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11119' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11120 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11119' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11121' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11122 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11121' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11123' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11124 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11123' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11125' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11126 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11125' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11127' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11128 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11127' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11129' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11130 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11129' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11131' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11132 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11131' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11133' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11134 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11133' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11135' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11136 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11135' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11137' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11138 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11137' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11139' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11140 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11139' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11141' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11142 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11141' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11143' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11144 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11143' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11145' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11146 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11145' from module `\rv32Counters'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11147' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11149'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11148 = $auto$rtlil.cc:1717:NotGate$11150
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11147' from module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11151' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11152 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11151' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11153' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11154 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11153' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11155' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11156 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11155' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11157' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11158 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11157' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11159' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11160 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11159' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11161' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11162 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11161' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11163' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11164 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11163' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11165' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11166 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11165' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11167' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11168 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11167' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11169' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11170 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11169' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11171' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11172 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11171' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11173' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11174 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11173' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11175' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11176 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11175' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11177' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11178 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11177' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11179' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11180 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11179' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11181' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11182 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11181' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11183' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11184 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11183' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11185' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11186 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11185' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11187' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11188 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11187' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11189' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11190 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11189' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11191' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11192 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11191' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11193' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11194 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11193' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11195' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11196 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11195' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11197' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11198 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11197' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11199' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11200 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11199' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11201' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11202 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11201' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11203' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11204 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11203' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11205' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11206 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11205' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11207' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11208 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11207' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11209' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11210 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11209' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11211' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11212 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11211' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11213' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11214 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11213' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11215' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11216 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11215' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11217' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11218 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11217' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11219' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11220 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11219' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11221' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11222 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11221' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11223' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11224 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11223' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11225' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11226 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11225' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11227' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11228 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11227' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11229' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11230 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11229' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11231' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11232 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11231' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11233' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11234 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11233' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11235' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11236 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11235' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11237' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11238 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11237' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11239' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11240 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11239' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11241' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11242 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11241' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11243' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11244 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11243' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11245' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11246 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11245' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11247' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11248 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11247' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11249' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11250 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11249' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11251' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11252 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11251' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11253' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11254 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11253' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11255' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11256 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11255' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11257' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11258 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11257' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11259' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11260 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11259' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11261' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11262 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11261' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11263' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11264 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11263' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11265' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11266 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11265' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11267' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11268 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11267' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11269' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11270 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11269' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11271' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11272 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11271' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11273' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11274 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11273' from module `\rv32PCUnit'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11275' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11277'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11276 = $auto$rtlil.cc:1717:NotGate$11278
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11275' from module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11279' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11280 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11279' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11281' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11282 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11281' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11283' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11284 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11283' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11285' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11286 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11285' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11287' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11288 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11287' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11289' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11290 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11289' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11291' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11292 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11291' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11293' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11294 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11293' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11295' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11296 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11295' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11297' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11298 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11297' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11299' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11300 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11299' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11301' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11302 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11301' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11303' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11304 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11303' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11305' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11306 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11305' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11307' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11308 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11307' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11309' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11310 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11309' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11311' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11312 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11311' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11313' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11314 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11313' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11315' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11316 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11315' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11317' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11318 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11317' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11319' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11320 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11319' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11321' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11322 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11321' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11323' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11324 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11323' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11325' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11326 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11325' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11327' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11328 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11327' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11329' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11330 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11329' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11331' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11332 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11331' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11333' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11334 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11333' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11335' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11336 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11335' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11337' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11338 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11337' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11339' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11340 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11339' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11341' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11342 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11341' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11343' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11344 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11343' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11345' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11346 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11345' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11347' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11348 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11347' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11349' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11350 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11349' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11351' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11352 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11351' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11353' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11354 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11353' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11355' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11356 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11355' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11357' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11358 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11357' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11359' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11360 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11359' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11361' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11362 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11361' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11363' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11364 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11363' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11365' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11366 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11365' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11367' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11368 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11367' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11369' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11370 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11369' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11371' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11372 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11371' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11373' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11374 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11373' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11375' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11376 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11375' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11377' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11378 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11377' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11379' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11380 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11379' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11381' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11382 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11381' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11383' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11384 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11383' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11385' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11386 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11385' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11387' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11388 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11387' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11389' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11390 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11389' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11391' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11392 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11391' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11393' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11394 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11393' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11395' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11396 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11395' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11397' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11398 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11397' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11399' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11400 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11399' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11401' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11402 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11401' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11403' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11404 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11403' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11405' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11406 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11405' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11407' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11408 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11407' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11409' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11410 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11409' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11411' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11412 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11411' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11413' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11414 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11413' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11415' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11416 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11415' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11417' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11418 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11417' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11419' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11420 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11419' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11421' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11422 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11421' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11423' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11424 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11423' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11425' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11426 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11425' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11427' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11428 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11427' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11429' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11430 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11429' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11431' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11432 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11431' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11433' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11434 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11433' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11435' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11436 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11435' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11437' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11438 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11437' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11439' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11440 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11439' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11441' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11442 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11441' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11443' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11444 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11443' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11445' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11446 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11445' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11447' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11448 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11447' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11449' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11450 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11449' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11451' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11452 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11451' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11453' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11454 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11453' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11455' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11456 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11455' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11457' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11458 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11457' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11459' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11460 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11459' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11461' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11462 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11461' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11463' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11464 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11463' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11465' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11466 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11465' from module `\rv32_CPU_v2'.
  Cell `$auto$dfflibmap.cc:511:dfflibmap$11467' is identical to cell `$auto$dfflibmap.cc:511:dfflibmap$11469'.
    Redirecting output \Y: $auto$rtlil.cc:1717:NotGate$11468 = $auto$rtlil.cc:1717:NotGate$11470
    Removing $_NOT_ cell `$auto$dfflibmap.cc:511:dfflibmap$11467' from module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 289 cells.

17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rv32CU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32Counters..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32PCUnit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32_CPU_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32dec..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_alu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_branch_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_extender..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_imm_gen..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32CU.
  Optimizing cells in module \rv32Counters.
  Optimizing cells in module \rv32PCUnit.
  Optimizing cells in module \rv32_CPU_v2.
  Optimizing cells in module \rv32dec.
  Optimizing cells in module \rv32i_alu.
  Optimizing cells in module \rv32i_branch_unit.
  Optimizing cells in module \rv32i_extender.
  Optimizing cells in module \rv32i_imm_gen.
Performed a total of 0 changes.

17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 0 cells.

17.6. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

17.8. Executing OPT_EXPR pass (perform const folding).

17.9. Finished OPT passes. (There is nothing left to do.)

18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

19. Executing OPT pass (performing simple optimizations).

19.1. Executing OPT_EXPR pass (perform const folding).

19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 0 cells.

19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rv32CU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32Counters..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32PCUnit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32_CPU_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32dec..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_alu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_branch_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_extender..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rv32i_imm_gen..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32CU.
  Optimizing cells in module \rv32Counters.
  Optimizing cells in module \rv32PCUnit.
  Optimizing cells in module \rv32_CPU_v2.
  Optimizing cells in module \rv32dec.
  Optimizing cells in module \rv32i_alu.
  Optimizing cells in module \rv32i_branch_unit.
  Optimizing cells in module \rv32i_extender.
  Optimizing cells in module \rv32i_imm_gen.
Performed a total of 0 changes.

19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32CU'.
Finding identical cells in module `\rv32Counters'.
Finding identical cells in module `\rv32PCUnit'.
Finding identical cells in module `\rv32_CPU_v2'.
Finding identical cells in module `\rv32dec'.
Finding identical cells in module `\rv32i_alu'.
Finding identical cells in module `\rv32i_branch_unit'.
Finding identical cells in module `\rv32i_extender'.
Finding identical cells in module `\rv32i_imm_gen'.
Removed a total of 0 cells.

19.6. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

19.8. Executing OPT_EXPR pass (perform const folding).

19.9. Finished OPT passes. (There is nothing left to do.)

20. Executing SHARE pass (SAT-based resource sharing).

21. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32CU.
  Optimizing cells in module \rv32Counters.
  Optimizing cells in module \rv32PCUnit.
  Optimizing cells in module \rv32_CPU_v2.
  Optimizing cells in module \rv32dec.
  Optimizing cells in module \rv32i_alu.
  Optimizing cells in module \rv32i_branch_unit.
  Optimizing cells in module \rv32i_extender.
  Optimizing cells in module \rv32i_imm_gen.
Performed a total of 0 changes.

22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32CU..
Finding unused cells or wires in module \rv32Counters..
Finding unused cells or wires in module \rv32PCUnit..
Finding unused cells or wires in module \rv32_CPU_v2..
Finding unused cells or wires in module \rv32dec..
Finding unused cells or wires in module \rv32i_alu..
Finding unused cells or wires in module \rv32i_branch_unit..
Finding unused cells or wires in module \rv32i_extender..
Finding unused cells or wires in module \rv32i_imm_gen..

23. Executing ABC pass (technology mapping using ABC).

23.1. Extracting gate netlist of module `\rv32CU' to `<abc-temp-dir>/input.blif'..
Extracted 318 gates and 461 wires to a netlist network with 143 inputs and 92 outputs.

23.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib 
ABC: Parsing finished successfully.  Parsing time =     0.21 sec
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX8".
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX4".
ABC: Scl_LibertyReadGenlib() skipped cell "SIGNALHOLD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBE" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBEBUX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN25" without logic function.
ABC: Library "D_CELLS_MOS_typ_3_30V_25C" from "/ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib" has 365 cells (260 skipped: 144 seq; 56 tri-state; 60 no func).  Time =     0.33 sec
ABC: Memory =   20.80 MB. Time =     0.33 sec
ABC: Warning: Detected 8 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -D 6000 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 -D 6000 
ABC: + write_blif <abc-temp-dir>/output.blif 

23.1.2. Re-integrating ABC results.
ABC RESULTS:           AN211X1 cells:        1
ABC RESULTS:            AN21X1 cells:        3
ABC RESULTS:            AN22X1 cells:        3
ABC RESULTS:            AN31X1 cells:        5
ABC RESULTS:            AND2X2 cells:        3
ABC RESULTS:            AND3X4 cells:        3
ABC RESULTS:            AND4X1 cells:        4
ABC RESULTS:             EN2X1 cells:        5
ABC RESULTS:              INX1 cells:       17
ABC RESULTS:            MU2IX1 cells:       25
ABC RESULTS:             MU2X1 cells:       34
ABC RESULTS:           NA2I1X1 cells:        5
ABC RESULTS:             NA2X1 cells:       35
ABC RESULTS:           NA3I1X1 cells:       10
ABC RESULTS:             NA3X1 cells:        4
ABC RESULTS:           NO2I1X1 cells:        1
ABC RESULTS:             NO2X1 cells:       41
ABC RESULTS:           NO3I1X1 cells:        1
ABC RESULTS:             NO3X1 cells:        8
ABC RESULTS:           ON211X1 cells:       11
ABC RESULTS:            ON22X1 cells:        9
ABC RESULTS:            ON31X1 cells:       22
ABC RESULTS:             OR2X2 cells:        3
ABC RESULTS:        internal signals:      226
ABC RESULTS:           input signals:      143
ABC RESULTS:          output signals:       92
Removing temp directory.

23.2. Extracting gate netlist of module `\rv32Counters' to `<abc-temp-dir>/input.blif'..
Extracted 324 gates and 427 wires to a netlist network with 103 inputs and 69 outputs.

23.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib 
ABC: Parsing finished successfully.  Parsing time =     0.20 sec
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX8".
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX4".
ABC: Scl_LibertyReadGenlib() skipped cell "SIGNALHOLD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBE" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBEBUX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN25" without logic function.
ABC: Library "D_CELLS_MOS_typ_3_30V_25C" from "/ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib" has 365 cells (260 skipped: 144 seq; 56 tri-state; 60 no func).  Time =     0.31 sec
ABC: Memory =   20.80 MB. Time =     0.31 sec
ABC: Warning: Detected 8 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -D 6000 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 -D 6000 
ABC: + write_blif <abc-temp-dir>/output.blif 

23.2.2. Re-integrating ABC results.
ABC RESULTS:            AN22X1 cells:        1
ABC RESULTS:            AND2X2 cells:       15
ABC RESULTS:            AND3X4 cells:        1
ABC RESULTS:            AND4X1 cells:        1
ABC RESULTS:            AND5X1 cells:        1
ABC RESULTS:            AO22X2 cells:       17
ABC RESULTS:             EN2X1 cells:       29
ABC RESULTS:             EO2X1 cells:        1
ABC RESULTS:              INX1 cells:       45
ABC RESULTS:            MU2IX1 cells:        5
ABC RESULTS:             MU2X1 cells:        5
ABC RESULTS:           NA2I1X1 cells:        9
ABC RESULTS:             NA2X1 cells:       52
ABC RESULTS:           NA3I1X1 cells:        2
ABC RESULTS:             NA3X1 cells:        1
ABC RESULTS:             NA5X4 cells:        1
ABC RESULTS:           NO2I1X1 cells:        5
ABC RESULTS:             NO2X1 cells:       55
ABC RESULTS:             NO3X1 cells:        2
ABC RESULTS:            ON22X1 cells:       25
ABC RESULTS:            ON31X1 cells:       15
ABC RESULTS:        internal signals:      255
ABC RESULTS:           input signals:      103
ABC RESULTS:          output signals:       69
Removing temp directory.

23.3. Extracting gate netlist of module `\rv32PCUnit' to `<abc-temp-dir>/input.blif'..
Extracted 565 gates and 738 wires to a netlist network with 173 inputs and 65 outputs.

23.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib 
ABC: Parsing finished successfully.  Parsing time =     0.20 sec
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX8".
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX4".
ABC: Scl_LibertyReadGenlib() skipped cell "SIGNALHOLD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBE" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBEBUX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN25" without logic function.
ABC: Library "D_CELLS_MOS_typ_3_30V_25C" from "/ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib" has 365 cells (260 skipped: 144 seq; 56 tri-state; 60 no func).  Time =     0.32 sec
ABC: Memory =   20.80 MB. Time =     0.32 sec
ABC: Warning: Detected 8 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -D 6000 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 -D 6000 
ABC: + write_blif <abc-temp-dir>/output.blif 

23.3.2. Re-integrating ABC results.
ABC RESULTS:           AN211X1 cells:        3
ABC RESULTS:            AN21X1 cells:        9
ABC RESULTS:            AN31X1 cells:       31
ABC RESULTS:            AND2X2 cells:       14
ABC RESULTS:            AND3X4 cells:        1
ABC RESULTS:            AO22X2 cells:        5
ABC RESULTS:            AO31X1 cells:        1
ABC RESULTS:             EN2X1 cells:       33
ABC RESULTS:             EO2X1 cells:        4
ABC RESULTS:              INX1 cells:       34
ABC RESULTS:            MU2IX1 cells:       37
ABC RESULTS:             MU2X1 cells:       76
ABC RESULTS:           NA2I1X1 cells:       28
ABC RESULTS:             NA2X1 cells:      141
ABC RESULTS:           NA3I1X1 cells:        7
ABC RESULTS:             NO2X1 cells:       84
ABC RESULTS:           OA211X4 cells:        1
ABC RESULTS:           OA221X1 cells:        1
ABC RESULTS:           ON211X1 cells:        1
ABC RESULTS:            ON21X1 cells:        4
ABC RESULTS:           ON311X1 cells:        2
ABC RESULTS:            ON31X1 cells:       15
ABC RESULTS:             OR2X2 cells:        6
ABC RESULTS:        internal signals:      500
ABC RESULTS:           input signals:      173
ABC RESULTS:          output signals:       65
Removing temp directory.

23.4. Extracting gate netlist of module `\rv32_CPU_v2' to `<abc-temp-dir>/input.blif'..
Extracted 723 gates and 1286 wires to a netlist network with 563 inputs and 325 outputs.

23.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib 
ABC: Parsing finished successfully.  Parsing time =     0.19 sec
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX8".
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX4".
ABC: Scl_LibertyReadGenlib() skipped cell "SIGNALHOLD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBE" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBEBUX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN25" without logic function.
ABC: Library "D_CELLS_MOS_typ_3_30V_25C" from "/ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib" has 365 cells (260 skipped: 144 seq; 56 tri-state; 60 no func).  Time =     0.31 sec
ABC: Memory =   20.80 MB. Time =     0.31 sec
ABC: Warning: Detected 8 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -D 6000 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 -D 6000 
ABC: + write_blif <abc-temp-dir>/output.blif 

23.4.2. Re-integrating ABC results.
ABC RESULTS:           AN211X1 cells:       31
ABC RESULTS:            AN21X1 cells:       40
ABC RESULTS:            AN22X1 cells:       36
ABC RESULTS:            AN31X1 cells:       32
ABC RESULTS:            AND2X2 cells:       37
ABC RESULTS:            AND5X1 cells:        1
ABC RESULTS:              INX1 cells:      145
ABC RESULTS:            MU2IX1 cells:       90
ABC RESULTS:             MU2X1 cells:      140
ABC RESULTS:           NA2I1X1 cells:       33
ABC RESULTS:             NA2X1 cells:      178
ABC RESULTS:           NA3I1X1 cells:        1
ABC RESULTS:             NO2X1 cells:       85
ABC RESULTS:           ON211X1 cells:       32
ABC RESULTS:            ON21X1 cells:       16
ABC RESULTS:            ON22X1 cells:       21
ABC RESULTS:            ON31X1 cells:       59
ABC RESULTS:        internal signals:      398
ABC RESULTS:           input signals:      563
ABC RESULTS:          output signals:      325
Removing temp directory.

23.5. Extracting gate netlist of module `\rv32dec' to `<abc-temp-dir>/input.blif'..
Extracted 28 gates and 33 wires to a netlist network with 5 inputs and 11 outputs.

23.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib 
ABC: Parsing finished successfully.  Parsing time =     0.19 sec
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX8".
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX4".
ABC: Scl_LibertyReadGenlib() skipped cell "SIGNALHOLD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBE" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBEBUX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN25" without logic function.
ABC: Library "D_CELLS_MOS_typ_3_30V_25C" from "/ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib" has 365 cells (260 skipped: 144 seq; 56 tri-state; 60 no func).  Time =     0.30 sec
ABC: Memory =   20.80 MB. Time =     0.30 sec
ABC: Warning: Detected 8 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -D 6000 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 -D 6000 
ABC: + write_blif <abc-temp-dir>/output.blif 

23.5.2. Re-integrating ABC results.
ABC RESULTS:            AND4X1 cells:        1
ABC RESULTS:              INX1 cells:        3
ABC RESULTS:           NA2I1X1 cells:        1
ABC RESULTS:             NA2X1 cells:        6
ABC RESULTS:           NO2I1X1 cells:        1
ABC RESULTS:             NO2X1 cells:       12
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:       11
Removing temp directory.

23.6. Extracting gate netlist of module `\rv32i_alu' to `<abc-temp-dir>/input.blif'..
Extracted 1129 gates and 1207 wires to a netlist network with 78 inputs and 36 outputs.

23.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib 
ABC: Parsing finished successfully.  Parsing time =     0.19 sec
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX8".
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX4".
ABC: Scl_LibertyReadGenlib() skipped cell "SIGNALHOLD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBE" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBEBUX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN25" without logic function.
ABC: Library "D_CELLS_MOS_typ_3_30V_25C" from "/ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib" has 365 cells (260 skipped: 144 seq; 56 tri-state; 60 no func).  Time =     0.30 sec
ABC: Memory =   20.80 MB. Time =     0.30 sec
ABC: Warning: Detected 8 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -D 6000 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 -D 6000 
ABC: + write_blif <abc-temp-dir>/output.blif 

23.6.2. Re-integrating ABC results.
ABC RESULTS:           AN211X1 cells:        7
ABC RESULTS:            AN21X1 cells:       12
ABC RESULTS:           AN221X1 cells:        9
ABC RESULTS:            AN22X1 cells:       34
ABC RESULTS:           AN311X1 cells:        4
ABC RESULTS:            AN31X1 cells:       18
ABC RESULTS:            AN32X1 cells:        3
ABC RESULTS:            AND2X2 cells:       28
ABC RESULTS:            AND3X4 cells:       11
ABC RESULTS:            AND5X1 cells:        3
ABC RESULTS:            AO22X2 cells:        3
ABC RESULTS:           AO311X1 cells:        2
ABC RESULTS:            AO31X1 cells:        2
ABC RESULTS:             EN2X1 cells:       65
ABC RESULTS:             EO2X1 cells:        5
ABC RESULTS:              INX1 cells:      105
ABC RESULTS:            MU2IX1 cells:      126
ABC RESULTS:             MU2X1 cells:       24
ABC RESULTS:           NA2I1X1 cells:       54
ABC RESULTS:             NA2X1 cells:      307
ABC RESULTS:           NA3I1X1 cells:        5
ABC RESULTS:             NA3X1 cells:        4
ABC RESULTS:           NO2I1X1 cells:        7
ABC RESULTS:             NO2X1 cells:      154
ABC RESULTS:           NO3I1X1 cells:        3
ABC RESULTS:             NO3X1 cells:        6
ABC RESULTS:            OA21X4 cells:        2
ABC RESULTS:           OA221X1 cells:        2
ABC RESULTS:           OA311X4 cells:        1
ABC RESULTS:           ON211X1 cells:       20
ABC RESULTS:            ON21X1 cells:       29
ABC RESULTS:           ON221X1 cells:        6
ABC RESULTS:            ON22X1 cells:       56
ABC RESULTS:           ON311X1 cells:        5
ABC RESULTS:            ON31X1 cells:       20
ABC RESULTS:            ON32X1 cells:        7
ABC RESULTS:             OR2X2 cells:        3
ABC RESULTS:        internal signals:     1093
ABC RESULTS:           input signals:       78
ABC RESULTS:          output signals:       36
Removing temp directory.

23.7. Extracting gate netlist of module `\rv32i_branch_unit' to `<abc-temp-dir>/input.blif'..
Extracted 22 gates and 29 wires to a netlist network with 7 inputs and 1 outputs.

23.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib 
ABC: Parsing finished successfully.  Parsing time =     0.21 sec
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX8".
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX4".
ABC: Scl_LibertyReadGenlib() skipped cell "SIGNALHOLD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBE" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBEBUX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN25" without logic function.
ABC: Library "D_CELLS_MOS_typ_3_30V_25C" from "/ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib" has 365 cells (260 skipped: 144 seq; 56 tri-state; 60 no func).  Time =     0.31 sec
ABC: Memory =   20.80 MB. Time =     0.31 sec
ABC: Warning: Detected 8 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -D 6000 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 -D 6000 
ABC: + write_blif <abc-temp-dir>/output.blif 

23.7.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:             EN2X1 cells:        1
ABC RESULTS:             MU2X1 cells:        1
ABC RESULTS:             NA2X1 cells:        1
ABC RESULTS:           NO2I1X1 cells:        2
ABC RESULTS:             NO2X1 cells:        3
ABC RESULTS:           ON211X1 cells:        1
ABC RESULTS:           ON311X1 cells:        1
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        1
Removing temp directory.

23.8. Extracting gate netlist of module `\rv32i_extender' to `<abc-temp-dir>/input.blif'..
Extracted 80 gates and 108 wires to a netlist network with 28 inputs and 24 outputs.

23.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib 
ABC: Parsing finished successfully.  Parsing time =     0.19 sec
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX8".
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX4".
ABC: Scl_LibertyReadGenlib() skipped cell "SIGNALHOLD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBE" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBEBUX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN25" without logic function.
ABC: Library "D_CELLS_MOS_typ_3_30V_25C" from "/ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib" has 365 cells (260 skipped: 144 seq; 56 tri-state; 60 no func).  Time =     0.30 sec
ABC: Memory =   20.80 MB. Time =     0.30 sec
ABC: Warning: Detected 8 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -D 6000 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 -D 6000 
ABC: + write_blif <abc-temp-dir>/output.blif 

23.8.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:              INX1 cells:        2
ABC RESULTS:             NA2X1 cells:       49
ABC RESULTS:           NA3I1X1 cells:        1
ABC RESULTS:           NO2I1X1 cells:        1
ABC RESULTS:             NO2X1 cells:        2
ABC RESULTS:        internal signals:       56
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:       24
Removing temp directory.

23.9. Extracting gate netlist of module `\rv32i_imm_gen' to `<abc-temp-dir>/input.blif'..
Extracted 131 gates and 161 wires to a netlist network with 30 inputs and 31 outputs.

23.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib 
ABC: Parsing finished successfully.  Parsing time =     0.20 sec
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "BTLX8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLHX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITHX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLCX8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX12".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX20".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX3".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "ITLX8".
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCNX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "LSOGCPX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRRX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSQX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRSX4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFRX4".
ABC: Scl_LibertyReadGenlib() skipped cell "SIGNALHOLD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBE" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "MPROBEBUX8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "FEEDCAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "DECAP25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "R_FEED25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELL25" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN5" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN10" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNACELLN25" without logic function.
ABC: Library "D_CELLS_MOS_typ_3_30V_25C" from "/ef/tech/XFAB/EFXH035B/libs.ref/liberty/D_CELLS/PVT_3_30V_range/D_CELLS_MOS_typ_3_30V_25C.lib" has 365 cells (260 skipped: 144 seq; 56 tri-state; 60 no func).  Time =     0.31 sec
ABC: Memory =   20.80 MB. Time =     0.31 sec
ABC: Warning: Detected 8 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -D 6000 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 -D 6000 
ABC: + write_blif <abc-temp-dir>/output.blif 

23.9.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        7
ABC RESULTS:            AND3X4 cells:        1
ABC RESULTS:           AO211X4 cells:        1
ABC RESULTS:            AO22X2 cells:        5
ABC RESULTS:            AO32X4 cells:        1
ABC RESULTS:              INX1 cells:        4
ABC RESULTS:           NA2I1X1 cells:        2
ABC RESULTS:             NA2X1 cells:       41
ABC RESULTS:           NO2I1X1 cells:        1
ABC RESULTS:             NO2X1 cells:        2
ABC RESULTS:             NO3X1 cells:        2
ABC RESULTS:            ON21X1 cells:        1
ABC RESULTS:        internal signals:      100
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       31
Removing temp directory.

24. Executing FLATTEN pass (flatten design).
Mapping rv32_CPU_v2.IMMGen using rv32i_imm_gen.
Mapping rv32_CPU_v2.PCU using rv32PCUnit.
Mapping rv32_CPU_v2.EXT using rv32i_extender.
Mapping rv32_CPU_v2.ALU using rv32i_alu.
Mapping rv32_CPU_v2.CTRL using rv32CU.
Mapping rv32_CPU_v2.CNTR using rv32Counters.
Mapping rv32_CPU_v2.CTRL.IDEC1 using rv32dec.
Mapping rv32_CPU_v2.CTRL.BR using rv32i_branch_unit.
Mapping rv32_CPU_v2.CTRL.IDEC2 using rv32dec.
Mapping rv32_CPU_v2.CTRL.IDEC0 using rv32dec.
No more expansions possible.
Deleting now unused module rv32CU.
Deleting now unused module rv32Counters.
Deleting now unused module rv32PCUnit.
Deleting now unused module rv32dec.
Deleting now unused module rv32i_alu.
Deleting now unused module rv32i_branch_unit.
Deleting now unused module rv32i_extender.
Deleting now unused module rv32i_imm_gen.
Removed 78 unused cells and 4671 unused wires.

25. Executing HILOMAP pass (mapping to constant drivers).

26. Executing HILOMAP pass (mapping to constant drivers).

27. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port rv32_CPU_v2.IRQ: Missing option -inpad.
Don't map input port rv32_CPU_v2.IRQnum: Missing option -inpad.
Mapping port rv32_CPU_v2.baddr using BUX2.
Mapping port rv32_CPU_v2.bdi using BUX2.
Don't map input port rv32_CPU_v2.bdo: Missing option -inpad.
Mapping port rv32_CPU_v2.bsz using BUX2.
Mapping port rv32_CPU_v2.bwr using BUX2.
Don't map input port rv32_CPU_v2.clk: Missing option -inpad.
Mapping port rv32_CPU_v2.extA using BUX2.
Mapping port rv32_CPU_v2.extB using BUX2.
Don't map input port rv32_CPU_v2.extDone: Missing option -inpad.
Mapping port rv32_CPU_v2.extFunc3 using BUX2.
Don't map input port rv32_CPU_v2.extR: Missing option -inpad.
Mapping port rv32_CPU_v2.extStart using BUX2.
Mapping port rv32_CPU_v2.rfD using BUX2.
Don't map input port rv32_CPU_v2.rfRS1: Missing option -inpad.
Don't map input port rv32_CPU_v2.rfRS2: Missing option -inpad.
Mapping port rv32_CPU_v2.rfrd using BUX2.
Mapping port rv32_CPU_v2.rfrs1 using BUX2.
Mapping port rv32_CPU_v2.rfrs2 using BUX2.
Mapping port rv32_CPU_v2.rfwr using BUX2.
Don't map input port rv32_CPU_v2.rst: Missing option -inpad.

28. Executing OPT pass (performing simple optimizations).

28.1. Executing OPT_EXPR pass (perform const folding).

28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32_CPU_v2'.
Removed a total of 0 cells.

28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rv32_CPU_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rv32_CPU_v2.
Performed a total of 0 changes.

28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rv32_CPU_v2'.
Removed a total of 0 cells.

28.6. Executing OPT_RMDFF pass (remove dff with constant values).
Replaced 0 DFF cells.

28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rv32_CPU_v2..

28.8. Executing OPT_EXPR pass (perform const folding).

28.9. Finished OPT passes. (There is nothing left to do.)

29. Executing BLIF backend.

30. Printing statistics.

=== rv32_CPU_v2 ===

   Number of wires:               2867
   Number of wire bits:           4189
   Number of public wires:        2867
   Number of public wire bits:    4189
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3947
     AN211X1                        42
     AN21X1                         64
     AN221X1                         9
     AN22X1                         74
     AN311X1                         4
     AN31X1                         84
     AN32X1                          3
     AND2X2                        106
     AND3X4                         17
     AND4X1                          7
     AND5X1                          5
     AO211X4                         1
     AO22X2                         30
     AO311X1                         2
     AO31X1                          3
     AO32X4                          1
     BUX2                          183
     DFRQX1                        134
     DFRRQX1                       259
     DFRSQX1                         5
     EN2X1                         133
     EO2X1                          10
     INX1                          361
     MU2IX1                        276
     MU2X1                         258
     NA2I1X1                       134
     NA2X1                         816
     NA3I1X1                        26
     NA3X1                           9
     NA5X4                           1
     NO2I1X1                        20
     NO2X1                         456
     NO3I1X1                         4
     NO3X1                          18
     OA211X4                         1
     OA21X4                          2
     OA221X1                         3
     OA311X4                         1
     ON211X1                        65
     ON21X1                         50
     ON221X1                         6
     ON22X1                        111
     ON311X1                         8
     ON31X1                        126
     ON32X1                          7
     OR2X2                          12

End of script. Logfile hash: f4a94437b2
CPU: user 17.37s system 0.53s, MEM: 92.69 MB total, 65.32 MB resident
Yosys 0.6+138 (git sha1 7cddab0, gcc 4.7.4 -fPIC -Os)
Time spent: 63% 6x share (11 sec), 5% 24x opt_expr (0 sec), ...
